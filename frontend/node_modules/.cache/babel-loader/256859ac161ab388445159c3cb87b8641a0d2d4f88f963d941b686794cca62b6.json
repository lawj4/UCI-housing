{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2024 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.distinctValues = distinctValues;\nexports.deterministicJSONStringify = deterministicJSONStringify;\n/**\n * Returns an array of distinct values. Order is not guaranteed.\n * @param values - The values to filter. Should be JSON-serializable.\n * @return - An array of distinct values.\n */\nfunction distinctValues(values) {\n  const map = new Map();\n  for (const value of values) {\n    map.set(deterministicJSONStringify(value), value);\n  }\n  return Array.from(map.values());\n}\n/**\n * Returns a stringified version of the object with keys sorted. This is required to\n * ensure that the stringified version of an object is deterministic independent of the\n * order of keys.\n * @param obj\n * @return {string}\n */\nfunction deterministicJSONStringify(obj) {\n  return JSON.stringify(normalizeObject(obj));\n}\nfunction normalizeObject(obj) {\n  if (obj === undefined || obj === null || Array.isArray(obj) || typeof obj !== 'object') {\n    return obj;\n  }\n  // Copy the original object key and values to a new object in sorted order.\n  const newObj = {};\n  for (const key of Object.keys(obj).sort()) {\n    const value = obj[key];\n    newObj[key] = normalizeObject(value); // Recursively sort nested objects\n  }\n  return newObj;\n}","map":{"version":3,"names":["exports","distinctValues","deterministicJSONStringify","values","map","Map","value","set","Array","from","obj","JSON","stringify","normalizeObject","undefined","isArray","newObj","key","Object","keys","sort"],"sources":["../../../src/utils/DistinctValues.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAsBAA,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAeAD,OAAA,CAAAE,0BAAA,GAAAA,0BAAA;AApBA;;;;;AAKA,SAAgBD,cAAcA,CAAIE,MAAW;EAC3C,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAa;EAChC,KAAK,MAAMC,KAAK,IAAIH,MAAM,EAAE;IAC1BC,GAAG,CAACG,GAAG,CAACL,0BAA0B,CAACI,KAAK,CAAC,EAAEA,KAAK,CAAC;EACnD;EACA,OAAOE,KAAK,CAACC,IAAI,CAACL,GAAG,CAACD,MAAM,EAAE,CAAC;AACjC;AAEA;;;;;;;AAOA,SAAgBD,0BAA0BA,CAACQ,GAAY;EACrD,OAAOC,IAAI,CAACC,SAAS,CAACC,eAAe,CAACH,GAAG,CAAC,CAAC;AAC7C;AAEA,SAASG,eAAeA,CAACH,GAAQ;EAC/B,IACEA,GAAG,KAAKI,SAAS,IACjBJ,GAAG,KAAK,IAAI,IACZF,KAAK,CAACO,OAAO,CAACL,GAAG,CAAC,IAClB,OAAOA,GAAG,KAAK,QAAQ,EACvB;IACA,OAAOA,GAAG;EACZ;EAEA;EACA,MAAMM,MAAM,GAAQ,EAAE;EACtB,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACT,GAAG,CAAC,CAACU,IAAI,EAAE,EAAE;IACzC,MAAMd,KAAK,GAAGI,GAAG,CAACO,GAAG,CAAC;IACtBD,MAAM,CAACC,GAAG,CAAC,GAAGJ,eAAe,CAACP,KAAK,CAAC,CAAC,CAAC;EACxC;EAEA,OAAOU,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}