{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextQueryHandler = void 0;\nconst QueryHandler_js_1 = require(\"./QueryHandler.js\");\n/**\n * @internal\n */\nclass TextQueryHandler extends QueryHandler_js_1.QueryHandler {\n  static querySelectorAll = (element, selector, {\n    textQuerySelectorAll\n  }) => {\n    return textQuerySelectorAll(element, selector);\n  };\n}\nexports.TextQueryHandler = TextQueryHandler;","map":{"version":3,"names":["QueryHandler_js_1","require","TextQueryHandler","QueryHandler","querySelectorAll","element","selector","textQuerySelectorAll","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/common/TextQueryHandler.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {QueryHandler, type QuerySelectorAll} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class TextQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {textQuerySelectorAll}\n  ) => {\n    return textQuerySelectorAll(element, selector);\n  };\n}\n"],"mappings":";;AAAA;;;;;;;;;AAMA,MAAAA,iBAAA,GAAAC,OAAA;AAEA;;;AAGA,MAAaC,gBAAiB,SAAQF,iBAAA,CAAAG,YAAY;EAChD,OAAgBC,gBAAgB,GAAqBA,CACnDC,OAAO,EACPC,QAAQ,EACR;IAACC;EAAoB,CAAC,KACpB;IACF,OAAOA,oBAAoB,CAACF,OAAO,EAAEC,QAAQ,CAAC;EAChD,CAAC;;AAPHE,OAAA,CAAAN,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}