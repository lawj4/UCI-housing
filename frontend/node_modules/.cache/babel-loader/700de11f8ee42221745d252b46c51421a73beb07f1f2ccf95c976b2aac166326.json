{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mutex = void 0;\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nconst Deferred_js_1 = require(\"./Deferred.js\");\nconst disposable_js_1 = require(\"./disposable.js\");\n/**\n * @internal\n */\nclass Mutex {\n  static Guard = class Guard {\n    #mutex;\n    #onRelease;\n    constructor(mutex, onRelease) {\n      this.#mutex = mutex;\n      this.#onRelease = onRelease;\n    }\n    [disposable_js_1.disposeSymbol]() {\n      this.#onRelease?.();\n      return this.#mutex.release();\n    }\n  };\n  #locked = false;\n  #acquirers = [];\n  // This is FIFO.\n  async acquire(onRelease) {\n    if (!this.#locked) {\n      this.#locked = true;\n      return new Mutex.Guard(this);\n    }\n    const deferred = Deferred_js_1.Deferred.create();\n    this.#acquirers.push(deferred.resolve.bind(deferred));\n    await deferred.valueOrThrow();\n    return new Mutex.Guard(this, onRelease);\n  }\n  release() {\n    const resolve = this.#acquirers.shift();\n    if (!resolve) {\n      this.#locked = false;\n      return;\n    }\n    resolve();\n  }\n}\nexports.Mutex = Mutex;","map":{"version":3,"names":["Deferred_js_1","require","disposable_js_1","Mutex","Guard","mutex","onRelease","constructor","disposeSymbol","release","locked","acquirers","acquire","deferred","Deferred","create","push","resolve","bind","valueOrThrow","shift","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/util/Mutex.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {Deferred} from './Deferred.js';\nimport {disposeSymbol} from './disposable.js';\n\n/**\n * @internal\n */\nexport class Mutex {\n  static Guard = class Guard {\n    #mutex: Mutex;\n    #onRelease?: () => void;\n    constructor(mutex: Mutex, onRelease?: () => void) {\n      this.#mutex = mutex;\n      this.#onRelease = onRelease;\n    }\n    [disposeSymbol](): void {\n      this.#onRelease?.();\n      return this.#mutex.release();\n    }\n  };\n\n  #locked = false;\n  #acquirers: Array<() => void> = [];\n\n  // This is FIFO.\n  async acquire(\n    onRelease?: () => void\n  ): Promise<InstanceType<typeof Mutex.Guard>> {\n    if (!this.#locked) {\n      this.#locked = true;\n      return new Mutex.Guard(this);\n    }\n    const deferred = Deferred.create<void>();\n    this.#acquirers.push(deferred.resolve.bind(deferred));\n    await deferred.valueOrThrow();\n    return new Mutex.Guard(this, onRelease);\n  }\n\n  release(): void {\n    const resolve = this.#acquirers.shift();\n    if (!resolve) {\n      this.#locked = false;\n      return;\n    }\n    resolve();\n  }\n}\n"],"mappings":";;;;;;AAAA;;;;;AAKA,MAAAA,aAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AAEA;;;AAGA,MAAaE,KAAK;EAChB,OAAOC,KAAK,GAAG,MAAMA,KAAK;IACxB,CAAAC,KAAM;IACN,CAAAC,SAAU;IACVC,YAAYF,KAAY,EAAEC,SAAsB;MAC9C,IAAI,CAAC,CAAAD,KAAM,GAAGA,KAAK;MACnB,IAAI,CAAC,CAAAC,SAAU,GAAGA,SAAS;IAC7B;IACA,CAACJ,eAAA,CAAAM,aAAa,IAAC;MACb,IAAI,CAAC,CAAAF,SAAU,GAAE,CAAE;MACnB,OAAO,IAAI,CAAC,CAAAD,KAAM,CAACI,OAAO,EAAE;IAC9B;GACD;EAED,CAAAC,MAAO,GAAG,KAAK;EACf,CAAAC,SAAU,GAAsB,EAAE;EAElC;EACA,MAAMC,OAAOA,CACXN,SAAsB;IAEtB,IAAI,CAAC,IAAI,CAAC,CAAAI,MAAO,EAAE;MACjB,IAAI,CAAC,CAAAA,MAAO,GAAG,IAAI;MACnB,OAAO,IAAIP,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC;IAC9B;IACA,MAAMS,QAAQ,GAAGb,aAAA,CAAAc,QAAQ,CAACC,MAAM,EAAQ;IACxC,IAAI,CAAC,CAAAJ,SAAU,CAACK,IAAI,CAACH,QAAQ,CAACI,OAAO,CAACC,IAAI,CAACL,QAAQ,CAAC,CAAC;IACrD,MAAMA,QAAQ,CAACM,YAAY,EAAE;IAC7B,OAAO,IAAIhB,KAAK,CAACC,KAAK,CAAC,IAAI,EAAEE,SAAS,CAAC;EACzC;EAEAG,OAAOA,CAAA;IACL,MAAMQ,OAAO,GAAG,IAAI,CAAC,CAAAN,SAAU,CAACS,KAAK,EAAE;IACvC,IAAI,CAACH,OAAO,EAAE;MACZ,IAAI,CAAC,CAAAP,MAAO,GAAG,KAAK;MACpB;IACF;IACAO,OAAO,EAAE;EACX;;AAtCFI,OAAA,CAAAlB,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}