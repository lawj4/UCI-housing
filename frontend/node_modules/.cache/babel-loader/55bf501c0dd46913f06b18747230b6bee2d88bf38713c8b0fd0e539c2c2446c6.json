{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst ProcessingQueue_js_1 = require(\"../utils/ProcessingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst CdpTargetManager_js_1 = require(\"./modules/cdp/CdpTargetManager.js\");\nconst BrowsingContextStorage_js_1 = require(\"./modules/context/BrowsingContextStorage.js\");\nconst NetworkStorage_js_1 = require(\"./modules/network/NetworkStorage.js\");\nconst PreloadScriptStorage_js_1 = require(\"./modules/script/PreloadScriptStorage.js\");\nconst RealmStorage_js_1 = require(\"./modules/script/RealmStorage.js\");\nconst EventManager_js_1 = require(\"./modules/session/EventManager.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n  #messageQueue;\n  #transport;\n  #commandProcessor;\n  #eventManager;\n  #browsingContextStorage = new BrowsingContextStorage_js_1.BrowsingContextStorage();\n  #realmStorage = new RealmStorage_js_1.RealmStorage();\n  #preloadScriptStorage = new PreloadScriptStorage_js_1.PreloadScriptStorage();\n  #logger;\n  #handleIncomingMessage = message => {\n    void this.#commandProcessor.processCommand(message).catch(error => {\n      this.#logger?.(log_js_1.LogType.debugError, error);\n    });\n  };\n  #processOutgoingMessage = async messageEntry => {\n    const message = messageEntry.message;\n    if (messageEntry.channel !== null) {\n      message['channel'] = messageEntry.channel;\n    }\n    await this.#transport.sendMessage(message);\n  };\n  constructor(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, parser, logger) {\n    super();\n    this.#logger = logger;\n    this.#messageQueue = new ProcessingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, this.#logger);\n    this.#transport = bidiTransport;\n    this.#transport.setOnMessage(this.#handleIncomingMessage);\n    this.#eventManager = new EventManager_js_1.EventManager(this.#browsingContextStorage);\n    const networkStorage = new NetworkStorage_js_1.NetworkStorage(this.#eventManager, this.#browsingContextStorage, browserCdpClient, logger);\n    this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(cdpConnection, browserCdpClient, this.#eventManager, this.#browsingContextStorage, this.#realmStorage, this.#preloadScriptStorage, networkStorage, parser, async options => {\n      // This is required to ignore certificate errors when service worker is fetched.\n      await browserCdpClient.sendCommand('Security.setIgnoreCertificateErrors', {\n        ignore: options.acceptInsecureCerts ?? false\n      });\n      new CdpTargetManager_js_1.CdpTargetManager(cdpConnection, browserCdpClient, selfTargetId, this.#eventManager, this.#browsingContextStorage, this.#realmStorage, networkStorage, this.#preloadScriptStorage, defaultUserContextId, options?.unhandledPromptBehavior, logger);\n      // Needed to get events about new targets.\n      await browserCdpClient.sendCommand('Target.setDiscoverTargets', {\n        discover: true\n      });\n      // Needed to automatically attach to new targets.\n      await browserCdpClient.sendCommand('Target.setAutoAttach', {\n        autoAttach: true,\n        waitForDebuggerOnStart: true,\n        flatten: true\n      });\n      await this.#topLevelContextsLoaded();\n    }, this.#logger);\n    this.#eventManager.on(\"event\" /* EventManagerEvents.Event */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n    this.#commandProcessor.on(\"response\" /* CommandProcessorEvents.Response */, ({\n      message,\n      event\n    }) => {\n      this.emitOutgoingMessage(message, event);\n    });\n  }\n  /**\n   * Creates and starts BiDi Mapper instance.\n   */\n  static async createAndStart(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, parser, logger) {\n    // The default context is not exposed in Target.getBrowserContexts but can\n    // be observed via Target.getTargets. To determine the default browser\n    // context, we check which one is mentioned in Target.getTargets and not in\n    // Target.getBrowserContexts.\n    const [{\n      browserContextIds\n    }, {\n      targetInfos\n    }] = await Promise.all([browserCdpClient.sendCommand('Target.getBrowserContexts'), browserCdpClient.sendCommand('Target.getTargets')]);\n    let defaultUserContextId = 'default';\n    for (const info of targetInfos) {\n      if (info.browserContextId && !browserContextIds.includes(info.browserContextId)) {\n        defaultUserContextId = info.browserContextId;\n        break;\n      }\n    }\n    const server = new BidiServer(bidiTransport, cdpConnection, browserCdpClient, selfTargetId, defaultUserContextId, parser, logger);\n    return server;\n  }\n  /**\n   * Sends BiDi message.\n   */\n  emitOutgoingMessage(messageEntry, event) {\n    this.#messageQueue.add(messageEntry, event);\n  }\n  close() {\n    this.#transport.close();\n  }\n  async #topLevelContextsLoaded() {\n    await Promise.all(this.#browsingContextStorage.getTopLevelContexts().map(c => c.lifecycleLoaded()));\n  }\n}\nexports.BidiServer = BidiServer;","map":{"version":3,"names":["EventEmitter_js_1","require","log_js_1","ProcessingQueue_js_1","CommandProcessor_js_1","CdpTargetManager_js_1","BrowsingContextStorage_js_1","NetworkStorage_js_1","PreloadScriptStorage_js_1","RealmStorage_js_1","EventManager_js_1","BidiServer","EventEmitter","messageQueue","transport","commandProcessor","eventManager","browsingContextStorage","BrowsingContextStorage","realmStorage","RealmStorage","preloadScriptStorage","PreloadScriptStorage","logger","handleIncomingMessage","message","processCommand","catch","error","LogType","debugError","processOutgoingMessage","messageEntry","channel","sendMessage","constructor","bidiTransport","cdpConnection","browserCdpClient","selfTargetId","defaultUserContextId","parser","ProcessingQueue","setOnMessage","EventManager","networkStorage","NetworkStorage","CommandProcessor","options","sendCommand","ignore","acceptInsecureCerts","CdpTargetManager","unhandledPromptBehavior","discover","autoAttach","waitForDebuggerOnStart","flatten","topLevelContextsLoaded","on","event","emitOutgoingMessage","createAndStart","browserContextIds","targetInfos","Promise","all","info","browserContextId","includes","server","add","close","#topLevelContextsLoaded","getTopLevelContexts","map","c","lifecycleLoaded","exports"],"sources":["../../../src/bidiMapper/BidiServer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}