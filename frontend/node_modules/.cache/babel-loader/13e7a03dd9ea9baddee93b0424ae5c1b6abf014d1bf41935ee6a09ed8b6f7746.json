{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionManager = void 0;\nexports.cartesianProduct = cartesianProduct;\nexports.unrollEvents = unrollEvents;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst events_js_1 = require(\"./events.js\");\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n  return a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n}\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n  const allEvents = new Set();\n  function addEvents(events) {\n    for (const event of events) {\n      allEvents.add(event);\n    }\n  }\n  for (const event of events) {\n    switch (event) {\n      case protocol_js_1.ChromiumBidi.BiDiModule.BrowsingContext:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.BrowsingContext.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Log:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Log.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Network:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Network.EventNames));\n        break;\n      case protocol_js_1.ChromiumBidi.BiDiModule.Script:\n        addEvents(Object.values(protocol_js_1.ChromiumBidi.Script.EventNames));\n        break;\n      default:\n        allEvents.add(event);\n    }\n  }\n  return [...allEvents.values()];\n}\nclass SubscriptionManager {\n  #subscriptionPriority = 0;\n  // BrowsingContext `null` means the event has subscription across all the\n  // browsing contexts.\n  // Channel `null` means no `channel` should be added.\n  #channelToContextToEventMap = new Map();\n  #browsingContextStorage;\n  constructor(browsingContextStorage) {\n    this.#browsingContextStorage = browsingContextStorage;\n  }\n  getChannelsSubscribedToEvent(eventMethod, contextId) {\n    const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys()).map(channel => ({\n      priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n      channel\n    })).filter(({\n      priority\n    }) => priority !== null);\n    // Sort channels by priority.\n    return prioritiesAndChannels.sort((a, b) => a.priority - b.priority).map(({\n      channel\n    }) => channel);\n  }\n  #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (contextToEventMap === undefined) {\n      return null;\n    }\n    const maybeTopLevelContextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    // `null` covers global subscription.\n    const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n    // Get all the subscription priorities.\n    const priorities = relevantContexts.map(context => {\n      // Get the priority for exact event name\n      const priority = contextToEventMap.get(context)?.get(eventMethod);\n      // For CDP we can't provide specific event name when subscribing\n      // to the module directly.\n      // Because of that we need to see event `cdp` exits in the map.\n      if ((0, events_js_1.isCdpEvent)(eventMethod)) {\n        const cdpPriority = contextToEventMap.get(context)?.get(protocol_js_1.ChromiumBidi.BiDiModule.Cdp);\n        // If we subscribe to the event directly and `cdp` module as well\n        // priority will be different we take minimal priority\n        return priority && cdpPriority ? Math.min(priority, cdpPriority) :\n        // At this point we know that we have subscribed\n        // to only one of the two\n        priority ?? cdpPriority;\n      }\n      return priority;\n    }).filter(p => p !== undefined);\n    if (priorities.length === 0) {\n      // Not subscribed, return null.\n      return null;\n    }\n    // Return minimal priority.\n    return Math.min(...priorities);\n  }\n  /**\n   * @param module BiDi+ module\n   * @param contextId `null` == globally subscribed\n   *\n   * @returns\n   */\n  isSubscribedTo(moduleOrEvent, contextId = null) {\n    const topLevelContext = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    for (const browserContextToEventMap of this.#channelToContextToEventMap.values()) {\n      for (const [id, eventMap] of browserContextToEventMap.entries()) {\n        // Not subscribed to this context or globally\n        if (topLevelContext !== id && id !== null) {\n          continue;\n        }\n        for (const event of eventMap.keys()) {\n          // This also covers the `cdp` case where\n          // we don't unroll the event names\n          if (\n          // Event explicitly subscribed\n          event === moduleOrEvent ||\n          // Event subscribed via module\n          event === moduleOrEvent.split('.').at(0) ||\n          // Event explicitly subscribed compared to module\n          event.split('.').at(0) === moduleOrEvent) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Subscribes to event in the given context and channel.\n   * @param {EventNames} event\n   * @param {BrowsingContext.BrowsingContext | null} contextId\n   * @param {BidiPlusChannel} channel\n   * @return {SubscriptionItem[]} List of\n   * subscriptions. If the event is a whole module, it will return all the specific\n   * events. If the contextId is null, it will return all the top-level contexts which were\n   * not subscribed before the command.\n   */\n  subscribe(event, contextId, channel) {\n    // All the subscriptions are handled on the top-level contexts.\n    contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    // Check if subscribed event is a whole module\n    switch (event) {\n      case protocol_js_1.ChromiumBidi.BiDiModule.BrowsingContext:\n        return Object.values(protocol_js_1.ChromiumBidi.BrowsingContext.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel)).flat();\n      case protocol_js_1.ChromiumBidi.BiDiModule.Log:\n        return Object.values(protocol_js_1.ChromiumBidi.Log.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel)).flat();\n      case protocol_js_1.ChromiumBidi.BiDiModule.Network:\n        return Object.values(protocol_js_1.ChromiumBidi.Network.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel)).flat();\n      case protocol_js_1.ChromiumBidi.BiDiModule.Script:\n        return Object.values(protocol_js_1.ChromiumBidi.Script.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel)).flat();\n      default:\n      // Intentionally left empty.\n    }\n    if (!this.#channelToContextToEventMap.has(channel)) {\n      this.#channelToContextToEventMap.set(channel, new Map());\n    }\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (!contextToEventMap.has(contextId)) {\n      contextToEventMap.set(contextId, new Map());\n    }\n    const eventMap = contextToEventMap.get(contextId);\n    const affectedContextIds = (contextId === null ? this.#browsingContextStorage.getTopLevelContexts().map(c => c.id) : [contextId]\n    // There can be contexts that are already subscribed to the event. Do not include\n    // them to the output.\n    ).filter(contextId => !this.isSubscribedTo(event, contextId));\n    if (!eventMap.has(event)) {\n      // Add subscription only if it's not already subscribed.\n      eventMap.set(event, this.#subscriptionPriority++);\n    }\n    return affectedContextIds.map(contextId => ({\n      event,\n      contextId\n    }));\n  }\n  /**\n   * Unsubscribes atomically from all events in the given contexts and channel.\n   */\n  unsubscribeAll(events, contextIds, channel) {\n    // Assert all contexts are known.\n    for (const contextId of contextIds) {\n      if (contextId !== null) {\n        this.#browsingContextStorage.getContext(contextId);\n      }\n    }\n    const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n    // Assert all unsubscriptions are valid.\n    // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n    eventContextPairs.map(([event, contextId]) => this.#checkUnsubscribe(event, contextId, channel)).forEach(unsubscribe => unsubscribe());\n  }\n  /**\n   * Unsubscribes from the event in the given context and channel.\n   * Syntactic sugar for \"unsubscribeAll\".\n   */\n  unsubscribe(eventName, contextId, channel) {\n    this.unsubscribeAll([eventName], [contextId], channel);\n  }\n  #checkUnsubscribe(event, contextId, channel) {\n    // All the subscriptions are handled on the top-level contexts.\n    contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    if (!this.#channelToContextToEventMap.has(channel)) {\n      throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (!contextToEventMap.has(contextId)) {\n      throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    const eventMap = contextToEventMap.get(contextId);\n    if (!eventMap.has(event)) {\n      throw new protocol_js_1.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    return () => {\n      eventMap.delete(event);\n      // Clean up maps if empty.\n      if (eventMap.size === 0) {\n        contextToEventMap.delete(event);\n      }\n      if (contextToEventMap.size === 0) {\n        this.#channelToContextToEventMap.delete(channel);\n      }\n    };\n  }\n}\nexports.SubscriptionManager = SubscriptionManager;","map":{"version":3,"names":["exports","cartesianProduct","unrollEvents","protocol_js_1","require","events_js_1","a","reduce","b","flatMap","d","map","e","flat","events","allEvents","Set","addEvents","event","add","ChromiumBidi","BiDiModule","BrowsingContext","Object","values","EventNames","Log","Network","Script","SubscriptionManager","subscriptionPriority","channelToContextToEventMap","Map","browsingContextStorage","constructor","getChannelsSubscribedToEvent","eventMethod","contextId","prioritiesAndChannels","Array","from","keys","channel","priority","getEventSubscriptionPriorityForChannel","filter","sort","#getEventSubscriptionPriorityForChannel","contextToEventMap","get","undefined","maybeTopLevelContextId","findTopLevelContextId","relevantContexts","priorities","context","isCdpEvent","cdpPriority","Cdp","Math","min","p","length","isSubscribedTo","moduleOrEvent","topLevelContext","browserContextToEventMap","id","eventMap","entries","split","at","subscribe","specificEvent","has","set","affectedContextIds","getTopLevelContexts","c","unsubscribeAll","contextIds","getContext","eventContextPairs","checkUnsubscribe","forEach","unsubscribe","eventName","#checkUnsubscribe","InvalidArgumentException","delete","size"],"sources":["../../../../../src/bidiMapper/modules/session/SubscriptionManager.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}