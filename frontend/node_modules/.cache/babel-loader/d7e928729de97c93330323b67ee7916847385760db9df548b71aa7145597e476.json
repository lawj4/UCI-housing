{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiConnection = void 0;\nconst CallbackRegistry_js_1 = require(\"../common/CallbackRegistry.js\");\nconst Debug_js_1 = require(\"../common/Debug.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst CDPSession_js_1 = require(\"./CDPSession.js\");\nconst debugProtocolSend = (0, Debug_js_1.debug)('puppeteer:webDriverBiDi:SEND ►');\nconst debugProtocolReceive = (0, Debug_js_1.debug)('puppeteer:webDriverBiDi:RECV ◀');\n/**\n * @internal\n */\nclass BidiConnection extends EventEmitter_js_1.EventEmitter {\n  #url;\n  #transport;\n  #delay;\n  #timeout = 0;\n  #closed = false;\n  #callbacks = new CallbackRegistry_js_1.CallbackRegistry();\n  #emitters = [];\n  constructor(url, transport, delay = 0, timeout) {\n    super();\n    this.#url = url;\n    this.#delay = delay;\n    this.#timeout = timeout ?? 180_000;\n    this.#transport = transport;\n    this.#transport.onmessage = this.onMessage.bind(this);\n    this.#transport.onclose = this.unbind.bind(this);\n  }\n  get closed() {\n    return this.#closed;\n  }\n  get url() {\n    return this.#url;\n  }\n  pipeTo(emitter) {\n    this.#emitters.push(emitter);\n  }\n  emit(type, event) {\n    for (const emitter of this.#emitters) {\n      emitter.emit(type, event);\n    }\n    return super.emit(type, event);\n  }\n  send(method, params, timeout) {\n    (0, assert_js_1.assert)(!this.#closed, 'Protocol error: Connection closed.');\n    return this.#callbacks.create(method, timeout ?? this.#timeout, id => {\n      const stringifiedMessage = JSON.stringify({\n        id,\n        method,\n        params\n      });\n      debugProtocolSend(stringifiedMessage);\n      this.#transport.send(stringifiedMessage);\n    });\n  }\n  /**\n   * @internal\n   */\n  async onMessage(message) {\n    if (this.#delay) {\n      await new Promise(f => {\n        return setTimeout(f, this.#delay);\n      });\n    }\n    debugProtocolReceive(message);\n    const object = JSON.parse(message);\n    if ('type' in object) {\n      switch (object.type) {\n        case 'success':\n          this.#callbacks.resolve(object.id, object);\n          return;\n        case 'error':\n          if (object.id === null) {\n            break;\n          }\n          this.#callbacks.reject(object.id, createProtocolError(object), `${object.error}: ${object.message}`);\n          return;\n        case 'event':\n          if (isCdpEvent(object)) {\n            CDPSession_js_1.BidiCdpSession.sessions.get(object.params.session)?.emit(object.params.event, object.params.params);\n            return;\n          }\n          // SAFETY: We know the method and parameter still match here.\n          this.emit(object.method, object.params);\n          return;\n      }\n    }\n    // Even if the response in not in BiDi protocol format but `id` is provided, reject\n    // the callback. This can happen if the endpoint supports CDP instead of BiDi.\n    if ('id' in object) {\n      this.#callbacks.reject(object.id, `Protocol Error. Message is not in BiDi protocol format: '${message}'`, object.message);\n    }\n    (0, util_js_1.debugError)(object);\n  }\n  /**\n   * Unbinds the connection, but keeps the transport open. Useful when the transport will\n   * be reused by other connection e.g. with different protocol.\n   * @internal\n   */\n  unbind() {\n    if (this.#closed) {\n      return;\n    }\n    this.#closed = true;\n    // Both may still be invoked and produce errors\n    this.#transport.onmessage = () => {};\n    this.#transport.onclose = () => {};\n    this.#callbacks.clear();\n  }\n  /**\n   * Unbinds the connection and closes the transport.\n   */\n  dispose() {\n    this.unbind();\n    this.#transport.close();\n  }\n  getPendingProtocolErrors() {\n    return this.#callbacks.getPendingProtocolErrors();\n  }\n}\nexports.BidiConnection = BidiConnection;\n/**\n * @internal\n */\nfunction createProtocolError(object) {\n  let message = `${object.error} ${object.message}`;\n  if (object.stacktrace) {\n    message += ` ${object.stacktrace}`;\n  }\n  return message;\n}\nfunction isCdpEvent(event) {\n  return event.method.startsWith('cdp.');\n}","map":{"version":3,"names":["CallbackRegistry_js_1","require","Debug_js_1","EventEmitter_js_1","util_js_1","assert_js_1","CDPSession_js_1","debugProtocolSend","debug","debugProtocolReceive","BidiConnection","EventEmitter","url","transport","delay","timeout","closed","callbacks","CallbackRegistry","emitters","constructor","onmessage","onMessage","bind","onclose","unbind","pipeTo","emitter","push","emit","type","event","send","method","params","assert","create","id","stringifiedMessage","JSON","stringify","message","Promise","f","setTimeout","object","parse","resolve","reject","createProtocolError","error","isCdpEvent","BidiCdpSession","sessions","get","session","debugError","clear","dispose","close","getPendingProtocolErrors","exports","stacktrace","startsWith"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/Connection.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {CallbackRegistry} from '../common/CallbackRegistry.js';\nimport type {ConnectionTransport} from '../common/ConnectionTransport.js';\nimport {debug} from '../common/Debug.js';\nimport type {EventsWithWildcard} from '../common/EventEmitter.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport {BidiCdpSession} from './CDPSession.js';\nimport type {\n  Commands as BidiCommands,\n  BidiEvents,\n  Connection,\n} from './core/Connection.js';\n\nconst debugProtocolSend = debug('puppeteer:webDriverBiDi:SEND ►');\nconst debugProtocolReceive = debug('puppeteer:webDriverBiDi:RECV ◀');\n\n/**\n * @internal\n */\nexport interface Commands extends BidiCommands {\n  'cdp.sendCommand': {\n    params: Bidi.Cdp.SendCommandParameters;\n    returnType: Bidi.Cdp.SendCommandResult;\n  };\n  'cdp.getSession': {\n    params: Bidi.Cdp.GetSessionParameters;\n    returnType: Bidi.Cdp.GetSessionResult;\n  };\n  'cdp.resolveRealm': {\n    params: Bidi.Cdp.ResolveRealmParameters;\n    returnType: Bidi.Cdp.ResolveRealmResult;\n  };\n}\n\n/**\n * @internal\n */\nexport class BidiConnection\n  extends EventEmitter<BidiEvents>\n  implements Connection\n{\n  #url: string;\n  #transport: ConnectionTransport;\n  #delay: number;\n  #timeout = 0;\n  #closed = false;\n  #callbacks = new CallbackRegistry();\n  #emitters: Array<EventEmitter<any>> = [];\n\n  constructor(\n    url: string,\n    transport: ConnectionTransport,\n    delay = 0,\n    timeout?: number\n  ) {\n    super();\n    this.#url = url;\n    this.#delay = delay;\n    this.#timeout = timeout ?? 180_000;\n\n    this.#transport = transport;\n    this.#transport.onmessage = this.onMessage.bind(this);\n    this.#transport.onclose = this.unbind.bind(this);\n  }\n\n  get closed(): boolean {\n    return this.#closed;\n  }\n\n  get url(): string {\n    return this.#url;\n  }\n\n  pipeTo<Events extends BidiEvents>(emitter: EventEmitter<Events>): void {\n    this.#emitters.push(emitter);\n  }\n\n  override emit<Key extends keyof EventsWithWildcard<BidiEvents>>(\n    type: Key,\n    event: EventsWithWildcard<BidiEvents>[Key]\n  ): boolean {\n    for (const emitter of this.#emitters) {\n      emitter.emit(type, event);\n    }\n    return super.emit(type, event);\n  }\n\n  send<T extends keyof Commands>(\n    method: T,\n    params: Commands[T]['params'],\n    timeout?: number\n  ): Promise<{result: Commands[T]['returnType']}> {\n    assert(!this.#closed, 'Protocol error: Connection closed.');\n\n    return this.#callbacks.create(method, timeout ?? this.#timeout, id => {\n      const stringifiedMessage = JSON.stringify({\n        id,\n        method,\n        params,\n      } as Bidi.Command);\n      debugProtocolSend(stringifiedMessage);\n      this.#transport.send(stringifiedMessage);\n    }) as Promise<{result: Commands[T]['returnType']}>;\n  }\n\n  /**\n   * @internal\n   */\n  protected async onMessage(message: string): Promise<void> {\n    if (this.#delay) {\n      await new Promise(f => {\n        return setTimeout(f, this.#delay);\n      });\n    }\n    debugProtocolReceive(message);\n    const object: Bidi.ChromiumBidi.Message = JSON.parse(message);\n    if ('type' in object) {\n      switch (object.type) {\n        case 'success':\n          this.#callbacks.resolve(object.id, object);\n          return;\n        case 'error':\n          if (object.id === null) {\n            break;\n          }\n          this.#callbacks.reject(\n            object.id,\n            createProtocolError(object),\n            `${object.error}: ${object.message}`\n          );\n          return;\n        case 'event':\n          if (isCdpEvent(object)) {\n            BidiCdpSession.sessions\n              .get(object.params.session)\n              ?.emit(object.params.event, object.params.params);\n            return;\n          }\n          // SAFETY: We know the method and parameter still match here.\n          this.emit(\n            object.method,\n            object.params as BidiEvents[keyof BidiEvents]\n          );\n          return;\n      }\n    }\n    // Even if the response in not in BiDi protocol format but `id` is provided, reject\n    // the callback. This can happen if the endpoint supports CDP instead of BiDi.\n    if ('id' in object) {\n      this.#callbacks.reject(\n        (object as {id: number}).id,\n        `Protocol Error. Message is not in BiDi protocol format: '${message}'`,\n        object.message\n      );\n    }\n    debugError(object);\n  }\n\n  /**\n   * Unbinds the connection, but keeps the transport open. Useful when the transport will\n   * be reused by other connection e.g. with different protocol.\n   * @internal\n   */\n  unbind(): void {\n    if (this.#closed) {\n      return;\n    }\n    this.#closed = true;\n    // Both may still be invoked and produce errors\n    this.#transport.onmessage = () => {};\n    this.#transport.onclose = () => {};\n\n    this.#callbacks.clear();\n  }\n\n  /**\n   * Unbinds the connection and closes the transport.\n   */\n  dispose(): void {\n    this.unbind();\n    this.#transport.close();\n  }\n\n  getPendingProtocolErrors(): Error[] {\n    return this.#callbacks.getPendingProtocolErrors();\n  }\n}\n\n/**\n * @internal\n */\nfunction createProtocolError(object: Bidi.ErrorResponse): string {\n  let message = `${object.error} ${object.message}`;\n  if (object.stacktrace) {\n    message += ` ${object.stacktrace}`;\n  }\n  return message;\n}\n\nfunction isCdpEvent(event: Bidi.ChromiumBidi.Event): event is Bidi.Cdp.Event {\n  return event.method.startsWith('cdp.');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}