{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LifecycleWatcher = void 0;\nconst Frame_js_1 = require(\"../api/Frame.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst NetworkManagerEvents_js_1 = require(\"../common/NetworkManagerEvents.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst FrameManagerEvents_js_1 = require(\"./FrameManagerEvents.js\");\nconst puppeteerToProtocolLifecycle = new Map([['load', 'load'], ['domcontentloaded', 'DOMContentLoaded'], ['networkidle0', 'networkIdle'], ['networkidle2', 'networkAlmostIdle']]);\n/**\n * @internal\n */\nclass LifecycleWatcher {\n  #expectedLifecycle;\n  #frame;\n  #timeout;\n  #navigationRequest = null;\n  #subscriptions = new disposable_js_1.DisposableStack();\n  #initialLoaderId;\n  #terminationDeferred;\n  #sameDocumentNavigationDeferred = Deferred_js_1.Deferred.create();\n  #lifecycleDeferred = Deferred_js_1.Deferred.create();\n  #newDocumentNavigationDeferred = Deferred_js_1.Deferred.create();\n  #hasSameDocumentNavigation;\n  #swapped;\n  #navigationResponseReceived;\n  constructor(networkManager, frame, waitUntil, timeout, signal) {\n    if (Array.isArray(waitUntil)) {\n      waitUntil = waitUntil.slice();\n    } else if (typeof waitUntil === 'string') {\n      waitUntil = [waitUntil];\n    }\n    this.#initialLoaderId = frame._loaderId;\n    this.#expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      (0, assert_js_1.assert)(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n    signal?.addEventListener('abort', () => {\n      this.#terminationDeferred.reject(signal.reason);\n    });\n    this.#frame = frame;\n    this.#timeout = timeout;\n    const frameManagerEmitter = this.#subscriptions.use(new EventEmitter_js_1.EventEmitter(frame._frameManager));\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.LifecycleEvent, this.#checkLifecycleComplete.bind(this));\n    const frameEmitter = this.#subscriptions.use(new EventEmitter_js_1.EventEmitter(frame));\n    frameEmitter.on(Frame_js_1.FrameEvent.FrameNavigatedWithinDocument, this.#navigatedWithinDocument.bind(this));\n    frameEmitter.on(Frame_js_1.FrameEvent.FrameNavigated, this.#navigated.bind(this));\n    frameEmitter.on(Frame_js_1.FrameEvent.FrameSwapped, this.#frameSwapped.bind(this));\n    frameEmitter.on(Frame_js_1.FrameEvent.FrameSwappedByActivation, this.#frameSwapped.bind(this));\n    frameEmitter.on(Frame_js_1.FrameEvent.FrameDetached, this.#onFrameDetached.bind(this));\n    const networkManagerEmitter = this.#subscriptions.use(new EventEmitter_js_1.EventEmitter(networkManager));\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.Request, this.#onRequest.bind(this));\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.Response, this.#onResponse.bind(this));\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.RequestFailed, this.#onRequestFailed.bind(this));\n    this.#terminationDeferred = Deferred_js_1.Deferred.create({\n      timeout: this.#timeout,\n      message: `Navigation timeout of ${this.#timeout} ms exceeded`\n    });\n    this.#checkLifecycleComplete();\n  }\n  #onRequest(request) {\n    if (request.frame() !== this.#frame || !request.isNavigationRequest()) {\n      return;\n    }\n    this.#navigationRequest = request;\n    // Resolve previous navigation response in case there are multiple\n    // navigation requests reported by the backend. This generally should not\n    // happen by it looks like it's possible.\n    this.#navigationResponseReceived?.resolve();\n    this.#navigationResponseReceived = Deferred_js_1.Deferred.create();\n    if (request.response() !== null) {\n      this.#navigationResponseReceived?.resolve();\n    }\n  }\n  #onRequestFailed(request) {\n    if (this.#navigationRequest?.id !== request.id) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n  #onResponse(response) {\n    if (this.#navigationRequest?.id !== response.request().id) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n  #onFrameDetached(frame) {\n    if (this.#frame === frame) {\n      this.#terminationDeferred.resolve(new Error('Navigating frame was detached'));\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n  async navigationResponse() {\n    // Continue with a possibly null response.\n    await this.#navigationResponseReceived?.valueOrThrow();\n    return this.#navigationRequest ? this.#navigationRequest.response() : null;\n  }\n  sameDocumentNavigationPromise() {\n    return this.#sameDocumentNavigationDeferred.valueOrThrow();\n  }\n  newDocumentNavigationPromise() {\n    return this.#newDocumentNavigationDeferred.valueOrThrow();\n  }\n  lifecyclePromise() {\n    return this.#lifecycleDeferred.valueOrThrow();\n  }\n  terminationPromise() {\n    return this.#terminationDeferred.valueOrThrow();\n  }\n  #navigatedWithinDocument() {\n    this.#hasSameDocumentNavigation = true;\n    this.#checkLifecycleComplete();\n  }\n  #navigated(navigationType) {\n    if (navigationType === 'BackForwardCacheRestore') {\n      return this.#frameSwapped();\n    }\n    this.#checkLifecycleComplete();\n  }\n  #frameSwapped() {\n    this.#swapped = true;\n    this.#checkLifecycleComplete();\n  }\n  #checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this.#frame, this.#expectedLifecycle)) {\n      return;\n    }\n    this.#lifecycleDeferred.resolve();\n    if (this.#hasSameDocumentNavigation) {\n      this.#sameDocumentNavigationDeferred.resolve(undefined);\n    }\n    if (this.#swapped || this.#frame._loaderId !== this.#initialLoaderId) {\n      this.#newDocumentNavigationDeferred.resolve(undefined);\n    }\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) {\n          return false;\n        }\n      }\n      for (const child of frame.childFrames()) {\n        if (child._hasStartedLoading && !checkLifecycle(child, expectedLifecycle)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  dispose() {\n    this.#subscriptions.dispose();\n    this.#terminationDeferred.resolve(new Error('LifecycleWatcher disposed'));\n  }\n}\nexports.LifecycleWatcher = LifecycleWatcher;","map":{"version":3,"names":["Frame_js_1","require","EventEmitter_js_1","NetworkManagerEvents_js_1","assert_js_1","Deferred_js_1","disposable_js_1","FrameManagerEvents_js_1","puppeteerToProtocolLifecycle","Map","LifecycleWatcher","expectedLifecycle","frame","timeout","navigationRequest","subscriptions","DisposableStack","initialLoaderId","terminationDeferred","sameDocumentNavigationDeferred","Deferred","create","lifecycleDeferred","newDocumentNavigationDeferred","hasSameDocumentNavigation","swapped","navigationResponseReceived","constructor","networkManager","waitUntil","signal","Array","isArray","slice","_loaderId","map","value","protocolEvent","get","assert","addEventListener","reject","reason","frameManagerEmitter","use","EventEmitter","_frameManager","on","FrameManagerEvent","LifecycleEvent","checkLifecycleComplete","bind","frameEmitter","FrameEvent","FrameNavigatedWithinDocument","navigatedWithinDocument","FrameNavigated","navigated","FrameSwapped","frameSwapped","FrameSwappedByActivation","FrameDetached","onFrameDetached","networkManagerEmitter","NetworkManagerEvent","Request","onRequest","Response","onResponse","RequestFailed","onRequestFailed","message","#onRequest","request","isNavigationRequest","resolve","response","#onRequestFailed","id","#onResponse","#onFrameDetached","Error","navigationResponse","valueOrThrow","sameDocumentNavigationPromise","newDocumentNavigationPromise","lifecyclePromise","terminationPromise","#navigatedWithinDocument","#navigated","navigationType","#frameSwapped","#checkLifecycleComplete","checkLifecycle","undefined","event","_lifecycleEvents","has","child","childFrames","_hasStartedLoading","dispose","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/cdp/LifecycleWatcher.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type Protocol from 'devtools-protocol';\n\nimport {type Frame, FrameEvent} from '../api/Frame.js';\nimport type {HTTPRequest} from '../api/HTTPRequest.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {TimeoutError} from '../common/Errors.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {NetworkManagerEvent} from '../common/NetworkManagerEvents.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {DisposableStack} from '../util/disposable.js';\n\nimport type {CdpFrame} from './Frame.js';\nimport {FrameManagerEvent} from './FrameManagerEvents.js';\nimport type {NetworkManager} from './NetworkManager.js';\n\n/**\n * @public\n */\nexport type PuppeteerLifeCycleEvent =\n  /**\n   * Waits for the 'load' event.\n   */\n  | 'load'\n  /**\n   * Waits for the 'DOMContentLoaded' event.\n   */\n  | 'domcontentloaded'\n  /**\n   * Waits till there are no more than 0 network connections for at least `500`\n   * ms.\n   */\n  | 'networkidle0'\n  /**\n   * Waits till there are no more than 2 network connections for at least `500`\n   * ms.\n   */\n  | 'networkidle2';\n\n/**\n * @public\n */\nexport type ProtocolLifeCycleEvent =\n  | 'load'\n  | 'DOMContentLoaded'\n  | 'networkIdle'\n  | 'networkAlmostIdle';\n\nconst puppeteerToProtocolLifecycle = new Map<\n  PuppeteerLifeCycleEvent,\n  ProtocolLifeCycleEvent\n>([\n  ['load', 'load'],\n  ['domcontentloaded', 'DOMContentLoaded'],\n  ['networkidle0', 'networkIdle'],\n  ['networkidle2', 'networkAlmostIdle'],\n]);\n\n/**\n * @internal\n */\nexport class LifecycleWatcher {\n  #expectedLifecycle: ProtocolLifeCycleEvent[];\n  #frame: CdpFrame;\n  #timeout: number;\n  #navigationRequest: HTTPRequest | null = null;\n  #subscriptions = new DisposableStack();\n  #initialLoaderId: string;\n\n  #terminationDeferred: Deferred<Error>;\n  #sameDocumentNavigationDeferred = Deferred.create<undefined>();\n  #lifecycleDeferred = Deferred.create<void>();\n  #newDocumentNavigationDeferred = Deferred.create<undefined>();\n\n  #hasSameDocumentNavigation?: boolean;\n  #swapped?: boolean;\n\n  #navigationResponseReceived?: Deferred<void>;\n\n  constructor(\n    networkManager: NetworkManager,\n    frame: CdpFrame,\n    waitUntil: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[],\n    timeout: number,\n    signal?: AbortSignal\n  ) {\n    if (Array.isArray(waitUntil)) {\n      waitUntil = waitUntil.slice();\n    } else if (typeof waitUntil === 'string') {\n      waitUntil = [waitUntil];\n    }\n    this.#initialLoaderId = frame._loaderId;\n    this.#expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent as ProtocolLifeCycleEvent;\n    });\n\n    signal?.addEventListener('abort', () => {\n      this.#terminationDeferred.reject(signal.reason);\n    });\n\n    this.#frame = frame;\n    this.#timeout = timeout;\n    const frameManagerEmitter = this.#subscriptions.use(\n      new EventEmitter(frame._frameManager)\n    );\n    frameManagerEmitter.on(\n      FrameManagerEvent.LifecycleEvent,\n      this.#checkLifecycleComplete.bind(this)\n    );\n\n    const frameEmitter = this.#subscriptions.use(new EventEmitter(frame));\n    frameEmitter.on(\n      FrameEvent.FrameNavigatedWithinDocument,\n      this.#navigatedWithinDocument.bind(this)\n    );\n    frameEmitter.on(FrameEvent.FrameNavigated, this.#navigated.bind(this));\n    frameEmitter.on(FrameEvent.FrameSwapped, this.#frameSwapped.bind(this));\n    frameEmitter.on(\n      FrameEvent.FrameSwappedByActivation,\n      this.#frameSwapped.bind(this)\n    );\n    frameEmitter.on(FrameEvent.FrameDetached, this.#onFrameDetached.bind(this));\n\n    const networkManagerEmitter = this.#subscriptions.use(\n      new EventEmitter(networkManager)\n    );\n    networkManagerEmitter.on(\n      NetworkManagerEvent.Request,\n      this.#onRequest.bind(this)\n    );\n    networkManagerEmitter.on(\n      NetworkManagerEvent.Response,\n      this.#onResponse.bind(this)\n    );\n    networkManagerEmitter.on(\n      NetworkManagerEvent.RequestFailed,\n      this.#onRequestFailed.bind(this)\n    );\n\n    this.#terminationDeferred = Deferred.create<Error>({\n      timeout: this.#timeout,\n      message: `Navigation timeout of ${this.#timeout} ms exceeded`,\n    });\n\n    this.#checkLifecycleComplete();\n  }\n\n  #onRequest(request: HTTPRequest): void {\n    if (request.frame() !== this.#frame || !request.isNavigationRequest()) {\n      return;\n    }\n    this.#navigationRequest = request;\n    // Resolve previous navigation response in case there are multiple\n    // navigation requests reported by the backend. This generally should not\n    // happen by it looks like it's possible.\n    this.#navigationResponseReceived?.resolve();\n    this.#navigationResponseReceived = Deferred.create();\n    if (request.response() !== null) {\n      this.#navigationResponseReceived?.resolve();\n    }\n  }\n\n  #onRequestFailed(request: HTTPRequest): void {\n    if (this.#navigationRequest?.id !== request.id) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onResponse(response: HTTPResponse): void {\n    if (this.#navigationRequest?.id !== response.request().id) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onFrameDetached(frame: Frame): void {\n    if (this.#frame === frame) {\n      this.#terminationDeferred.resolve(\n        new Error('Navigating frame was detached')\n      );\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  async navigationResponse(): Promise<HTTPResponse | null> {\n    // Continue with a possibly null response.\n    await this.#navigationResponseReceived?.valueOrThrow();\n    return this.#navigationRequest ? this.#navigationRequest.response() : null;\n  }\n\n  sameDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#sameDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  newDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#newDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  lifecyclePromise(): Promise<void> {\n    return this.#lifecycleDeferred.valueOrThrow();\n  }\n\n  terminationPromise(): Promise<Error | TimeoutError | undefined> {\n    return this.#terminationDeferred.valueOrThrow();\n  }\n\n  #navigatedWithinDocument(): void {\n    this.#hasSameDocumentNavigation = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #navigated(navigationType: Protocol.Page.NavigationType): void {\n    if (navigationType === 'BackForwardCacheRestore') {\n      return this.#frameSwapped();\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  #frameSwapped(): void {\n    this.#swapped = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #checkLifecycleComplete(): void {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this.#frame, this.#expectedLifecycle)) {\n      return;\n    }\n    this.#lifecycleDeferred.resolve();\n    if (this.#hasSameDocumentNavigation) {\n      this.#sameDocumentNavigationDeferred.resolve(undefined);\n    }\n    if (this.#swapped || this.#frame._loaderId !== this.#initialLoaderId) {\n      this.#newDocumentNavigationDeferred.resolve(undefined);\n    }\n\n    function checkLifecycle(\n      frame: CdpFrame,\n      expectedLifecycle: ProtocolLifeCycleEvent[]\n    ): boolean {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) {\n          return false;\n        }\n      }\n      for (const child of frame.childFrames()) {\n        if (\n          child._hasStartedLoading &&\n          !checkLifecycle(child, expectedLifecycle)\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  dispose(): void {\n    this.#subscriptions.dispose();\n    this.#terminationDeferred.resolve(new Error('LifecycleWatcher disposed'));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}