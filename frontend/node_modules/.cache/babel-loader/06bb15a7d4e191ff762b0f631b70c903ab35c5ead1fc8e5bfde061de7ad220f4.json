{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowsingContext = void 0;\nconst EventEmitter_js_1 = require(\"../../common/EventEmitter.js\");\nconst decorators_js_1 = require(\"../../util/decorators.js\");\nconst disposable_js_1 = require(\"../../util/disposable.js\");\nconst Navigation_js_1 = require(\"./Navigation.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\nconst Request_js_1 = require(\"./Request.js\");\nconst UserPrompt_js_1 = require(\"./UserPrompt.js\");\n/**\n * @internal\n */\nlet BrowsingContext = (() => {\n  var _a;\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _dispose_decorators;\n  let _activate_decorators;\n  let _captureScreenshot_decorators;\n  let _close_decorators;\n  let _traverseHistory_decorators;\n  let _navigate_decorators;\n  let _reload_decorators;\n  let _setCacheBehavior_decorators;\n  let _print_decorators;\n  let _handleUserPrompt_decorators;\n  let _setViewport_decorators;\n  let _performActions_decorators;\n  let _releaseActions_decorators;\n  let _createWindowRealm_decorators;\n  let _addPreloadScript_decorators;\n  let _addIntercept_decorators;\n  let _removePreloadScript_decorators;\n  let _getCookies_decorators;\n  let _setCookie_decorators;\n  let _setFiles_decorators;\n  let _subscribe_decorators;\n  let _addInterception_decorators;\n  let _deleteCookie_decorators;\n  let _locateNodes_decorators;\n  return class BrowsingContext extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      _deleteCookie_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n        // SAFETY: Disposal implies this exists.\n        return context.#reason;\n      })];\n      _locateNodes_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n        // SAFETY: Disposal implies this exists.\n        return context.#reason;\n      })];\n      __esDecorate(this, null, _dispose_decorators, {\n        kind: \"method\",\n        name: \"dispose\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"dispose\" in obj,\n          get: obj => obj.dispose\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _activate_decorators, {\n        kind: \"method\",\n        name: \"activate\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"activate\" in obj,\n          get: obj => obj.activate\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _captureScreenshot_decorators, {\n        kind: \"method\",\n        name: \"captureScreenshot\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"captureScreenshot\" in obj,\n          get: obj => obj.captureScreenshot\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _close_decorators, {\n        kind: \"method\",\n        name: \"close\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"close\" in obj,\n          get: obj => obj.close\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _traverseHistory_decorators, {\n        kind: \"method\",\n        name: \"traverseHistory\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"traverseHistory\" in obj,\n          get: obj => obj.traverseHistory\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _navigate_decorators, {\n        kind: \"method\",\n        name: \"navigate\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"navigate\" in obj,\n          get: obj => obj.navigate\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _reload_decorators, {\n        kind: \"method\",\n        name: \"reload\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"reload\" in obj,\n          get: obj => obj.reload\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setCacheBehavior_decorators, {\n        kind: \"method\",\n        name: \"setCacheBehavior\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setCacheBehavior\" in obj,\n          get: obj => obj.setCacheBehavior\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _print_decorators, {\n        kind: \"method\",\n        name: \"print\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"print\" in obj,\n          get: obj => obj.print\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _handleUserPrompt_decorators, {\n        kind: \"method\",\n        name: \"handleUserPrompt\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"handleUserPrompt\" in obj,\n          get: obj => obj.handleUserPrompt\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setViewport_decorators, {\n        kind: \"method\",\n        name: \"setViewport\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setViewport\" in obj,\n          get: obj => obj.setViewport\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _performActions_decorators, {\n        kind: \"method\",\n        name: \"performActions\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"performActions\" in obj,\n          get: obj => obj.performActions\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _releaseActions_decorators, {\n        kind: \"method\",\n        name: \"releaseActions\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"releaseActions\" in obj,\n          get: obj => obj.releaseActions\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _createWindowRealm_decorators, {\n        kind: \"method\",\n        name: \"createWindowRealm\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"createWindowRealm\" in obj,\n          get: obj => obj.createWindowRealm\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addPreloadScript_decorators, {\n        kind: \"method\",\n        name: \"addPreloadScript\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addPreloadScript\" in obj,\n          get: obj => obj.addPreloadScript\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addIntercept_decorators, {\n        kind: \"method\",\n        name: \"addIntercept\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addIntercept\" in obj,\n          get: obj => obj.addIntercept\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _removePreloadScript_decorators, {\n        kind: \"method\",\n        name: \"removePreloadScript\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"removePreloadScript\" in obj,\n          get: obj => obj.removePreloadScript\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _getCookies_decorators, {\n        kind: \"method\",\n        name: \"getCookies\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"getCookies\" in obj,\n          get: obj => obj.getCookies\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setCookie_decorators, {\n        kind: \"method\",\n        name: \"setCookie\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setCookie\" in obj,\n          get: obj => obj.setCookie\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setFiles_decorators, {\n        kind: \"method\",\n        name: \"setFiles\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setFiles\" in obj,\n          get: obj => obj.setFiles\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _subscribe_decorators, {\n        kind: \"method\",\n        name: \"subscribe\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"subscribe\" in obj,\n          get: obj => obj.subscribe\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addInterception_decorators, {\n        kind: \"method\",\n        name: \"addInterception\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addInterception\" in obj,\n          get: obj => obj.addInterception\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _deleteCookie_decorators, {\n        kind: \"method\",\n        name: \"deleteCookie\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"deleteCookie\" in obj,\n          get: obj => obj.deleteCookie\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _locateNodes_decorators, {\n        kind: \"method\",\n        name: \"locateNodes\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"locateNodes\" in obj,\n          get: obj => obj.locateNodes\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static from(userContext, parent, id, url, originalOpener) {\n      const browsingContext = new BrowsingContext(userContext, parent, id, url, originalOpener);\n      browsingContext.#initialize();\n      return browsingContext;\n    }\n    #navigation = __runInitializers(this, _instanceExtraInitializers);\n    #reason;\n    #url;\n    #children = new Map();\n    #disposables = new disposable_js_1.DisposableStack();\n    #realms = new Map();\n    #requests = new Map();\n    defaultRealm;\n    id;\n    parent;\n    userContext;\n    originalOpener;\n    constructor(context, parent, id, url, originalOpener) {\n      super();\n      this.#url = url;\n      this.id = id;\n      this.parent = parent;\n      this.userContext = context;\n      this.originalOpener = originalOpener;\n      this.defaultRealm = this.#createWindowRealm();\n    }\n    #initialize() {\n      const userContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.userContext));\n      userContextEmitter.once('closed', ({\n        reason\n      }) => {\n        this.dispose(`Browsing context already closed: ${reason}`);\n      });\n      const sessionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#session));\n      sessionEmitter.on('browsingContext.contextCreated', info => {\n        if (info.parent !== this.id) {\n          return;\n        }\n        const browsingContext = BrowsingContext.from(this.userContext, this, info.context, info.url, info.originalOpener);\n        this.#children.set(info.context, browsingContext);\n        const browsingContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(browsingContext));\n        browsingContextEmitter.once('closed', () => {\n          browsingContextEmitter.removeAllListeners();\n          this.#children.delete(browsingContext.id);\n        });\n        this.emit('browsingcontext', {\n          browsingContext\n        });\n      });\n      sessionEmitter.on('browsingContext.contextDestroyed', info => {\n        if (info.context !== this.id) {\n          return;\n        }\n        this.dispose('Browsing context already closed.');\n      });\n      sessionEmitter.on('browsingContext.domContentLoaded', info => {\n        if (info.context !== this.id) {\n          return;\n        }\n        this.#url = info.url;\n        this.emit('DOMContentLoaded', undefined);\n      });\n      sessionEmitter.on('browsingContext.load', info => {\n        if (info.context !== this.id) {\n          return;\n        }\n        this.#url = info.url;\n        this.emit('load', undefined);\n      });\n      sessionEmitter.on('browsingContext.navigationStarted', info => {\n        if (info.context !== this.id) {\n          return;\n        }\n        // Note: we should not update this.#url at this point since the context\n        // has not finished navigating to the info.url yet.\n        for (const [id, request] of this.#requests) {\n          if (request.disposed) {\n            this.#requests.delete(id);\n          }\n        }\n        // If the navigation hasn't finished, then this is nested navigation. The\n        // current navigation will handle this.\n        if (this.#navigation !== undefined && !this.#navigation.disposed) {\n          return;\n        }\n        // Note the navigation ID is null for this event.\n        this.#navigation = Navigation_js_1.Navigation.from(this);\n        const navigationEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#navigation));\n        for (const eventName of ['fragment', 'failed', 'aborted']) {\n          navigationEmitter.once(eventName, ({\n            url\n          }) => {\n            navigationEmitter[disposable_js_1.disposeSymbol]();\n            this.#url = url;\n          });\n        }\n        this.emit('navigation', {\n          navigation: this.#navigation\n        });\n      });\n      sessionEmitter.on('network.beforeRequestSent', event => {\n        if (event.context !== this.id) {\n          return;\n        }\n        if (this.#requests.has(event.request.request)) {\n          // Means the request is a redirect. This is handled in Request.\n          // Or an Auth event was issued\n          return;\n        }\n        const request = Request_js_1.Request.from(this, event);\n        this.#requests.set(request.id, request);\n        this.emit('request', {\n          request\n        });\n      });\n      sessionEmitter.on('log.entryAdded', entry => {\n        if (entry.source.context !== this.id) {\n          return;\n        }\n        this.emit('log', {\n          entry\n        });\n      });\n      sessionEmitter.on('browsingContext.userPromptOpened', info => {\n        if (info.context !== this.id) {\n          return;\n        }\n        const userPrompt = UserPrompt_js_1.UserPrompt.from(this, info);\n        this.emit('userprompt', {\n          userPrompt\n        });\n      });\n    }\n    get #session() {\n      return this.userContext.browser.session;\n    }\n    get children() {\n      return this.#children.values();\n    }\n    get closed() {\n      return this.#reason !== undefined;\n    }\n    get disposed() {\n      return this.closed;\n    }\n    get realms() {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias -- Required\n      const self = this;\n      return function* () {\n        yield self.defaultRealm;\n        yield* self.#realms.values();\n      }();\n    }\n    get top() {\n      let context = this;\n      for (let {\n        parent\n      } = context; parent; {\n        parent\n      } = context) {\n        context = parent;\n      }\n      return context;\n    }\n    get url() {\n      return this.#url;\n    }\n    #createWindowRealm(sandbox) {\n      const realm = Realm_js_1.WindowRealm.from(this, sandbox);\n      realm.on('worker', realm => {\n        this.emit('worker', {\n          realm\n        });\n      });\n      return realm;\n    }\n    dispose(reason) {\n      this.#reason = reason;\n      this[disposable_js_1.disposeSymbol]();\n    }\n    async activate() {\n      await this.#session.send('browsingContext.activate', {\n        context: this.id\n      });\n    }\n    async captureScreenshot(options = {}) {\n      const {\n        result: {\n          data\n        }\n      } = await this.#session.send('browsingContext.captureScreenshot', {\n        context: this.id,\n        ...options\n      });\n      return data;\n    }\n    async close(promptUnload) {\n      await Promise.all([...this.#children.values()].map(async child => {\n        await child.close(promptUnload);\n      }));\n      await this.#session.send('browsingContext.close', {\n        context: this.id,\n        promptUnload\n      });\n    }\n    async traverseHistory(delta) {\n      await this.#session.send('browsingContext.traverseHistory', {\n        context: this.id,\n        delta\n      });\n    }\n    async navigate(url, wait) {\n      await this.#session.send('browsingContext.navigate', {\n        context: this.id,\n        url,\n        wait\n      });\n    }\n    async reload(options = {}) {\n      await this.#session.send('browsingContext.reload', {\n        context: this.id,\n        ...options\n      });\n    }\n    async setCacheBehavior(cacheBehavior) {\n      // @ts-expect-error not in BiDi types yet.\n      await this.#session.send('network.setCacheBehavior', {\n        contexts: [this.id],\n        cacheBehavior\n      });\n    }\n    async print(options = {}) {\n      const {\n        result: {\n          data\n        }\n      } = await this.#session.send('browsingContext.print', {\n        context: this.id,\n        ...options\n      });\n      return data;\n    }\n    async handleUserPrompt(options = {}) {\n      await this.#session.send('browsingContext.handleUserPrompt', {\n        context: this.id,\n        ...options\n      });\n    }\n    async setViewport(options = {}) {\n      await this.#session.send('browsingContext.setViewport', {\n        context: this.id,\n        ...options\n      });\n    }\n    async performActions(actions) {\n      await this.#session.send('input.performActions', {\n        context: this.id,\n        actions\n      });\n    }\n    async releaseActions() {\n      await this.#session.send('input.releaseActions', {\n        context: this.id\n      });\n    }\n    createWindowRealm(sandbox) {\n      return this.#createWindowRealm(sandbox);\n    }\n    async addPreloadScript(functionDeclaration, options = {}) {\n      return await this.userContext.browser.addPreloadScript(functionDeclaration, {\n        ...options,\n        contexts: [this]\n      });\n    }\n    async addIntercept(options) {\n      const {\n        result: {\n          intercept\n        }\n      } = await this.userContext.browser.session.send('network.addIntercept', {\n        ...options,\n        contexts: [this.id]\n      });\n      return intercept;\n    }\n    async removePreloadScript(script) {\n      await this.userContext.browser.removePreloadScript(script);\n    }\n    async getCookies(options = {}) {\n      const {\n        result: {\n          cookies\n        }\n      } = await this.#session.send('storage.getCookies', {\n        ...options,\n        partition: {\n          type: 'context',\n          context: this.id\n        }\n      });\n      return cookies;\n    }\n    async setCookie(cookie) {\n      await this.#session.send('storage.setCookie', {\n        cookie,\n        partition: {\n          type: 'context',\n          context: this.id\n        }\n      });\n    }\n    async setFiles(element, files) {\n      await this.#session.send('input.setFiles', {\n        context: this.id,\n        element,\n        files\n      });\n    }\n    async subscribe(events) {\n      await this.#session.subscribe(events, [this.id]);\n    }\n    async addInterception(events) {\n      await this.#session.subscribe(events, [this.id]);\n    }\n    [(_dispose_decorators = [decorators_js_1.inertIfDisposed], _activate_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _captureScreenshot_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _close_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _traverseHistory_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _navigate_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _reload_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setCacheBehavior_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _print_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _handleUserPrompt_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setViewport_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _performActions_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _releaseActions_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _createWindowRealm_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _addPreloadScript_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _addIntercept_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _removePreloadScript_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _getCookies_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setCookie_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setFiles_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _subscribe_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _addInterception_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], disposable_js_1.disposeSymbol)]() {\n      this.#reason ??= 'Browsing context already closed, probably because the user context closed.';\n      this.emit('closed', {\n        reason: this.#reason\n      });\n      this.#disposables.dispose();\n      super[disposable_js_1.disposeSymbol]();\n    }\n    async deleteCookie(...cookieFilters) {\n      await Promise.all(cookieFilters.map(async filter => {\n        await this.#session.send('storage.deleteCookies', {\n          filter: filter,\n          partition: {\n            type: 'context',\n            context: this.id\n          }\n        });\n      }));\n    }\n    async locateNodes(locator, startNodes) {\n      // TODO: add other locateNodes options if needed.\n      const result = await this.#session.send('browsingContext.locateNodes', {\n        context: this.id,\n        locator,\n        startNodes: startNodes.length ? startNodes : undefined\n      });\n      return result.result.nodes;\n    }\n  };\n})();\nexports.BrowsingContext = BrowsingContext;","map":{"version":3,"names":["EventEmitter_js_1","require","decorators_js_1","disposable_js_1","Navigation_js_1","Realm_js_1","Request_js_1","UserPrompt_js_1","BrowsingContext","EventEmitter","_classSuper","throwIfDisposed","context","reason","__esDecorate","_dispose_decorators","kind","name","static","private","access","has","obj","get","dispose","metadata","_metadata","_instanceExtraInitializers","_activate_decorators","activate","_captureScreenshot_decorators","captureScreenshot","_close_decorators","close","_traverseHistory_decorators","traverseHistory","_navigate_decorators","navigate","_reload_decorators","reload","_setCacheBehavior_decorators","setCacheBehavior","_print_decorators","print","_handleUserPrompt_decorators","handleUserPrompt","_setViewport_decorators","setViewport","_performActions_decorators","performActions","_releaseActions_decorators","releaseActions","_createWindowRealm_decorators","createWindowRealm","_addPreloadScript_decorators","addPreloadScript","_addIntercept_decorators","addIntercept","_removePreloadScript_decorators","removePreloadScript","_getCookies_decorators","getCookies","_setCookie_decorators","setCookie","_setFiles_decorators","setFiles","_subscribe_decorators","subscribe","_addInterception_decorators","addInterception","_deleteCookie_decorators","deleteCookie","_locateNodes_decorators","locateNodes","from","userContext","parent","id","url","originalOpener","browsingContext","initialize","navigation","__runInitializers","children","Map","disposables","DisposableStack","realms","requests","defaultRealm","constructor","#initialize","userContextEmitter","use","once","sessionEmitter","session","on","info","set","browsingContextEmitter","removeAllListeners","delete","emit","undefined","request","disposed","Navigation","navigationEmitter","eventName","disposeSymbol","event","Request","entry","source","userPrompt","UserPrompt","#session","browser","values","closed","self","top","#createWindowRealm","sandbox","realm","WindowRealm","send","options","result","data","promptUnload","Promise","all","map","child","delta","wait","cacheBehavior","contexts","actions","functionDeclaration","intercept","script","cookies","partition","type","cookie","element","files","events","inertIfDisposed","cookieFilters","filter","locator","startNodes","length","nodes","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/core/BrowsingContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport {inertIfDisposed, throwIfDisposed} from '../../util/decorators.js';\nimport {DisposableStack, disposeSymbol} from '../../util/disposable.js';\n\nimport type {AddPreloadScriptOptions} from './Browser.js';\nimport {Navigation} from './Navigation.js';\nimport type {DedicatedWorkerRealm} from './Realm.js';\nimport {WindowRealm} from './Realm.js';\nimport {Request} from './Request.js';\nimport type {UserContext} from './UserContext.js';\nimport {UserPrompt} from './UserPrompt.js';\n\n/**\n * @internal\n */\nexport type AddInterceptOptions = Omit<\n  Bidi.Network.AddInterceptParameters,\n  'contexts'\n>;\n\n/**\n * @internal\n */\nexport type CaptureScreenshotOptions = Omit<\n  Bidi.BrowsingContext.CaptureScreenshotParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type ReloadOptions = Omit<\n  Bidi.BrowsingContext.ReloadParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type PrintOptions = Omit<\n  Bidi.BrowsingContext.PrintParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type HandleUserPromptOptions = Omit<\n  Bidi.BrowsingContext.HandleUserPromptParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type SetViewportOptions = Omit<\n  Bidi.BrowsingContext.SetViewportParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type GetCookiesOptions = Omit<\n  Bidi.Storage.GetCookiesParameters,\n  'partition'\n>;\n\n/**\n * @internal\n */\nexport class BrowsingContext extends EventEmitter<{\n  /** Emitted when this context is closed. */\n  closed: {\n    /** The reason the browsing context was closed */\n    reason: string;\n  };\n  /** Emitted when a child browsing context is created. */\n  browsingcontext: {\n    /** The newly created child browsing context. */\n    browsingContext: BrowsingContext;\n  };\n  /** Emitted whenever a navigation occurs. */\n  navigation: {\n    /** The navigation that occurred. */\n    navigation: Navigation;\n  };\n  /** Emitted whenever a request is made. */\n  request: {\n    /** The request that was made. */\n    request: Request;\n  };\n  /** Emitted whenever a log entry is added. */\n  log: {\n    /** Entry added to the log. */\n    entry: Bidi.Log.Entry;\n  };\n  /** Emitted whenever a prompt is opened. */\n  userprompt: {\n    /** The prompt that was opened. */\n    userPrompt: UserPrompt;\n  };\n  /** Emitted whenever the frame emits `DOMContentLoaded` */\n  DOMContentLoaded: void;\n  /** Emitted whenever the frame emits `load` */\n  load: void;\n  /** Emitted whenever a dedicated worker is created */\n  worker: {\n    /** The realm for the new dedicated worker */\n    realm: DedicatedWorkerRealm;\n  };\n}> {\n  static from(\n    userContext: UserContext,\n    parent: BrowsingContext | undefined,\n    id: string,\n    url: string,\n    originalOpener: string | null\n  ): BrowsingContext {\n    const browsingContext = new BrowsingContext(\n      userContext,\n      parent,\n      id,\n      url,\n      originalOpener\n    );\n    browsingContext.#initialize();\n    return browsingContext;\n  }\n\n  #navigation: Navigation | undefined;\n  #reason?: string;\n  #url: string;\n  readonly #children = new Map<string, BrowsingContext>();\n  readonly #disposables = new DisposableStack();\n  readonly #realms = new Map<string, WindowRealm>();\n  readonly #requests = new Map<string, Request>();\n  readonly defaultRealm: WindowRealm;\n  readonly id: string;\n  readonly parent: BrowsingContext | undefined;\n  readonly userContext: UserContext;\n  readonly originalOpener: string | null;\n\n  private constructor(\n    context: UserContext,\n    parent: BrowsingContext | undefined,\n    id: string,\n    url: string,\n    originalOpener: string | null\n  ) {\n    super();\n\n    this.#url = url;\n    this.id = id;\n    this.parent = parent;\n    this.userContext = context;\n    this.originalOpener = originalOpener;\n\n    this.defaultRealm = this.#createWindowRealm();\n  }\n\n  #initialize() {\n    const userContextEmitter = this.#disposables.use(\n      new EventEmitter(this.userContext)\n    );\n    userContextEmitter.once('closed', ({reason}) => {\n      this.dispose(`Browsing context already closed: ${reason}`);\n    });\n\n    const sessionEmitter = this.#disposables.use(\n      new EventEmitter(this.#session)\n    );\n    sessionEmitter.on('browsingContext.contextCreated', info => {\n      if (info.parent !== this.id) {\n        return;\n      }\n\n      const browsingContext = BrowsingContext.from(\n        this.userContext,\n        this,\n        info.context,\n        info.url,\n        info.originalOpener\n      );\n      this.#children.set(info.context, browsingContext);\n\n      const browsingContextEmitter = this.#disposables.use(\n        new EventEmitter(browsingContext)\n      );\n      browsingContextEmitter.once('closed', () => {\n        browsingContextEmitter.removeAllListeners();\n\n        this.#children.delete(browsingContext.id);\n      });\n\n      this.emit('browsingcontext', {browsingContext});\n    });\n    sessionEmitter.on('browsingContext.contextDestroyed', info => {\n      if (info.context !== this.id) {\n        return;\n      }\n      this.dispose('Browsing context already closed.');\n    });\n\n    sessionEmitter.on('browsingContext.domContentLoaded', info => {\n      if (info.context !== this.id) {\n        return;\n      }\n      this.#url = info.url;\n      this.emit('DOMContentLoaded', undefined);\n    });\n\n    sessionEmitter.on('browsingContext.load', info => {\n      if (info.context !== this.id) {\n        return;\n      }\n      this.#url = info.url;\n      this.emit('load', undefined);\n    });\n\n    sessionEmitter.on('browsingContext.navigationStarted', info => {\n      if (info.context !== this.id) {\n        return;\n      }\n      // Note: we should not update this.#url at this point since the context\n      // has not finished navigating to the info.url yet.\n\n      for (const [id, request] of this.#requests) {\n        if (request.disposed) {\n          this.#requests.delete(id);\n        }\n      }\n      // If the navigation hasn't finished, then this is nested navigation. The\n      // current navigation will handle this.\n      if (this.#navigation !== undefined && !this.#navigation.disposed) {\n        return;\n      }\n\n      // Note the navigation ID is null for this event.\n      this.#navigation = Navigation.from(this);\n\n      const navigationEmitter = this.#disposables.use(\n        new EventEmitter(this.#navigation)\n      );\n      for (const eventName of ['fragment', 'failed', 'aborted'] as const) {\n        navigationEmitter.once(eventName, ({url}) => {\n          navigationEmitter[disposeSymbol]();\n\n          this.#url = url;\n        });\n      }\n\n      this.emit('navigation', {navigation: this.#navigation});\n    });\n    sessionEmitter.on('network.beforeRequestSent', event => {\n      if (event.context !== this.id) {\n        return;\n      }\n      if (this.#requests.has(event.request.request)) {\n        // Means the request is a redirect. This is handled in Request.\n        // Or an Auth event was issued\n        return;\n      }\n\n      const request = Request.from(this, event);\n      this.#requests.set(request.id, request);\n      this.emit('request', {request});\n    });\n\n    sessionEmitter.on('log.entryAdded', entry => {\n      if (entry.source.context !== this.id) {\n        return;\n      }\n\n      this.emit('log', {entry});\n    });\n\n    sessionEmitter.on('browsingContext.userPromptOpened', info => {\n      if (info.context !== this.id) {\n        return;\n      }\n\n      const userPrompt = UserPrompt.from(this, info);\n      this.emit('userprompt', {userPrompt});\n    });\n  }\n\n  get #session() {\n    return this.userContext.browser.session;\n  }\n  get children(): Iterable<BrowsingContext> {\n    return this.#children.values();\n  }\n  get closed(): boolean {\n    return this.#reason !== undefined;\n  }\n  get disposed(): boolean {\n    return this.closed;\n  }\n  get realms(): Iterable<WindowRealm> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias -- Required\n    const self = this;\n    return (function* () {\n      yield self.defaultRealm;\n      yield* self.#realms.values();\n    })();\n  }\n  get top(): BrowsingContext {\n    let context = this as BrowsingContext;\n    for (let {parent} = context; parent; {parent} = context) {\n      context = parent;\n    }\n    return context;\n  }\n  get url(): string {\n    return this.#url;\n  }\n\n  #createWindowRealm(sandbox?: string) {\n    const realm = WindowRealm.from(this, sandbox);\n    realm.on('worker', realm => {\n      this.emit('worker', {realm});\n    });\n    return realm;\n  }\n\n  @inertIfDisposed\n  private dispose(reason?: string): void {\n    this.#reason = reason;\n    this[disposeSymbol]();\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async activate(): Promise<void> {\n    await this.#session.send('browsingContext.activate', {\n      context: this.id,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async captureScreenshot(\n    options: CaptureScreenshotOptions = {}\n  ): Promise<string> {\n    const {\n      result: {data},\n    } = await this.#session.send('browsingContext.captureScreenshot', {\n      context: this.id,\n      ...options,\n    });\n    return data;\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async close(promptUnload?: boolean): Promise<void> {\n    await Promise.all(\n      [...this.#children.values()].map(async child => {\n        await child.close(promptUnload);\n      })\n    );\n    await this.#session.send('browsingContext.close', {\n      context: this.id,\n      promptUnload,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async traverseHistory(delta: number): Promise<void> {\n    await this.#session.send('browsingContext.traverseHistory', {\n      context: this.id,\n      delta,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async navigate(\n    url: string,\n    wait?: Bidi.BrowsingContext.ReadinessState\n  ): Promise<void> {\n    await this.#session.send('browsingContext.navigate', {\n      context: this.id,\n      url,\n      wait,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async reload(options: ReloadOptions = {}): Promise<void> {\n    await this.#session.send('browsingContext.reload', {\n      context: this.id,\n      ...options,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setCacheBehavior(cacheBehavior: 'default' | 'bypass'): Promise<void> {\n    // @ts-expect-error not in BiDi types yet.\n    await this.#session.send('network.setCacheBehavior', {\n      contexts: [this.id],\n      cacheBehavior,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async print(options: PrintOptions = {}): Promise<string> {\n    const {\n      result: {data},\n    } = await this.#session.send('browsingContext.print', {\n      context: this.id,\n      ...options,\n    });\n    return data;\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async handleUserPrompt(options: HandleUserPromptOptions = {}): Promise<void> {\n    await this.#session.send('browsingContext.handleUserPrompt', {\n      context: this.id,\n      ...options,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setViewport(options: SetViewportOptions = {}): Promise<void> {\n    await this.#session.send('browsingContext.setViewport', {\n      context: this.id,\n      ...options,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async performActions(actions: Bidi.Input.SourceActions[]): Promise<void> {\n    await this.#session.send('input.performActions', {\n      context: this.id,\n      actions,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async releaseActions(): Promise<void> {\n    await this.#session.send('input.releaseActions', {\n      context: this.id,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  createWindowRealm(sandbox: string): WindowRealm {\n    return this.#createWindowRealm(sandbox);\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async addPreloadScript(\n    functionDeclaration: string,\n    options: AddPreloadScriptOptions = {}\n  ): Promise<string> {\n    return await this.userContext.browser.addPreloadScript(\n      functionDeclaration,\n      {\n        ...options,\n        contexts: [this],\n      }\n    );\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async addIntercept(options: AddInterceptOptions): Promise<string> {\n    const {\n      result: {intercept},\n    } = await this.userContext.browser.session.send('network.addIntercept', {\n      ...options,\n      contexts: [this.id],\n    });\n\n    return intercept;\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async removePreloadScript(script: string): Promise<void> {\n    await this.userContext.browser.removePreloadScript(script);\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async getCookies(\n    options: GetCookiesOptions = {}\n  ): Promise<Bidi.Network.Cookie[]> {\n    const {\n      result: {cookies},\n    } = await this.#session.send('storage.getCookies', {\n      ...options,\n      partition: {\n        type: 'context',\n        context: this.id,\n      },\n    });\n    return cookies;\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setCookie(cookie: Bidi.Storage.PartialCookie): Promise<void> {\n    await this.#session.send('storage.setCookie', {\n      cookie,\n      partition: {\n        type: 'context',\n        context: this.id,\n      },\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setFiles(\n    element: Bidi.Script.SharedReference,\n    files: string[]\n  ): Promise<void> {\n    await this.#session.send('input.setFiles', {\n      context: this.id,\n      element,\n      files,\n    });\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async subscribe(events: [string, ...string[]]): Promise<void> {\n    await this.#session.subscribe(events, [this.id]);\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async addInterception(events: [string, ...string[]]): Promise<void> {\n    await this.#session.subscribe(events, [this.id]);\n  }\n\n  [disposeSymbol](): void {\n    this.#reason ??=\n      'Browsing context already closed, probably because the user context closed.';\n    this.emit('closed', {reason: this.#reason});\n\n    this.#disposables.dispose();\n    super[disposeSymbol]();\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async deleteCookie(\n    ...cookieFilters: Bidi.Storage.CookieFilter[]\n  ): Promise<void> {\n    await Promise.all(\n      cookieFilters.map(async filter => {\n        await this.#session.send('storage.deleteCookies', {\n          filter: filter,\n          partition: {\n            type: 'context',\n            context: this.id,\n          },\n        });\n      })\n    );\n  }\n\n  @throwIfDisposed<BrowsingContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async locateNodes(\n    locator: Bidi.BrowsingContext.Locator,\n    startNodes: [Bidi.Script.SharedReference, ...Bidi.Script.SharedReference[]]\n  ): Promise<Bidi.Script.NodeRemoteValue[]> {\n    // TODO: add other locateNodes options if needed.\n    const result = await this.#session.send('browsingContext.locateNodes', {\n      context: this.id,\n      locator,\n      startNodes: startNodes.length ? startNodes : undefined,\n    });\n    return result.result.nodes;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAAA,iBAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAD,OAAA;AACA,MAAAE,eAAA,GAAAF,OAAA;AAGA,MAAAG,eAAA,GAAAH,OAAA;AAEA,MAAAI,UAAA,GAAAJ,OAAA;AACA,MAAAK,YAAA,GAAAL,OAAA;AAEA,MAAAM,eAAA,GAAAN,OAAA;AA0DA;;;IAGaO,eAAe;;oBAASR,iBAAA,CAAAS,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;eAApCD,eAAgB,SAAQE,WAwCnC;;;kCA0eC,IAAAR,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;QAC1C;QACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;MACzB,CAAC,CAAC;iCAiBD,IAAAX,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;QAC1C;QACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;MACzB,CAAC,CAAC;MAzSFC,YAAA,aAAAC,mBAAA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,iBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAQE;QAAO;QAAAC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MASfb,YAAA,aAAAc,oBAAA;QAAAZ,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,kBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMO;QAAQ;QAAAJ,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAUdb,YAAA,aAAAgB,6BAAA;QAAAd,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,2BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMS;QAAiB;QAAAN,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAgBvBb,YAAA,aAAAkB,iBAAA;QAAAhB,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,eAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMW;QAAK;QAAAR,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAgBXb,YAAA,aAAAoB,2BAAA;QAAAlB,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,yBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMa;QAAe;QAAAV,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAWrBb,YAAA,aAAAsB,oBAAA;QAAApB,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,kBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMe;QAAQ;QAAAZ,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAedb,YAAA,aAAAwB,kBAAA;QAAAtB,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,gBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMiB;QAAM;QAAAd,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAWZb,YAAA,aAAA0B,4BAAA;QAAAxB,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,0BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMmB;QAAgB;QAAAhB,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAYtBb,YAAA,aAAA4B,iBAAA;QAAA1B,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,eAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMqB;QAAK;QAAAlB,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAcXb,YAAA,aAAA8B,4BAAA;QAAA5B,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,0BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMuB;QAAgB;QAAApB,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAWtBb,YAAA,aAAAgC,uBAAA;QAAA9B,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,qBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMyB;QAAW;QAAAtB,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAWjBb,YAAA,aAAAkC,0BAAA;QAAAhC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,wBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAM2B;QAAc;QAAAxB,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAWpBb,YAAA,aAAAoC,0BAAA;QAAAlC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,wBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAM6B;QAAc;QAAA1B,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAUpBb,YAAA,aAAAsC,6BAAA;QAAApC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,2BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAA+B;QAAiB;QAAA5B,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAQjBb,YAAA,aAAAwC,4BAAA;QAAAtC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,0BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMiC;QAAgB;QAAA9B,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAiBtBb,YAAA,aAAA0C,wBAAA;QAAAxC,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,sBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMmC;QAAY;QAAAhC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAelBb,YAAA,aAAA4C,+BAAA;QAAA1C,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,6BAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMqC;QAAmB;QAAAlC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAQzBb,YAAA,aAAA8C,sBAAA;QAAA5C,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,oBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMuC;QAAU;QAAApC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAmBhBb,YAAA,aAAAgD,qBAAA;QAAA9C,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,mBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMyC;QAAS;QAAAtC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAcfb,YAAA,aAAAkD,oBAAA;QAAAhD,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,kBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAM2C;QAAQ;QAAAxC,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAedb,YAAA,aAAAoD,qBAAA;QAAAlD,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,mBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAM6C;QAAS;QAAA1C,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAQfb,YAAA,aAAAsD,2BAAA;QAAApD,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,yBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAM+C;QAAe;QAAA5C,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAiBrBb,YAAA,aAAAwD,wBAAA;QAAAtD,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,sBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMiD;QAAY;QAAA9C,QAAA,EAAAC;MAAA,SAAAC,0BAAA;MAoBlBb,YAAA,aAAA0D,uBAAA;QAAAxD,IAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,OAAA;QAAAC,MAAA;UAAAC,GAAA,EAAAC,GAAA,qBAAAA,GAAA;UAAAC,GAAA,EAAAD,GAAA,IAAAA,GAAA,CAAMmD;QAAW;QAAAhD,QAAA,EAAAC;MAAA,SAAAC,0BAAA;;;;;;;;IAjgBjB,OAAO+C,IAAIA,CACTC,WAAwB,EACxBC,MAAmC,EACnCC,EAAU,EACVC,GAAW,EACXC,cAA6B;MAE7B,MAAMC,eAAe,GAAG,IAAIxE,eAAe,CACzCmE,WAAW,EACXC,MAAM,EACNC,EAAE,EACFC,GAAG,EACHC,cAAc,CACf;MACDC,eAAe,CAAC,CAAAC,UAAW,EAAE;MAC7B,OAAOD,eAAe;IACxB;IAEA,CAAAE,UAAW,GA3DAC,iBAAA,OAAAxD,0BAAA,CAAe;IA4D1B,CAAAd,MAAO;IACP,CAAAiE,GAAI;IACK,CAAAM,QAAS,GAAG,IAAIC,GAAG,EAA2B;IAC9C,CAAAC,WAAY,GAAG,IAAInF,eAAA,CAAAoF,eAAe,EAAE;IACpC,CAAAC,MAAO,GAAG,IAAIH,GAAG,EAAuB;IACxC,CAAAI,QAAS,GAAG,IAAIJ,GAAG,EAAmB;IACtCK,YAAY;IACZb,EAAE;IACFD,MAAM;IACND,WAAW;IACXI,cAAc;IAEvBY,YACE/E,OAAoB,EACpBgE,MAAmC,EACnCC,EAAU,EACVC,GAAW,EACXC,cAA6B;MAE7B,KAAK,EAAE;MAEP,IAAI,CAAC,CAAAD,GAAI,GAAGA,GAAG;MACf,IAAI,CAACD,EAAE,GAAGA,EAAE;MACZ,IAAI,CAACD,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACD,WAAW,GAAG/D,OAAO;MAC1B,IAAI,CAACmE,cAAc,GAAGA,cAAc;MAEpC,IAAI,CAACW,YAAY,GAAG,IAAI,CAAC,CAAArC,iBAAkB,EAAE;IAC/C;IAEA,CAAA4B,UAAWW,CAAA;MACT,MAAMC,kBAAkB,GAAG,IAAI,CAAC,CAAAP,WAAY,CAACQ,GAAG,CAC9C,IAAI9F,iBAAA,CAAAS,YAAY,CAAC,IAAI,CAACkE,WAAW,CAAC,CACnC;MACDkB,kBAAkB,CAACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAAClF;MAAM,CAAC,KAAI;QAC7C,IAAI,CAACW,OAAO,CAAC,oCAAoCX,MAAM,EAAE,CAAC;MAC5D,CAAC,CAAC;MAEF,MAAMmF,cAAc,GAAG,IAAI,CAAC,CAAAV,WAAY,CAACQ,GAAG,CAC1C,IAAI9F,iBAAA,CAAAS,YAAY,CAAC,IAAI,CAAC,CAAAwF,OAAQ,CAAC,CAChC;MACDD,cAAc,CAACE,EAAE,CAAC,gCAAgC,EAAEC,IAAI,IAAG;QACzD,IAAIA,IAAI,CAACvB,MAAM,KAAK,IAAI,CAACC,EAAE,EAAE;UAC3B;QACF;QAEA,MAAMG,eAAe,GAAGxE,eAAe,CAACkE,IAAI,CAC1C,IAAI,CAACC,WAAW,EAChB,IAAI,EACJwB,IAAI,CAACvF,OAAO,EACZuF,IAAI,CAACrB,GAAG,EACRqB,IAAI,CAACpB,cAAc,CACpB;QACD,IAAI,CAAC,CAAAK,QAAS,CAACgB,GAAG,CAACD,IAAI,CAACvF,OAAO,EAAEoE,eAAe,CAAC;QAEjD,MAAMqB,sBAAsB,GAAG,IAAI,CAAC,CAAAf,WAAY,CAACQ,GAAG,CAClD,IAAI9F,iBAAA,CAAAS,YAAY,CAACuE,eAAe,CAAC,CAClC;QACDqB,sBAAsB,CAACN,IAAI,CAAC,QAAQ,EAAE,MAAK;UACzCM,sBAAsB,CAACC,kBAAkB,EAAE;UAE3C,IAAI,CAAC,CAAAlB,QAAS,CAACmB,MAAM,CAACvB,eAAe,CAACH,EAAE,CAAC;QAC3C,CAAC,CAAC;QAEF,IAAI,CAAC2B,IAAI,CAAC,iBAAiB,EAAE;UAACxB;QAAe,CAAC,CAAC;MACjD,CAAC,CAAC;MACFgB,cAAc,CAACE,EAAE,CAAC,kCAAkC,EAAEC,IAAI,IAAG;QAC3D,IAAIA,IAAI,CAACvF,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC5B;QACF;QACA,IAAI,CAACrD,OAAO,CAAC,kCAAkC,CAAC;MAClD,CAAC,CAAC;MAEFwE,cAAc,CAACE,EAAE,CAAC,kCAAkC,EAAEC,IAAI,IAAG;QAC3D,IAAIA,IAAI,CAACvF,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC5B;QACF;QACA,IAAI,CAAC,CAAAC,GAAI,GAAGqB,IAAI,CAACrB,GAAG;QACpB,IAAI,CAAC0B,IAAI,CAAC,kBAAkB,EAAEC,SAAS,CAAC;MAC1C,CAAC,CAAC;MAEFT,cAAc,CAACE,EAAE,CAAC,sBAAsB,EAAEC,IAAI,IAAG;QAC/C,IAAIA,IAAI,CAACvF,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC5B;QACF;QACA,IAAI,CAAC,CAAAC,GAAI,GAAGqB,IAAI,CAACrB,GAAG;QACpB,IAAI,CAAC0B,IAAI,CAAC,MAAM,EAAEC,SAAS,CAAC;MAC9B,CAAC,CAAC;MAEFT,cAAc,CAACE,EAAE,CAAC,mCAAmC,EAAEC,IAAI,IAAG;QAC5D,IAAIA,IAAI,CAACvF,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC5B;QACF;QACA;QACA;QAEA,KAAK,MAAM,CAACA,EAAE,EAAE6B,OAAO,CAAC,IAAI,IAAI,CAAC,CAAAjB,QAAS,EAAE;UAC1C,IAAIiB,OAAO,CAACC,QAAQ,EAAE;YACpB,IAAI,CAAC,CAAAlB,QAAS,CAACc,MAAM,CAAC1B,EAAE,CAAC;UAC3B;QACF;QACA;QACA;QACA,IAAI,IAAI,CAAC,CAAAK,UAAW,KAAKuB,SAAS,IAAI,CAAC,IAAI,CAAC,CAAAvB,UAAW,CAACyB,QAAQ,EAAE;UAChE;QACF;QAEA;QACA,IAAI,CAAC,CAAAzB,UAAW,GAAG9E,eAAA,CAAAwG,UAAU,CAAClC,IAAI,CAAC,IAAI,CAAC;QAExC,MAAMmC,iBAAiB,GAAG,IAAI,CAAC,CAAAvB,WAAY,CAACQ,GAAG,CAC7C,IAAI9F,iBAAA,CAAAS,YAAY,CAAC,IAAI,CAAC,CAAAyE,UAAW,CAAC,CACnC;QACD,KAAK,MAAM4B,SAAS,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAU,EAAE;UAClED,iBAAiB,CAACd,IAAI,CAACe,SAAS,EAAE,CAAC;YAAChC;UAAG,CAAC,KAAI;YAC1C+B,iBAAiB,CAAC1G,eAAA,CAAA4G,aAAa,CAAC,EAAE;YAElC,IAAI,CAAC,CAAAjC,GAAI,GAAGA,GAAG;UACjB,CAAC,CAAC;QACJ;QAEA,IAAI,CAAC0B,IAAI,CAAC,YAAY,EAAE;UAACtB,UAAU,EAAE,IAAI,CAAC,CAAAA;QAAW,CAAC,CAAC;MACzD,CAAC,CAAC;MACFc,cAAc,CAACE,EAAE,CAAC,2BAA2B,EAAEc,KAAK,IAAG;QACrD,IAAIA,KAAK,CAACpG,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC7B;QACF;QACA,IAAI,IAAI,CAAC,CAAAY,QAAS,CAACpE,GAAG,CAAC2F,KAAK,CAACN,OAAO,CAACA,OAAO,CAAC,EAAE;UAC7C;UACA;UACA;QACF;QAEA,MAAMA,OAAO,GAAGpG,YAAA,CAAA2G,OAAO,CAACvC,IAAI,CAAC,IAAI,EAAEsC,KAAK,CAAC;QACzC,IAAI,CAAC,CAAAvB,QAAS,CAACW,GAAG,CAACM,OAAO,CAAC7B,EAAE,EAAE6B,OAAO,CAAC;QACvC,IAAI,CAACF,IAAI,CAAC,SAAS,EAAE;UAACE;QAAO,CAAC,CAAC;MACjC,CAAC,CAAC;MAEFV,cAAc,CAACE,EAAE,CAAC,gBAAgB,EAAEgB,KAAK,IAAG;QAC1C,IAAIA,KAAK,CAACC,MAAM,CAACvG,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UACpC;QACF;QAEA,IAAI,CAAC2B,IAAI,CAAC,KAAK,EAAE;UAACU;QAAK,CAAC,CAAC;MAC3B,CAAC,CAAC;MAEFlB,cAAc,CAACE,EAAE,CAAC,kCAAkC,EAAEC,IAAI,IAAG;QAC3D,IAAIA,IAAI,CAACvF,OAAO,KAAK,IAAI,CAACiE,EAAE,EAAE;UAC5B;QACF;QAEA,MAAMuC,UAAU,GAAG7G,eAAA,CAAA8G,UAAU,CAAC3C,IAAI,CAAC,IAAI,EAAEyB,IAAI,CAAC;QAC9C,IAAI,CAACK,IAAI,CAAC,YAAY,EAAE;UAACY;QAAU,CAAC,CAAC;MACvC,CAAC,CAAC;IACJ;IAEA,IAAI,CAAAnB,OAAQqB,CAAA;MACV,OAAO,IAAI,CAAC3C,WAAW,CAAC4C,OAAO,CAACtB,OAAO;IACzC;IACA,IAAIb,QAAQA,CAAA;MACV,OAAO,IAAI,CAAC,CAAAA,QAAS,CAACoC,MAAM,EAAE;IAChC;IACA,IAAIC,MAAMA,CAAA;MACR,OAAO,IAAI,CAAC,CAAA5G,MAAO,KAAK4F,SAAS;IACnC;IACA,IAAIE,QAAQA,CAAA;MACV,OAAO,IAAI,CAACc,MAAM;IACpB;IACA,IAAIjC,MAAMA,CAAA;MACR;MACA,MAAMkC,IAAI,GAAG,IAAI;MACjB,OAAQ,aAAS;QACf,MAAMA,IAAI,CAAChC,YAAY;QACvB,OAAOgC,IAAI,CAAC,CAAAlC,MAAO,CAACgC,MAAM,EAAE;MAC9B,CAAC,CAAC,CAAE;IACN;IACA,IAAIG,GAAGA,CAAA;MACL,IAAI/G,OAAO,GAAG,IAAuB;MACrC,KAAK,IAAI;QAACgE;MAAM,CAAC,GAAGhE,OAAO,EAAEgE,MAAM,EAAE;QAACA;MAAM,CAAC,GAAGhE,OAAO,EAAE;QACvDA,OAAO,GAAGgE,MAAM;MAClB;MACA,OAAOhE,OAAO;IAChB;IACA,IAAIkE,GAAGA,CAAA;MACL,OAAO,IAAI,CAAC,CAAAA,GAAI;IAClB;IAEA,CAAAzB,iBAAkBuE,CAACC,OAAgB;MACjC,MAAMC,KAAK,GAAGzH,UAAA,CAAA0H,WAAW,CAACrD,IAAI,CAAC,IAAI,EAAEmD,OAAO,CAAC;MAC7CC,KAAK,CAAC5B,EAAE,CAAC,QAAQ,EAAE4B,KAAK,IAAG;QACzB,IAAI,CAACtB,IAAI,CAAC,QAAQ,EAAE;UAACsB;QAAK,CAAC,CAAC;MAC9B,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;IAGQtG,OAAOA,CAACX,MAAe;MAC7B,IAAI,CAAC,CAAAA,MAAO,GAAGA,MAAM;MACrB,IAAI,CAACV,eAAA,CAAA4G,aAAa,CAAC,EAAE;IACvB;IAMA,MAAMlF,QAAQA,CAAA;MACZ,MAAM,IAAI,CAAC,CAAAoE,OAAQ,CAAC+B,IAAI,CAAC,0BAA0B,EAAE;QACnDpH,OAAO,EAAE,IAAI,CAACiE;OACf,CAAC;IACJ;IAMA,MAAM9C,iBAAiBA,CACrBkG,OAAA,GAAoC,EAAE;MAEtC,MAAM;QACJC,MAAM,EAAE;UAACC;QAAI;MAAC,CACf,GAAG,MAAM,IAAI,CAAC,CAAAlC,OAAQ,CAAC+B,IAAI,CAAC,mCAAmC,EAAE;QAChEpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB,GAAGoD;OACJ,CAAC;MACF,OAAOE,IAAI;IACb;IAMA,MAAMlG,KAAKA,CAACmG,YAAsB;MAChC,MAAMC,OAAO,CAACC,GAAG,CACf,CAAC,GAAG,IAAI,CAAC,CAAAlD,QAAS,CAACoC,MAAM,EAAE,CAAC,CAACe,GAAG,CAAC,MAAMC,KAAK,IAAG;QAC7C,MAAMA,KAAK,CAACvG,KAAK,CAACmG,YAAY,CAAC;MACjC,CAAC,CAAC,CACH;MACD,MAAM,IAAI,CAAC,CAAAnC,OAAQ,CAAC+B,IAAI,CAAC,uBAAuB,EAAE;QAChDpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChBuD;OACD,CAAC;IACJ;IAMA,MAAMjG,eAAeA,CAACsG,KAAa;MACjC,MAAM,IAAI,CAAC,CAAAxC,OAAQ,CAAC+B,IAAI,CAAC,iCAAiC,EAAE;QAC1DpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB4D;OACD,CAAC;IACJ;IAMA,MAAMpG,QAAQA,CACZyC,GAAW,EACX4D,IAA0C;MAE1C,MAAM,IAAI,CAAC,CAAAzC,OAAQ,CAAC+B,IAAI,CAAC,0BAA0B,EAAE;QACnDpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChBC,GAAG;QACH4D;OACD,CAAC;IACJ;IAMA,MAAMnG,MAAMA,CAAC0F,OAAA,GAAyB,EAAE;MACtC,MAAM,IAAI,CAAC,CAAAhC,OAAQ,CAAC+B,IAAI,CAAC,wBAAwB,EAAE;QACjDpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB,GAAGoD;OACJ,CAAC;IACJ;IAMA,MAAMxF,gBAAgBA,CAACkG,aAAmC;MACxD;MACA,MAAM,IAAI,CAAC,CAAA1C,OAAQ,CAAC+B,IAAI,CAAC,0BAA0B,EAAE;QACnDY,QAAQ,EAAE,CAAC,IAAI,CAAC/D,EAAE,CAAC;QACnB8D;OACD,CAAC;IACJ;IAMA,MAAMhG,KAAKA,CAACsF,OAAA,GAAwB,EAAE;MACpC,MAAM;QACJC,MAAM,EAAE;UAACC;QAAI;MAAC,CACf,GAAG,MAAM,IAAI,CAAC,CAAAlC,OAAQ,CAAC+B,IAAI,CAAC,uBAAuB,EAAE;QACpDpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB,GAAGoD;OACJ,CAAC;MACF,OAAOE,IAAI;IACb;IAMA,MAAMtF,gBAAgBA,CAACoF,OAAA,GAAmC,EAAE;MAC1D,MAAM,IAAI,CAAC,CAAAhC,OAAQ,CAAC+B,IAAI,CAAC,kCAAkC,EAAE;QAC3DpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB,GAAGoD;OACJ,CAAC;IACJ;IAMA,MAAMlF,WAAWA,CAACkF,OAAA,GAA8B,EAAE;MAChD,MAAM,IAAI,CAAC,CAAAhC,OAAQ,CAAC+B,IAAI,CAAC,6BAA6B,EAAE;QACtDpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB,GAAGoD;OACJ,CAAC;IACJ;IAMA,MAAMhF,cAAcA,CAAC4F,OAAmC;MACtD,MAAM,IAAI,CAAC,CAAA5C,OAAQ,CAAC+B,IAAI,CAAC,sBAAsB,EAAE;QAC/CpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChBgE;OACD,CAAC;IACJ;IAMA,MAAM1F,cAAcA,CAAA;MAClB,MAAM,IAAI,CAAC,CAAA8C,OAAQ,CAAC+B,IAAI,CAAC,sBAAsB,EAAE;QAC/CpH,OAAO,EAAE,IAAI,CAACiE;OACf,CAAC;IACJ;IAMAxB,iBAAiBA,CAACwE,OAAe;MAC/B,OAAO,IAAI,CAAC,CAAAxE,iBAAkB,CAACwE,OAAO,CAAC;IACzC;IAMA,MAAMtE,gBAAgBA,CACpBuF,mBAA2B,EAC3Bb,OAAA,GAAmC,EAAE;MAErC,OAAO,MAAM,IAAI,CAACtD,WAAW,CAAC4C,OAAO,CAAChE,gBAAgB,CACpDuF,mBAAmB,EACnB;QACE,GAAGb,OAAO;QACVW,QAAQ,EAAE,CAAC,IAAI;OAChB,CACF;IACH;IAMA,MAAMnF,YAAYA,CAACwE,OAA4B;MAC7C,MAAM;QACJC,MAAM,EAAE;UAACa;QAAS;MAAC,CACpB,GAAG,MAAM,IAAI,CAACpE,WAAW,CAAC4C,OAAO,CAACtB,OAAO,CAAC+B,IAAI,CAAC,sBAAsB,EAAE;QACtE,GAAGC,OAAO;QACVW,QAAQ,EAAE,CAAC,IAAI,CAAC/D,EAAE;OACnB,CAAC;MAEF,OAAOkE,SAAS;IAClB;IAMA,MAAMpF,mBAAmBA,CAACqF,MAAc;MACtC,MAAM,IAAI,CAACrE,WAAW,CAAC4C,OAAO,CAAC5D,mBAAmB,CAACqF,MAAM,CAAC;IAC5D;IAMA,MAAMnF,UAAUA,CACdoE,OAAA,GAA6B,EAAE;MAE/B,MAAM;QACJC,MAAM,EAAE;UAACe;QAAO;MAAC,CAClB,GAAG,MAAM,IAAI,CAAC,CAAAhD,OAAQ,CAAC+B,IAAI,CAAC,oBAAoB,EAAE;QACjD,GAAGC,OAAO;QACViB,SAAS,EAAE;UACTC,IAAI,EAAE,SAAS;UACfvI,OAAO,EAAE,IAAI,CAACiE;;OAEjB,CAAC;MACF,OAAOoE,OAAO;IAChB;IAMA,MAAMlF,SAASA,CAACqF,MAAkC;MAChD,MAAM,IAAI,CAAC,CAAAnD,OAAQ,CAAC+B,IAAI,CAAC,mBAAmB,EAAE;QAC5CoB,MAAM;QACNF,SAAS,EAAE;UACTC,IAAI,EAAE,SAAS;UACfvI,OAAO,EAAE,IAAI,CAACiE;;OAEjB,CAAC;IACJ;IAMA,MAAMZ,QAAQA,CACZoF,OAAoC,EACpCC,KAAe;MAEf,MAAM,IAAI,CAAC,CAAArD,OAAQ,CAAC+B,IAAI,CAAC,gBAAgB,EAAE;QACzCpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChBwE,OAAO;QACPC;OACD,CAAC;IACJ;IAMA,MAAMnF,SAASA,CAACoF,MAA6B;MAC3C,MAAM,IAAI,CAAC,CAAAtD,OAAQ,CAAC9B,SAAS,CAACoF,MAAM,EAAE,CAAC,IAAI,CAAC1E,EAAE,CAAC,CAAC;IAClD;IAMA,MAAMR,eAAeA,CAACkF,MAA6B;MACjD,MAAM,IAAI,CAAC,CAAAtD,OAAQ,CAAC9B,SAAS,CAACoF,MAAM,EAAE,CAAC,IAAI,CAAC1E,EAAE,CAAC,CAAC;IAClD;IAEA,EAAA9D,mBAAA,IA1QCb,eAAA,CAAAsJ,eAAe,GAAA5H,oBAAA,IAMf,IAAA1B,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAiB,6BAAA,IAOD,IAAA5B,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAmB,iBAAA,IAaD,IAAA9B,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAqB,2BAAA,IAaD,IAAAhC,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAuB,oBAAA,IAQD,IAAAlC,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAyB,kBAAA,IAYD,IAAApC,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA2B,4BAAA,IAQD,IAAAtC,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA6B,iBAAA,IASD,IAAAxC,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA+B,4BAAA,IAWD,IAAA1C,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAiC,uBAAA,IAQD,IAAA5C,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAmC,0BAAA,IAQD,IAAA9C,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAqC,0BAAA,IAQD,IAAAhD,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAuC,6BAAA,IAOD,IAAAlD,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAyC,4BAAA,IAKD,IAAApD,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA2C,wBAAA,IAcD,IAAAtD,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA6C,+BAAA,IAYD,IAAAxD,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAA+C,sBAAA,IAKD,IAAA1D,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAiD,qBAAA,IAgBD,IAAA5D,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAmD,oBAAA,IAWD,IAAA9D,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAqD,qBAAA,IAYD,IAAAhE,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAAAuD,2BAAA,IAKD,IAAAlE,eAAA,CAAAS,eAAe,EAAkBC,OAAO,IAAG;MAC1C;MACA,OAAOA,OAAO,CAAC,CAAAC,MAAQ;IACzB,CAAC,CAAC,GAKDV,eAAA,CAAA4G,aAAa,KAAC;MACb,IAAI,CAAC,CAAAlG,MAAO,KACV,4EAA4E;MAC9E,IAAI,CAAC2F,IAAI,CAAC,QAAQ,EAAE;QAAC3F,MAAM,EAAE,IAAI,CAAC,CAAAA;MAAO,CAAC,CAAC;MAE3C,IAAI,CAAC,CAAAyE,WAAY,CAAC9D,OAAO,EAAE;MAC3B,KAAK,CAACrB,eAAA,CAAA4G,aAAa,CAAC,EAAE;IACxB;IAMA,MAAMxC,YAAYA,CAChB,GAAGkF,aAA0C;MAE7C,MAAMpB,OAAO,CAACC,GAAG,CACfmB,aAAa,CAAClB,GAAG,CAAC,MAAMmB,MAAM,IAAG;QAC/B,MAAM,IAAI,CAAC,CAAAzD,OAAQ,CAAC+B,IAAI,CAAC,uBAAuB,EAAE;UAChD0B,MAAM,EAAEA,MAAM;UACdR,SAAS,EAAE;YACTC,IAAI,EAAE,SAAS;YACfvI,OAAO,EAAE,IAAI,CAACiE;;SAEjB,CAAC;MACJ,CAAC,CAAC,CACH;IACH;IAMA,MAAMJ,WAAWA,CACfkF,OAAqC,EACrCC,UAA2E;MAE3E;MACA,MAAM1B,MAAM,GAAG,MAAM,IAAI,CAAC,CAAAjC,OAAQ,CAAC+B,IAAI,CAAC,6BAA6B,EAAE;QACrEpH,OAAO,EAAE,IAAI,CAACiE,EAAE;QAChB8E,OAAO;QACPC,UAAU,EAAEA,UAAU,CAACC,MAAM,GAAGD,UAAU,GAAGnD;OAC9C,CAAC;MACF,OAAOyB,MAAM,CAACA,MAAM,CAAC4B,KAAK;IAC5B;;;AArjBWC,OAAA,CAAAvJ,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}