{"ast":null,"code":"\"use strict\";\n\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiWorkerRealm = exports.BidiFrameRealm = exports.BidiRealm = void 0;\nconst Realm_js_1 = require(\"../api/Realm.js\");\nconst AriaQueryHandler_js_1 = require(\"../cdp/AriaQueryHandler.js\");\nconst LazyArg_js_1 = require(\"../common/LazyArg.js\");\nconst ScriptInjector_js_1 = require(\"../common/ScriptInjector.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst AsyncIterableUtil_js_1 = require(\"../util/AsyncIterableUtil.js\");\nconst Function_js_1 = require(\"../util/Function.js\");\nconst Deserializer_js_1 = require(\"./Deserializer.js\");\nconst ElementHandle_js_1 = require(\"./ElementHandle.js\");\nconst ExposedFunction_js_1 = require(\"./ExposedFunction.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst Serializer_js_1 = require(\"./Serializer.js\");\nconst util_js_2 = require(\"./util.js\");\n/**\n * @internal\n */\nclass BidiRealm extends Realm_js_1.Realm {\n  realm;\n  constructor(realm, timeoutSettings) {\n    super(timeoutSettings);\n    this.realm = realm;\n  }\n  initialize() {\n    this.realm.on('destroyed', ({\n      reason\n    }) => {\n      this.taskManager.terminateAll(new Error(reason));\n      this.dispose();\n    });\n    this.realm.on('updated', () => {\n      this.internalPuppeteerUtil = undefined;\n      void this.taskManager.rerunAll();\n    });\n  }\n  internalPuppeteerUtil;\n  get puppeteerUtil() {\n    const promise = Promise.resolve();\n    ScriptInjector_js_1.scriptInjector.inject(script => {\n      if (this.internalPuppeteerUtil) {\n        void this.internalPuppeteerUtil.then(handle => {\n          void handle.dispose();\n        });\n      }\n      this.internalPuppeteerUtil = promise.then(() => {\n        return this.evaluateHandle(script);\n      });\n    }, !this.internalPuppeteerUtil);\n    return this.internalPuppeteerUtil;\n  }\n  async evaluateHandle(pageFunction, ...args) {\n    return await this.#evaluate(false, pageFunction, ...args);\n  }\n  async evaluate(pageFunction, ...args) {\n    return await this.#evaluate(true, pageFunction, ...args);\n  }\n  async #evaluate(returnByValue, pageFunction, ...args) {\n    const sourceUrlComment = (0, util_js_1.getSourceUrlComment)((0, util_js_1.getSourcePuppeteerURLIfAvailable)(pageFunction)?.toString() ?? util_js_1.PuppeteerURL.INTERNAL_URL);\n    let responsePromise;\n    const resultOwnership = returnByValue ? \"none\" /* Bidi.Script.ResultOwnership.None */ : \"root\" /* Bidi.Script.ResultOwnership.Root */;\n    const serializationOptions = returnByValue ? {} : {\n      maxObjectDepth: 0,\n      maxDomDepth: 0\n    };\n    if ((0, util_js_1.isString)(pageFunction)) {\n      const expression = util_js_1.SOURCE_URL_REGEX.test(pageFunction) ? pageFunction : `${pageFunction}\\n${sourceUrlComment}\\n`;\n      responsePromise = this.realm.evaluate(expression, true, {\n        resultOwnership,\n        userActivation: true,\n        serializationOptions\n      });\n    } else {\n      let functionDeclaration = (0, Function_js_1.stringifyFunction)(pageFunction);\n      functionDeclaration = util_js_1.SOURCE_URL_REGEX.test(functionDeclaration) ? functionDeclaration : `${functionDeclaration}\\n${sourceUrlComment}\\n`;\n      responsePromise = this.realm.callFunction(functionDeclaration, /* awaitPromise= */true, {\n        // LazyArgs are used only internally and should not affect the order\n        // evaluate calls for the public APIs.\n        arguments: args.some(arg => {\n          return arg instanceof LazyArg_js_1.LazyArg;\n        }) ? await Promise.all(args.map(arg => {\n          return this.serializeAsync(arg);\n        })) : args.map(arg => {\n          return this.serialize(arg);\n        }),\n        resultOwnership,\n        userActivation: true,\n        serializationOptions\n      });\n    }\n    const result = await responsePromise;\n    if ('type' in result && result.type === 'exception') {\n      throw (0, util_js_2.createEvaluationError)(result.exceptionDetails);\n    }\n    return returnByValue ? Deserializer_js_1.BidiDeserializer.deserialize(result.result) : this.createHandle(result.result);\n  }\n  createHandle(result) {\n    if ((result.type === 'node' || result.type === 'window') && this instanceof BidiFrameRealm) {\n      return ElementHandle_js_1.BidiElementHandle.from(result, this);\n    }\n    return JSHandle_js_1.BidiJSHandle.from(result, this);\n  }\n  async serializeAsync(arg) {\n    if (arg instanceof LazyArg_js_1.LazyArg) {\n      arg = await arg.get(this);\n    }\n    return this.serialize(arg);\n  }\n  serialize(arg) {\n    if (arg instanceof JSHandle_js_1.BidiJSHandle || arg instanceof ElementHandle_js_1.BidiElementHandle) {\n      if (arg.realm !== this) {\n        if (!(arg.realm instanceof BidiFrameRealm) || !(this instanceof BidiFrameRealm)) {\n          throw new Error(\"Trying to evaluate JSHandle from different global types. Usually this means you're using a handle from a worker in a page or vice versa.\");\n        }\n        if (arg.realm.environment !== this.environment) {\n          throw new Error(\"Trying to evaluate JSHandle from different frames. Usually this means you're using a handle from a page on a different page.\");\n        }\n      }\n      if (arg.disposed) {\n        throw new Error('JSHandle is disposed!');\n      }\n      return arg.remoteValue();\n    }\n    return Serializer_js_1.BidiSerializer.serialize(arg);\n  }\n  async destroyHandles(handles) {\n    if (this.disposed) {\n      return;\n    }\n    const handleIds = handles.map(({\n      id\n    }) => {\n      return id;\n    }).filter(id => {\n      return id !== undefined;\n    });\n    if (handleIds.length === 0) {\n      return;\n    }\n    await this.realm.disown(handleIds).catch(error => {\n      // Exceptions might happen in case of a page been navigated or closed.\n      // Swallow these since they are harmless and we don't leak anything in this case.\n      (0, util_js_1.debugError)(error);\n    });\n  }\n  async adoptHandle(handle) {\n    return await this.evaluateHandle(node => {\n      return node;\n    }, handle);\n  }\n  async transferHandle(handle) {\n    if (handle.realm === this) {\n      return handle;\n    }\n    const transferredHandle = this.adoptHandle(handle);\n    await handle.dispose();\n    return await transferredHandle;\n  }\n}\nexports.BidiRealm = BidiRealm;\n/**\n * @internal\n */\nclass BidiFrameRealm extends BidiRealm {\n  static from(realm, frame) {\n    const frameRealm = new BidiFrameRealm(realm, frame);\n    frameRealm.#initialize();\n    return frameRealm;\n  }\n  #frame;\n  constructor(realm, frame) {\n    super(realm, frame.timeoutSettings);\n    this.#frame = frame;\n  }\n  #initialize() {\n    super.initialize();\n    // This should run first.\n    this.realm.on('updated', () => {\n      this.environment.clearDocumentHandle();\n      this.#bindingsInstalled = false;\n    });\n  }\n  #bindingsInstalled = false;\n  get puppeteerUtil() {\n    let promise = Promise.resolve();\n    if (!this.#bindingsInstalled) {\n      promise = Promise.all([ExposedFunction_js_1.ExposeableFunction.from(this.environment, '__ariaQuerySelector', AriaQueryHandler_js_1.ARIAQueryHandler.queryOne, !!this.sandbox), ExposedFunction_js_1.ExposeableFunction.from(this.environment, '__ariaQuerySelectorAll', async (element, selector) => {\n        const results = AriaQueryHandler_js_1.ARIAQueryHandler.queryAll(element, selector);\n        return await element.realm.evaluateHandle((...elements) => {\n          return elements;\n        }, ...(await AsyncIterableUtil_js_1.AsyncIterableUtil.collect(results)));\n      }, !!this.sandbox)]);\n      this.#bindingsInstalled = true;\n    }\n    return promise.then(() => {\n      return super.puppeteerUtil;\n    });\n  }\n  get sandbox() {\n    return this.realm.sandbox;\n  }\n  get environment() {\n    return this.#frame;\n  }\n  async adoptBackendNode(backendNodeId) {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const {\n        object\n      } = await this.#frame.client.send('DOM.resolveNode', {\n        backendNodeId,\n        executionContextId: await this.realm.resolveExecutionContextId()\n      });\n      const handle = __addDisposableResource(env_1, ElementHandle_js_1.BidiElementHandle.from({\n        handle: object.objectId,\n        type: 'node'\n      }, this), false);\n      // We need the sharedId, so we perform the following to obtain it.\n      return await handle.evaluateHandle(element => {\n        return element;\n      });\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  }\n}\nexports.BidiFrameRealm = BidiFrameRealm;\n/**\n * @internal\n */\nclass BidiWorkerRealm extends BidiRealm {\n  static from(realm, worker) {\n    const workerRealm = new BidiWorkerRealm(realm, worker);\n    workerRealm.initialize();\n    return workerRealm;\n  }\n  #worker;\n  constructor(realm, frame) {\n    super(realm, frame.timeoutSettings);\n    this.#worker = frame;\n  }\n  get environment() {\n    return this.#worker;\n  }\n  async adoptBackendNode() {\n    throw new Error('Cannot adopt DOM nodes into a worker.');\n  }\n}\nexports.BidiWorkerRealm = BidiWorkerRealm;","map":{"version":3,"names":["Realm_js_1","require","AriaQueryHandler_js_1","LazyArg_js_1","ScriptInjector_js_1","util_js_1","AsyncIterableUtil_js_1","Function_js_1","Deserializer_js_1","ElementHandle_js_1","ExposedFunction_js_1","JSHandle_js_1","Serializer_js_1","util_js_2","BidiRealm","Realm","realm","constructor","timeoutSettings","initialize","on","reason","taskManager","terminateAll","Error","dispose","internalPuppeteerUtil","undefined","rerunAll","puppeteerUtil","promise","Promise","resolve","scriptInjector","inject","script","then","handle","evaluateHandle","pageFunction","args","evaluate","#evaluate","returnByValue","sourceUrlComment","getSourceUrlComment","getSourcePuppeteerURLIfAvailable","toString","PuppeteerURL","INTERNAL_URL","responsePromise","resultOwnership","serializationOptions","maxObjectDepth","maxDomDepth","isString","expression","SOURCE_URL_REGEX","test","userActivation","functionDeclaration","stringifyFunction","callFunction","arguments","some","arg","LazyArg","all","map","serializeAsync","serialize","result","type","createEvaluationError","exceptionDetails","BidiDeserializer","deserialize","createHandle","BidiFrameRealm","BidiElementHandle","from","BidiJSHandle","get","environment","disposed","remoteValue","BidiSerializer","destroyHandles","handles","handleIds","id","filter","length","disown","catch","error","debugError","adoptHandle","node","transferHandle","transferredHandle","exports","frame","frameRealm","#initialize","clearDocumentHandle","bindingsInstalled","ExposeableFunction","ARIAQueryHandler","queryOne","sandbox","element","selector","results","queryAll","elements","AsyncIterableUtil","collect","adoptBackendNode","backendNodeId","object","client","send","executionContextId","resolveExecutionContextId","__addDisposableResource","env_1","objectId","BidiWorkerRealm","worker","workerRealm"],"sources":["/Users/lawj4/webDevelopment/Todo-List/frontend/node_modules/puppeteer-core/src/bidi/Realm.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {JSHandle} from '../api/JSHandle.js';\nimport {Realm} from '../api/Realm.js';\nimport {ARIAQueryHandler} from '../cdp/AriaQueryHandler.js';\nimport {LazyArg} from '../common/LazyArg.js';\nimport {scriptInjector} from '../common/ScriptInjector.js';\nimport type {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {EvaluateFunc, HandleFor} from '../common/types.js';\nimport {\n  debugError,\n  getSourcePuppeteerURLIfAvailable,\n  getSourceUrlComment,\n  isString,\n  PuppeteerURL,\n  SOURCE_URL_REGEX,\n} from '../common/util.js';\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\nimport {stringifyFunction} from '../util/Function.js';\n\nimport type {\n  Realm as BidiRealmCore,\n  DedicatedWorkerRealm,\n  SharedWorkerRealm,\n} from './core/Realm.js';\nimport type {WindowRealm} from './core/Realm.js';\nimport {BidiDeserializer} from './Deserializer.js';\nimport {BidiElementHandle} from './ElementHandle.js';\nimport {ExposeableFunction} from './ExposedFunction.js';\nimport type {BidiFrame} from './Frame.js';\nimport {BidiJSHandle} from './JSHandle.js';\nimport {BidiSerializer} from './Serializer.js';\nimport {createEvaluationError} from './util.js';\nimport type {BidiWebWorker} from './WebWorker.js';\n\n/**\n * @internal\n */\nexport abstract class BidiRealm extends Realm {\n  readonly realm: BidiRealmCore;\n\n  constructor(realm: BidiRealmCore, timeoutSettings: TimeoutSettings) {\n    super(timeoutSettings);\n    this.realm = realm;\n  }\n\n  protected initialize(): void {\n    this.realm.on('destroyed', ({reason}) => {\n      this.taskManager.terminateAll(new Error(reason));\n      this.dispose();\n    });\n    this.realm.on('updated', () => {\n      this.internalPuppeteerUtil = undefined;\n      void this.taskManager.rerunAll();\n    });\n  }\n\n  protected internalPuppeteerUtil?: Promise<BidiJSHandle<PuppeteerUtil>>;\n  get puppeteerUtil(): Promise<BidiJSHandle<PuppeteerUtil>> {\n    const promise = Promise.resolve() as Promise<unknown>;\n    scriptInjector.inject(script => {\n      if (this.internalPuppeteerUtil) {\n        void this.internalPuppeteerUtil.then(handle => {\n          void handle.dispose();\n        });\n      }\n      this.internalPuppeteerUtil = promise.then(() => {\n        return this.evaluateHandle(script) as Promise<\n          BidiJSHandle<PuppeteerUtil>\n        >;\n      });\n    }, !this.internalPuppeteerUtil);\n    return this.internalPuppeteerUtil as Promise<BidiJSHandle<PuppeteerUtil>>;\n  }\n\n  override async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return await this.#evaluate(false, pageFunction, ...args);\n  }\n\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    return await this.#evaluate(true, pageFunction, ...args);\n  }\n\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    returnByValue: true,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    returnByValue: false,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>,\n  >(\n    returnByValue: boolean,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>> | Awaited<ReturnType<Func>>> {\n    const sourceUrlComment = getSourceUrlComment(\n      getSourcePuppeteerURLIfAvailable(pageFunction)?.toString() ??\n        PuppeteerURL.INTERNAL_URL\n    );\n\n    let responsePromise;\n    const resultOwnership = returnByValue\n      ? Bidi.Script.ResultOwnership.None\n      : Bidi.Script.ResultOwnership.Root;\n    const serializationOptions: Bidi.Script.SerializationOptions = returnByValue\n      ? {}\n      : {\n          maxObjectDepth: 0,\n          maxDomDepth: 0,\n        };\n    if (isString(pageFunction)) {\n      const expression = SOURCE_URL_REGEX.test(pageFunction)\n        ? pageFunction\n        : `${pageFunction}\\n${sourceUrlComment}\\n`;\n\n      responsePromise = this.realm.evaluate(expression, true, {\n        resultOwnership,\n        userActivation: true,\n        serializationOptions,\n      });\n    } else {\n      let functionDeclaration = stringifyFunction(pageFunction);\n      functionDeclaration = SOURCE_URL_REGEX.test(functionDeclaration)\n        ? functionDeclaration\n        : `${functionDeclaration}\\n${sourceUrlComment}\\n`;\n      responsePromise = this.realm.callFunction(\n        functionDeclaration,\n        /* awaitPromise= */ true,\n        {\n          // LazyArgs are used only internally and should not affect the order\n          // evaluate calls for the public APIs.\n          arguments: args.some(arg => {\n            return arg instanceof LazyArg;\n          })\n            ? await Promise.all(\n                args.map(arg => {\n                  return this.serializeAsync(arg);\n                })\n              )\n            : args.map(arg => {\n                return this.serialize(arg);\n              }),\n          resultOwnership,\n          userActivation: true,\n          serializationOptions,\n        }\n      );\n    }\n\n    const result = await responsePromise;\n\n    if ('type' in result && result.type === 'exception') {\n      throw createEvaluationError(result.exceptionDetails);\n    }\n\n    return returnByValue\n      ? BidiDeserializer.deserialize(result.result)\n      : this.createHandle(result.result);\n  }\n\n  createHandle(\n    result: Bidi.Script.RemoteValue\n  ): BidiJSHandle<unknown> | BidiElementHandle<Node> {\n    if (\n      (result.type === 'node' || result.type === 'window') &&\n      this instanceof BidiFrameRealm\n    ) {\n      return BidiElementHandle.from(result, this);\n    }\n    return BidiJSHandle.from(result, this);\n  }\n\n  async serializeAsync(arg: unknown): Promise<Bidi.Script.LocalValue> {\n    if (arg instanceof LazyArg) {\n      arg = await arg.get(this);\n    }\n    return this.serialize(arg);\n  }\n\n  serialize(arg: unknown): Bidi.Script.LocalValue {\n    if (arg instanceof BidiJSHandle || arg instanceof BidiElementHandle) {\n      if (arg.realm !== this) {\n        if (\n          !(arg.realm instanceof BidiFrameRealm) ||\n          !(this instanceof BidiFrameRealm)\n        ) {\n          throw new Error(\n            \"Trying to evaluate JSHandle from different global types. Usually this means you're using a handle from a worker in a page or vice versa.\"\n          );\n        }\n        if (arg.realm.environment !== this.environment) {\n          throw new Error(\n            \"Trying to evaluate JSHandle from different frames. Usually this means you're using a handle from a page on a different page.\"\n          );\n        }\n      }\n      if (arg.disposed) {\n        throw new Error('JSHandle is disposed!');\n      }\n      return arg.remoteValue() as Bidi.Script.RemoteReference;\n    }\n\n    return BidiSerializer.serialize(arg);\n  }\n\n  async destroyHandles(handles: Array<BidiJSHandle<unknown>>): Promise<void> {\n    if (this.disposed) {\n      return;\n    }\n\n    const handleIds = handles\n      .map(({id}) => {\n        return id;\n      })\n      .filter((id): id is string => {\n        return id !== undefined;\n      });\n\n    if (handleIds.length === 0) {\n      return;\n    }\n\n    await this.realm.disown(handleIds).catch(error => {\n      // Exceptions might happen in case of a page been navigated or closed.\n      // Swallow these since they are harmless and we don't leak anything in this case.\n      debugError(error);\n    });\n  }\n\n  override async adoptHandle<T extends JSHandle<Node>>(handle: T): Promise<T> {\n    return (await this.evaluateHandle(node => {\n      return node;\n    }, handle)) as unknown as T;\n  }\n\n  override async transferHandle<T extends JSHandle<Node>>(\n    handle: T\n  ): Promise<T> {\n    if (handle.realm === this) {\n      return handle;\n    }\n    const transferredHandle = this.adoptHandle(handle);\n    await handle.dispose();\n    return await transferredHandle;\n  }\n}\n\n/**\n * @internal\n */\nexport class BidiFrameRealm extends BidiRealm {\n  static from(realm: WindowRealm, frame: BidiFrame): BidiFrameRealm {\n    const frameRealm = new BidiFrameRealm(realm, frame);\n    frameRealm.#initialize();\n    return frameRealm;\n  }\n  declare readonly realm: WindowRealm;\n\n  readonly #frame: BidiFrame;\n\n  private constructor(realm: WindowRealm, frame: BidiFrame) {\n    super(realm, frame.timeoutSettings);\n    this.#frame = frame;\n  }\n\n  #initialize() {\n    super.initialize();\n\n    // This should run first.\n    this.realm.on('updated', () => {\n      this.environment.clearDocumentHandle();\n      this.#bindingsInstalled = false;\n    });\n  }\n\n  #bindingsInstalled = false;\n  override get puppeteerUtil(): Promise<BidiJSHandle<PuppeteerUtil>> {\n    let promise = Promise.resolve() as Promise<unknown>;\n    if (!this.#bindingsInstalled) {\n      promise = Promise.all([\n        ExposeableFunction.from(\n          this.environment as BidiFrame,\n          '__ariaQuerySelector',\n          ARIAQueryHandler.queryOne,\n          !!this.sandbox\n        ),\n        ExposeableFunction.from(\n          this.environment as BidiFrame,\n          '__ariaQuerySelectorAll',\n          async (\n            element: BidiElementHandle<Node>,\n            selector: string\n          ): Promise<JSHandle<Node[]>> => {\n            const results = ARIAQueryHandler.queryAll(element, selector);\n            return await element.realm.evaluateHandle(\n              (...elements) => {\n                return elements;\n              },\n              ...(await AsyncIterableUtil.collect(results))\n            );\n          },\n          !!this.sandbox\n        ),\n      ]);\n      this.#bindingsInstalled = true;\n    }\n    return promise.then(() => {\n      return super.puppeteerUtil;\n    });\n  }\n\n  get sandbox(): string | undefined {\n    return this.realm.sandbox;\n  }\n\n  override get environment(): BidiFrame {\n    return this.#frame;\n  }\n\n  override async adoptBackendNode(\n    backendNodeId?: number | undefined\n  ): Promise<JSHandle<Node>> {\n    const {object} = await this.#frame.client.send('DOM.resolveNode', {\n      backendNodeId,\n      executionContextId: await this.realm.resolveExecutionContextId(),\n    });\n    using handle = BidiElementHandle.from(\n      {\n        handle: object.objectId,\n        type: 'node',\n      },\n      this\n    );\n    // We need the sharedId, so we perform the following to obtain it.\n    return await handle.evaluateHandle(element => {\n      return element;\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport class BidiWorkerRealm extends BidiRealm {\n  static from(\n    realm: DedicatedWorkerRealm | SharedWorkerRealm,\n    worker: BidiWebWorker\n  ): BidiWorkerRealm {\n    const workerRealm = new BidiWorkerRealm(realm, worker);\n    workerRealm.initialize();\n    return workerRealm;\n  }\n  declare readonly realm: DedicatedWorkerRealm | SharedWorkerRealm;\n\n  readonly #worker: BidiWebWorker;\n\n  private constructor(\n    realm: DedicatedWorkerRealm | SharedWorkerRealm,\n    frame: BidiWebWorker\n  ) {\n    super(realm, frame.timeoutSettings);\n    this.#worker = frame;\n  }\n\n  override get environment(): BidiWebWorker {\n    return this.#worker;\n  }\n\n  override async adoptBackendNode(): Promise<JSHandle<Node>> {\n    throw new Error('Cannot adopt DOM nodes into a worker.');\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}