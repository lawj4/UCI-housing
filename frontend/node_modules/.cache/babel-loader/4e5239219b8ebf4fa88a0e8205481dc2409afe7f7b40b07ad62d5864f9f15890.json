{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowsingContextProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass BrowsingContextProcessor {\n  #browserCdpClient;\n  #browsingContextStorage;\n  #eventManager;\n  constructor(browserCdpClient, browsingContextStorage, eventManager) {\n    this.#browserCdpClient = browserCdpClient;\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#eventManager = eventManager;\n    this.#eventManager.addSubscribeHook(protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextCreated, this.#onContextCreatedSubscribeHook.bind(this));\n  }\n  getTree(params) {\n    const resultContexts = params.root === undefined ? this.#browsingContextStorage.getTopLevelContexts() : [this.#browsingContextStorage.getContext(params.root)];\n    return {\n      contexts: resultContexts.map(c => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE))\n    };\n  }\n  async create(params) {\n    let referenceContext;\n    let userContext = 'default';\n    if (params.referenceContext !== undefined) {\n      referenceContext = this.#browsingContextStorage.getContext(params.referenceContext);\n      if (!referenceContext.isTopLevelContext()) {\n        throw new protocol_js_1.InvalidArgumentException(`referenceContext should be a top-level context`);\n      }\n      userContext = referenceContext.userContext;\n    }\n    if (params.userContext !== undefined) {\n      userContext = params.userContext;\n    }\n    const existingContexts = this.#browsingContextStorage.getAllContexts().filter(context => context.userContext === userContext);\n    let newWindow = false;\n    switch (params.type) {\n      case \"tab\" /* BrowsingContext.CreateType.Tab */:\n        newWindow = false;\n        break;\n      case \"window\" /* BrowsingContext.CreateType.Window */:\n        newWindow = true;\n        break;\n    }\n    if (!existingContexts.length) {\n      // If there are no contexts in the given user context, we need to set\n      // newWindow to true as newWindow=false will be rejected.\n      newWindow = true;\n    }\n    let result;\n    try {\n      result = await this.#browserCdpClient.sendCommand('Target.createTarget', {\n        url: 'about:blank',\n        newWindow,\n        browserContextId: userContext === 'default' ? undefined : userContext,\n        background: params.background === true\n      });\n    } catch (err) {\n      if (\n      // See https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/devtools/protocol/target_handler.cc;l=90;drc=e80392ac11e48a691f4309964cab83a3a59e01c8\n      err.message.startsWith('Failed to find browser context with id') ||\n      // See https://source.chromium.org/chromium/chromium/src/+/main:headless/lib/browser/protocol/target_handler.cc;l=49;drc=e80392ac11e48a691f4309964cab83a3a59e01c8\n      err.message === 'browserContextId') {\n        throw new protocol_js_1.NoSuchUserContextException(`The context ${userContext} was not found`);\n      }\n      throw err;\n    }\n    // Wait for the new tab to be loaded to avoid race conditions in the\n    // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n    // `browsingContext.load` events from the initial `about:blank` navigation\n    // are emitted after the next navigation is started.\n    // Details: https://github.com/web-platform-tests/wpt/issues/35846\n    const contextId = result.targetId;\n    const context = this.#browsingContextStorage.getContext(contextId);\n    await context.lifecycleLoaded();\n    return {\n      context: context.id\n    };\n  }\n  navigate(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return context.navigate(params.url, params.wait ?? \"none\" /* BrowsingContext.ReadinessState.None */);\n  }\n  reload(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return context.reload(params.ignoreCache ?? false, params.wait ?? \"none\" /* BrowsingContext.ReadinessState.None */);\n  }\n  async activate(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException('Activation is only supported on the top-level context');\n    }\n    await context.activate();\n    return {};\n  }\n  async captureScreenshot(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return await context.captureScreenshot(params);\n  }\n  async print(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return await context.print(params);\n  }\n  async setViewport(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException('Emulating viewport is only supported on the top-level context');\n    }\n    await context.setViewport(params.viewport, params.devicePixelRatio);\n    return {};\n  }\n  async traverseHistory(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context) {\n      throw new protocol_js_1.InvalidArgumentException(`No browsing context with id ${params.context}`);\n    }\n    await context.traverseHistory(params.delta);\n    return {};\n  }\n  async handleUserPrompt(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    try {\n      await context.handleUserPrompt(params.accept, params.userText);\n    } catch (error) {\n      // Heuristically determine the error\n      // https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/protocol/page_handler.cc;l=1085?q=%22No%20dialog%20is%20showing%22&ss=chromium\n      if (error.message?.includes('No dialog is showing')) {\n        throw new protocol_js_1.NoSuchAlertException('No dialog is showing');\n      }\n      throw error;\n    }\n    return {};\n  }\n  async close(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    if (!context.isTopLevelContext()) {\n      throw new protocol_js_1.InvalidArgumentException(`Non top-level browsing context ${context.id} cannot be closed.`);\n    }\n    try {\n      const detachedFromTargetPromise = new Promise(resolve => {\n        const onContextDestroyed = event => {\n          if (event.targetId === params.context) {\n            this.#browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n            resolve();\n          }\n        };\n        this.#browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n      });\n      if (params.promptUnload) {\n        await context.close();\n      } else {\n        await this.#browserCdpClient.sendCommand('Target.closeTarget', {\n          targetId: params.context\n        });\n      }\n      // Sometimes CDP command finishes before `detachedFromTarget` event,\n      // sometimes after. Wait for the CDP command to be finished, and then wait\n      // for `detachedFromTarget` if it hasn't emitted.\n      await detachedFromTargetPromise;\n    } catch (error) {\n      // Swallow error that arise from the page being destroyed\n      // Example is navigating to faulty SSL certificate\n      if (!(error.code === -32000 /* CdpErrorConstants.GENERIC_ERROR */ && error.message === 'Not attached to an active page')) {\n        throw error;\n      }\n    }\n    return {};\n  }\n  async locateNodes(params) {\n    const context = this.#browsingContextStorage.getContext(params.context);\n    return await context.locateNodes(params);\n  }\n  #onContextCreatedSubscribeHook(contextId) {\n    const context = this.#browsingContextStorage.getContext(contextId);\n    const contextsToReport = [context, ...this.#browsingContextStorage.getContext(contextId).allChildren];\n    contextsToReport.forEach(context => {\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextCreated,\n        params: context.serializeToBidiValue()\n      }, context.id);\n    });\n    return Promise.resolve();\n  }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;","map":{"version":3,"names":["protocol_js_1","require","BrowsingContextProcessor","browserCdpClient","browsingContextStorage","eventManager","constructor","addSubscribeHook","ChromiumBidi","BrowsingContext","EventNames","ContextCreated","onContextCreatedSubscribeHook","bind","getTree","params","resultContexts","root","undefined","getTopLevelContexts","getContext","contexts","map","c","serializeToBidiValue","maxDepth","Number","MAX_VALUE","create","referenceContext","userContext","isTopLevelContext","InvalidArgumentException","existingContexts","getAllContexts","filter","context","newWindow","type","length","result","sendCommand","url","browserContextId","background","err","message","startsWith","NoSuchUserContextException","contextId","targetId","lifecycleLoaded","id","navigate","wait","reload","ignoreCache","activate","captureScreenshot","print","setViewport","viewport","devicePixelRatio","traverseHistory","delta","handleUserPrompt","accept","userText","error","includes","NoSuchAlertException","close","detachedFromTargetPromise","Promise","resolve","onContextDestroyed","event","off","on","promptUnload","code","locateNodes","#onContextCreatedSubscribeHook","contextsToReport","allChildren","forEach","registerEvent","method","exports"],"sources":["../../../../../src/bidiMapper/modules/context/BrowsingContextProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}