{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeMatchingFlags = exports.getFeatures = exports.ChromeLauncher = void 0;\nconst promises_1 = require(\"fs/promises\");\nconst os_1 = __importDefault(require(\"os\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst browsers_1 = require(\"@puppeteer/browsers\");\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst BrowserLauncher_js_1 = require(\"./BrowserLauncher.js\");\nconst fs_js_1 = require(\"./util/fs.js\");\n/**\n * @internal\n */\nclass ChromeLauncher extends BrowserLauncher_js_1.BrowserLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'chrome');\n  }\n  launch(options = {}) {\n    if (this.puppeteer.configuration.logLevel === 'warn' && process.platform === 'darwin' && process.arch === 'x64') {\n      const cpus = os_1.default.cpus();\n      if (cpus[0]?.model.includes('Apple')) {\n        console.warn(['\\x1B[1m\\x1B[43m\\x1B[30m', 'Degraded performance warning:\\x1B[0m\\x1B[33m', 'Launching Chrome on Mac Silicon (arm64) from an x64 Node installation results in', 'Rosetta translating the Chrome binary, even if Chrome is already arm64. This would', 'result in huge performance issues. To resolve this, you must run Puppeteer with', 'a version of Node built for arm64.'].join('\\n  '));\n      }\n    }\n    return super.launch(options);\n  }\n  /**\n   * @internal\n   */\n  async computeLaunchArguments(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      pipe = false,\n      debuggingPort,\n      channel,\n      executablePath\n    } = options;\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) {\n      chromeArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => {\n        return !ignoreDefaultArgs.includes(arg);\n      }));\n    } else {\n      chromeArguments.push(...args);\n    }\n    if (!chromeArguments.some(argument => {\n      return argument.startsWith('--remote-debugging-');\n    })) {\n      if (pipe) {\n        (0, assert_js_1.assert)(!debuggingPort, 'Browser should be launched with either pipe or debugging port - not both.');\n        chromeArguments.push('--remote-debugging-pipe');\n      } else {\n        chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n      }\n    }\n    let isTempUserDataDir = false;\n    // Check for the user data dir argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    let userDataDirIndex = chromeArguments.findIndex(arg => {\n      return arg.startsWith('--user-data-dir');\n    });\n    if (userDataDirIndex < 0) {\n      isTempUserDataDir = true;\n      chromeArguments.push(`--user-data-dir=${await (0, promises_1.mkdtemp)(this.getProfilePath())}`);\n      userDataDirIndex = chromeArguments.length - 1;\n    }\n    const userDataDir = chromeArguments[userDataDirIndex].split('=', 2)[1];\n    (0, assert_js_1.assert)(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n    let chromeExecutable = executablePath;\n    if (!chromeExecutable) {\n      (0, assert_js_1.assert)(channel || !this.puppeteer._isPuppeteerCore, `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``);\n      chromeExecutable = this.executablePath(channel, options.headless ?? true);\n    }\n    return {\n      executablePath: chromeExecutable,\n      args: chromeArguments,\n      isTempUserDataDir,\n      userDataDir\n    };\n  }\n  /**\n   * @internal\n   */\n  async cleanUserDataDir(path, opts) {\n    if (opts.isTemp) {\n      try {\n        await (0, fs_js_1.rm)(path);\n      } catch (error) {\n        (0, util_js_1.debugError)(error);\n        throw error;\n      }\n    }\n  }\n  defaultArgs(options = {}) {\n    // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n    const userDisabledFeatures = getFeatures('--disable-features', options.args);\n    if (options.args && userDisabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--disable-features');\n    }\n    const turnOnExperimentalFeaturesForTesting = process.env['PUPPETEER_TEST_EXPERIMENTAL_CHROME_FEATURES'] === 'true';\n    // Merge default disabled features with user-provided ones, if any.\n    const disabledFeatures = ['Translate',\n    // AcceptCHFrame disabled because of crbug.com/1348106.\n    'AcceptCHFrame', 'MediaRouter', 'OptimizationHints', ...(turnOnExperimentalFeaturesForTesting ? [] : [\n    // https://crbug.com/1492053\n    'ProcessPerSiteUpToMainFrameThreshold',\n    // https://github.com/puppeteer/puppeteer/issues/10715\n    'IsolateSandboxedIframes']), ...userDisabledFeatures].filter(feature => {\n      return feature !== '';\n    });\n    const userEnabledFeatures = getFeatures('--enable-features', options.args);\n    if (options.args && userEnabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--enable-features');\n    }\n    // Merge default enabled features with user-provided ones, if any.\n    const enabledFeatures = ['PdfOopif',\n    // Add features to enable by default here.\n    ...userEnabledFeatures].filter(feature => {\n      return feature !== '';\n    });\n    const chromeArguments = ['--allow-pre-commit-input', '--disable-background-networking', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-component-update', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', '--disable-hang-monitor', '--disable-infobars', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-search-engine-choice-screen', '--disable-sync', '--enable-automation', '--export-tagged-pdf', '--generate-pdf-document-outline', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--password-store=basic', '--use-mock-keychain', `--disable-features=${disabledFeatures.join(',')}`, `--enable-features=${enabledFeatures.join(',')}`].filter(arg => {\n      return arg !== '';\n    });\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir\n    } = options;\n    if (userDataDir) {\n      chromeArguments.push(`--user-data-dir=${path_1.default.resolve(userDataDir)}`);\n    }\n    if (devtools) {\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    }\n    if (headless) {\n      chromeArguments.push(headless === 'shell' ? '--headless' : '--headless=new', '--hide-scrollbars', '--mute-audio');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      chromeArguments.push('about:blank');\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n  executablePath(channel, headless) {\n    if (channel) {\n      return (0, browsers_1.computeSystemExecutablePath)({\n        browser: browsers_1.Browser.CHROME,\n        channel: convertPuppeteerChannelToBrowsersChannel(channel)\n      });\n    } else {\n      return this.resolveExecutablePath(headless);\n    }\n  }\n}\nexports.ChromeLauncher = ChromeLauncher;\nfunction convertPuppeteerChannelToBrowsersChannel(channel) {\n  switch (channel) {\n    case 'chrome':\n      return browsers_1.ChromeReleaseChannel.STABLE;\n    case 'chrome-dev':\n      return browsers_1.ChromeReleaseChannel.DEV;\n    case 'chrome-beta':\n      return browsers_1.ChromeReleaseChannel.BETA;\n    case 'chrome-canary':\n      return browsers_1.ChromeReleaseChannel.CANARY;\n  }\n}\n/**\n * Extracts all features from the given command-line flag\n * (e.g. `--enable-features`, `--enable-features=`).\n *\n * Example input:\n * [\"--enable-features=NetworkService,NetworkServiceInProcess\", \"--enable-features=Foo\"]\n *\n * Example output:\n * [\"NetworkService\", \"NetworkServiceInProcess\", \"Foo\"]\n *\n * @internal\n */\nfunction getFeatures(flag, options = []) {\n  return options.filter(s => {\n    return s.startsWith(flag.endsWith('=') ? flag : `${flag}=`);\n  }).map(s => {\n    return s.split(new RegExp(`${flag}=\\\\s*`))[1]?.trim();\n  }).filter(s => {\n    return s;\n  });\n}\nexports.getFeatures = getFeatures;\n/**\n * Removes all elements in-place from the given string array\n * that match the given command-line flag.\n *\n * @internal\n */\nfunction removeMatchingFlags(array, flag) {\n  const regex = new RegExp(`^${flag}=.*`);\n  let i = 0;\n  while (i < array.length) {\n    if (regex.test(array[i])) {\n      array.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return array;\n}\nexports.removeMatchingFlags = removeMatchingFlags;","map":{"version":3,"names":["promises_1","require","os_1","__importDefault","path_1","browsers_1","util_js_1","assert_js_1","BrowserLauncher_js_1","fs_js_1","ChromeLauncher","BrowserLauncher","constructor","puppeteer","launch","options","configuration","logLevel","process","platform","arch","cpus","default","model","includes","console","warn","join","computeLaunchArguments","ignoreDefaultArgs","args","pipe","debuggingPort","channel","executablePath","chromeArguments","push","defaultArgs","Array","isArray","filter","arg","some","argument","startsWith","assert","isTempUserDataDir","userDataDirIndex","findIndex","mkdtemp","getProfilePath","length","userDataDir","split","chromeExecutable","_isPuppeteerCore","headless","cleanUserDataDir","path","opts","isTemp","rm","error","debugError","userDisabledFeatures","getFeatures","removeMatchingFlags","turnOnExperimentalFeaturesForTesting","env","disabledFeatures","feature","userEnabledFeatures","enabledFeatures","devtools","resolve","every","computeSystemExecutablePath","browser","Browser","CHROME","convertPuppeteerChannelToBrowsersChannel","resolveExecutablePath","exports","ChromeReleaseChannel","STABLE","DEV","BETA","CANARY","flag","s","endsWith","map","RegExp","trim","array","regex","i","test","splice"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/node/ChromeLauncher.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {mkdtemp} from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\n\nimport {\n  computeSystemExecutablePath,\n  Browser as SupportedBrowsers,\n  ChromeReleaseChannel as BrowsersChromeReleaseChannel,\n} from '@puppeteer/browsers';\n\nimport type {Browser} from '../api/Browser.js';\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport {BrowserLauncher, type ResolvedLaunchArgs} from './BrowserLauncher.js';\nimport type {\n  BrowserLaunchArgumentOptions,\n  ChromeReleaseChannel,\n  PuppeteerNodeLaunchOptions,\n} from './LaunchOptions.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\nimport {rm} from './util/fs.js';\n\n/**\n * @internal\n */\nexport class ChromeLauncher extends BrowserLauncher {\n  constructor(puppeteer: PuppeteerNode) {\n    super(puppeteer, 'chrome');\n  }\n\n  override launch(options: PuppeteerNodeLaunchOptions = {}): Promise<Browser> {\n    if (\n      this.puppeteer.configuration.logLevel === 'warn' &&\n      process.platform === 'darwin' &&\n      process.arch === 'x64'\n    ) {\n      const cpus = os.cpus();\n      if (cpus[0]?.model.includes('Apple')) {\n        console.warn(\n          [\n            '\\x1B[1m\\x1B[43m\\x1B[30m',\n            'Degraded performance warning:\\x1B[0m\\x1B[33m',\n            'Launching Chrome on Mac Silicon (arm64) from an x64 Node installation results in',\n            'Rosetta translating the Chrome binary, even if Chrome is already arm64. This would',\n            'result in huge performance issues. To resolve this, you must run Puppeteer with',\n            'a version of Node built for arm64.',\n          ].join('\\n  ')\n        );\n      }\n    }\n\n    return super.launch(options);\n  }\n\n  /**\n   * @internal\n   */\n  override async computeLaunchArguments(\n    options: PuppeteerNodeLaunchOptions = {}\n  ): Promise<ResolvedLaunchArgs> {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      pipe = false,\n      debuggingPort,\n      channel,\n      executablePath,\n    } = options;\n\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) {\n      chromeArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      chromeArguments.push(\n        ...this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        })\n      );\n    } else {\n      chromeArguments.push(...args);\n    }\n\n    if (\n      !chromeArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })\n    ) {\n      if (pipe) {\n        assert(\n          !debuggingPort,\n          'Browser should be launched with either pipe or debugging port - not both.'\n        );\n        chromeArguments.push('--remote-debugging-pipe');\n      } else {\n        chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n      }\n    }\n\n    let isTempUserDataDir = false;\n\n    // Check for the user data dir argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    let userDataDirIndex = chromeArguments.findIndex(arg => {\n      return arg.startsWith('--user-data-dir');\n    });\n    if (userDataDirIndex < 0) {\n      isTempUserDataDir = true;\n      chromeArguments.push(\n        `--user-data-dir=${await mkdtemp(this.getProfilePath())}`\n      );\n      userDataDirIndex = chromeArguments.length - 1;\n    }\n\n    const userDataDir = chromeArguments[userDataDirIndex]!.split('=', 2)[1];\n    assert(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n\n    let chromeExecutable = executablePath;\n    if (!chromeExecutable) {\n      assert(\n        channel || !this.puppeteer._isPuppeteerCore,\n        `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``\n      );\n      chromeExecutable = this.executablePath(channel, options.headless ?? true);\n    }\n\n    return {\n      executablePath: chromeExecutable,\n      args: chromeArguments,\n      isTempUserDataDir,\n      userDataDir,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async cleanUserDataDir(\n    path: string,\n    opts: {isTemp: boolean}\n  ): Promise<void> {\n    if (opts.isTemp) {\n      try {\n        await rm(path);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    }\n  }\n\n  override defaultArgs(options: BrowserLaunchArgumentOptions = {}): string[] {\n    // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n\n    const userDisabledFeatures = getFeatures(\n      '--disable-features',\n      options.args\n    );\n    if (options.args && userDisabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--disable-features');\n    }\n\n    const turnOnExperimentalFeaturesForTesting =\n      process.env['PUPPETEER_TEST_EXPERIMENTAL_CHROME_FEATURES'] === 'true';\n\n    // Merge default disabled features with user-provided ones, if any.\n    const disabledFeatures = [\n      'Translate',\n      // AcceptCHFrame disabled because of crbug.com/1348106.\n      'AcceptCHFrame',\n      'MediaRouter',\n      'OptimizationHints',\n\n      ...(turnOnExperimentalFeaturesForTesting\n        ? []\n        : [\n            // https://crbug.com/1492053\n            'ProcessPerSiteUpToMainFrameThreshold',\n            // https://github.com/puppeteer/puppeteer/issues/10715\n            'IsolateSandboxedIframes',\n          ]),\n      ...userDisabledFeatures,\n    ].filter(feature => {\n      return feature !== '';\n    });\n\n    const userEnabledFeatures = getFeatures('--enable-features', options.args);\n    if (options.args && userEnabledFeatures.length > 0) {\n      removeMatchingFlags(options.args, '--enable-features');\n    }\n\n    // Merge default enabled features with user-provided ones, if any.\n    const enabledFeatures = [\n      'PdfOopif',\n      // Add features to enable by default here.\n      ...userEnabledFeatures,\n    ].filter(feature => {\n      return feature !== '';\n    });\n\n    const chromeArguments = [\n      '--allow-pre-commit-input',\n      '--disable-background-networking',\n      '--disable-background-timer-throttling',\n      '--disable-backgrounding-occluded-windows',\n      '--disable-breakpad',\n      '--disable-client-side-phishing-detection',\n      '--disable-component-extensions-with-background-pages',\n      '--disable-component-update',\n      '--disable-default-apps',\n      '--disable-dev-shm-usage',\n      '--disable-extensions',\n      '--disable-hang-monitor',\n      '--disable-infobars',\n      '--disable-ipc-flooding-protection',\n      '--disable-popup-blocking',\n      '--disable-prompt-on-repost',\n      '--disable-renderer-backgrounding',\n      '--disable-search-engine-choice-screen',\n      '--disable-sync',\n      '--enable-automation',\n      '--export-tagged-pdf',\n      '--generate-pdf-document-outline',\n      '--force-color-profile=srgb',\n      '--metrics-recording-only',\n      '--no-first-run',\n      '--password-store=basic',\n      '--use-mock-keychain',\n      `--disable-features=${disabledFeatures.join(',')}`,\n      `--enable-features=${enabledFeatures.join(',')}`,\n    ].filter(arg => {\n      return arg !== '';\n    });\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir,\n    } = options;\n    if (userDataDir) {\n      chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    }\n    if (devtools) {\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    }\n    if (headless) {\n      chromeArguments.push(\n        headless === 'shell' ? '--headless' : '--headless=new',\n        '--hide-scrollbars',\n        '--mute-audio'\n      );\n    }\n    if (\n      args.every(arg => {\n        return arg.startsWith('-');\n      })\n    ) {\n      chromeArguments.push('about:blank');\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  override executablePath(\n    channel?: ChromeReleaseChannel,\n    headless?: boolean | 'shell'\n  ): string {\n    if (channel) {\n      return computeSystemExecutablePath({\n        browser: SupportedBrowsers.CHROME,\n        channel: convertPuppeteerChannelToBrowsersChannel(channel),\n      });\n    } else {\n      return this.resolveExecutablePath(headless);\n    }\n  }\n}\n\nfunction convertPuppeteerChannelToBrowsersChannel(\n  channel: ChromeReleaseChannel\n): BrowsersChromeReleaseChannel {\n  switch (channel) {\n    case 'chrome':\n      return BrowsersChromeReleaseChannel.STABLE;\n    case 'chrome-dev':\n      return BrowsersChromeReleaseChannel.DEV;\n    case 'chrome-beta':\n      return BrowsersChromeReleaseChannel.BETA;\n    case 'chrome-canary':\n      return BrowsersChromeReleaseChannel.CANARY;\n  }\n}\n\n/**\n * Extracts all features from the given command-line flag\n * (e.g. `--enable-features`, `--enable-features=`).\n *\n * Example input:\n * [\"--enable-features=NetworkService,NetworkServiceInProcess\", \"--enable-features=Foo\"]\n *\n * Example output:\n * [\"NetworkService\", \"NetworkServiceInProcess\", \"Foo\"]\n *\n * @internal\n */\nexport function getFeatures(flag: string, options: string[] = []): string[] {\n  return options\n    .filter(s => {\n      return s.startsWith(flag.endsWith('=') ? flag : `${flag}=`);\n    })\n    .map(s => {\n      return s.split(new RegExp(`${flag}=\\\\s*`))[1]?.trim();\n    })\n    .filter(s => {\n      return s;\n    }) as string[];\n}\n\n/**\n * Removes all elements in-place from the given string array\n * that match the given command-line flag.\n *\n * @internal\n */\nexport function removeMatchingFlags(array: string[], flag: string): string[] {\n  const regex = new RegExp(`^${flag}=.*`);\n  let i = 0;\n  while (i < array.length) {\n    if (regex.test(array[i]!)) {\n      array.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return array;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}