{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Navigation = void 0;\nconst EventEmitter_js_1 = require(\"../../common/EventEmitter.js\");\nconst decorators_js_1 = require(\"../../util/decorators.js\");\nconst disposable_js_1 = require(\"../../util/disposable.js\");\n/**\n * @internal\n */\nlet Navigation = (() => {\n  var _a;\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _dispose_decorators;\n  return class Navigation extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      __esDecorate(this, null, _dispose_decorators, {\n        kind: \"method\",\n        name: \"dispose\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"dispose\" in obj,\n          get: obj => obj.dispose\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static from(context) {\n      const navigation = new Navigation(context);\n      navigation.#initialize();\n      return navigation;\n    }\n    #request = __runInitializers(this, _instanceExtraInitializers);\n    #navigation;\n    #browsingContext;\n    #disposables = new disposable_js_1.DisposableStack();\n    #id;\n    constructor(context) {\n      super();\n      this.#browsingContext = context;\n    }\n    #initialize() {\n      const browsingContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#browsingContext));\n      browsingContextEmitter.once('closed', () => {\n        this.emit('failed', {\n          url: this.#browsingContext.url,\n          timestamp: new Date()\n        });\n        this.dispose();\n      });\n      browsingContextEmitter.on('request', ({\n        request\n      }) => {\n        if (request.navigation === undefined ||\n        // If a request with a navigation ID comes in, then the navigation ID is\n        // for this navigation.\n        !this.#matches(request.navigation)) {\n          return;\n        }\n        this.#request = request;\n        this.emit('request', request);\n        const requestEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#request));\n        requestEmitter.on('redirect', request => {\n          this.#request = request;\n        });\n      });\n      const sessionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#session));\n      sessionEmitter.on('browsingContext.navigationStarted', info => {\n        if (info.context !== this.#browsingContext.id || this.#navigation !== undefined) {\n          return;\n        }\n        this.#navigation = Navigation.from(this.#browsingContext);\n      });\n      for (const eventName of ['browsingContext.domContentLoaded', 'browsingContext.load']) {\n        sessionEmitter.on(eventName, info => {\n          if (info.context !== this.#browsingContext.id || info.navigation === null || !this.#matches(info.navigation)) {\n            return;\n          }\n          this.dispose();\n        });\n      }\n      for (const [eventName, event] of [['browsingContext.fragmentNavigated', 'fragment'], ['browsingContext.navigationFailed', 'failed'], ['browsingContext.navigationAborted', 'aborted']]) {\n        sessionEmitter.on(eventName, info => {\n          if (info.context !== this.#browsingContext.id ||\n          // Note we don't check if `navigation` is null since `null` means the\n          // fragment navigated.\n          !this.#matches(info.navigation)) {\n            return;\n          }\n          this.emit(event, {\n            url: info.url,\n            timestamp: new Date(info.timestamp)\n          });\n          this.dispose();\n        });\n      }\n    }\n    #matches(navigation) {\n      if (this.#navigation !== undefined && !this.#navigation.disposed) {\n        return false;\n      }\n      if (this.#id === undefined) {\n        this.#id = navigation;\n        return true;\n      }\n      return this.#id === navigation;\n    }\n    get #session() {\n      return this.#browsingContext.userContext.browser.session;\n    }\n    get disposed() {\n      return this.#disposables.disposed;\n    }\n    get request() {\n      return this.#request;\n    }\n    get navigation() {\n      return this.#navigation;\n    }\n    dispose() {\n      this[disposable_js_1.disposeSymbol]();\n    }\n    [(_dispose_decorators = [decorators_js_1.inertIfDisposed], disposable_js_1.disposeSymbol)]() {\n      this.#disposables.dispose();\n      super[disposable_js_1.disposeSymbol]();\n    }\n  };\n})();\nexports.Navigation = Navigation;","map":{"version":3,"names":["EventEmitter_js_1","require","decorators_js_1","disposable_js_1","Navigation","EventEmitter","_classSuper","__esDecorate","_dispose_decorators","kind","name","static","private","access","has","obj","get","dispose","metadata","_metadata","_instanceExtraInitializers","from","context","navigation","initialize","request","__runInitializers","browsingContext","disposables","DisposableStack","id","constructor","#initialize","browsingContextEmitter","use","once","emit","url","timestamp","Date","on","undefined","matches","requestEmitter","sessionEmitter","session","info","eventName","event","#matches","disposed","#session","userContext","browser","disposeSymbol","inertIfDisposed","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/core/Navigation.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport {inertIfDisposed} from '../../util/decorators.js';\nimport {DisposableStack, disposeSymbol} from '../../util/disposable.js';\n\nimport type {BrowsingContext} from './BrowsingContext.js';\nimport type {Request} from './Request.js';\n\n/**\n * @internal\n */\nexport interface NavigationInfo {\n  url: string;\n  timestamp: Date;\n}\n\n/**\n * @internal\n */\nexport class Navigation extends EventEmitter<{\n  /** Emitted when navigation has a request associated with it. */\n  request: Request;\n  /** Emitted when fragment navigation occurred. */\n  fragment: NavigationInfo;\n  /** Emitted when navigation failed. */\n  failed: NavigationInfo;\n  /** Emitted when navigation was aborted. */\n  aborted: NavigationInfo;\n}> {\n  static from(context: BrowsingContext): Navigation {\n    const navigation = new Navigation(context);\n    navigation.#initialize();\n    return navigation;\n  }\n\n  #request: Request | undefined;\n  #navigation: Navigation | undefined;\n  readonly #browsingContext: BrowsingContext;\n  readonly #disposables = new DisposableStack();\n  #id?: string | null;\n\n  private constructor(context: BrowsingContext) {\n    super();\n\n    this.#browsingContext = context;\n  }\n\n  #initialize() {\n    const browsingContextEmitter = this.#disposables.use(\n      new EventEmitter(this.#browsingContext)\n    );\n    browsingContextEmitter.once('closed', () => {\n      this.emit('failed', {\n        url: this.#browsingContext.url,\n        timestamp: new Date(),\n      });\n      this.dispose();\n    });\n\n    browsingContextEmitter.on('request', ({request}) => {\n      if (\n        request.navigation === undefined ||\n        // If a request with a navigation ID comes in, then the navigation ID is\n        // for this navigation.\n        !this.#matches(request.navigation)\n      ) {\n        return;\n      }\n\n      this.#request = request;\n      this.emit('request', request);\n      const requestEmitter = this.#disposables.use(\n        new EventEmitter(this.#request)\n      );\n\n      requestEmitter.on('redirect', request => {\n        this.#request = request;\n      });\n    });\n\n    const sessionEmitter = this.#disposables.use(\n      new EventEmitter(this.#session)\n    );\n    sessionEmitter.on('browsingContext.navigationStarted', info => {\n      if (\n        info.context !== this.#browsingContext.id ||\n        this.#navigation !== undefined\n      ) {\n        return;\n      }\n      this.#navigation = Navigation.from(this.#browsingContext);\n    });\n\n    for (const eventName of [\n      'browsingContext.domContentLoaded',\n      'browsingContext.load',\n    ] as const) {\n      sessionEmitter.on(eventName, info => {\n        if (\n          info.context !== this.#browsingContext.id ||\n          info.navigation === null ||\n          !this.#matches(info.navigation)\n        ) {\n          return;\n        }\n\n        this.dispose();\n      });\n    }\n\n    for (const [eventName, event] of [\n      ['browsingContext.fragmentNavigated', 'fragment'],\n      ['browsingContext.navigationFailed', 'failed'],\n      ['browsingContext.navigationAborted', 'aborted'],\n    ] as const) {\n      sessionEmitter.on(eventName, info => {\n        if (\n          info.context !== this.#browsingContext.id ||\n          // Note we don't check if `navigation` is null since `null` means the\n          // fragment navigated.\n          !this.#matches(info.navigation)\n        ) {\n          return;\n        }\n\n        this.emit(event, {\n          url: info.url,\n          timestamp: new Date(info.timestamp),\n        });\n        this.dispose();\n      });\n    }\n  }\n\n  #matches(navigation: string | null): boolean {\n    if (this.#navigation !== undefined && !this.#navigation.disposed) {\n      return false;\n    }\n    if (this.#id === undefined) {\n      this.#id = navigation;\n      return true;\n    }\n    return this.#id === navigation;\n  }\n\n  get #session() {\n    return this.#browsingContext.userContext.browser.session;\n  }\n  get disposed(): boolean {\n    return this.#disposables.disposed;\n  }\n  get request(): Request | undefined {\n    return this.#request;\n  }\n  get navigation(): Navigation | undefined {\n    return this.#navigation;\n  }\n\n  @inertIfDisposed\n  private dispose(): void {\n    this[disposeSymbol]();\n  }\n\n  [disposeSymbol](): void {\n    this.#disposables.dispose();\n    super[disposeSymbol]();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}