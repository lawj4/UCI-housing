{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __setFunctionName = this && this.__setFunctionName || function (f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiFrame = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst Frame_js_1 = require(\"../api/Frame.js\");\nconst Accessibility_js_1 = require(\"../cdp/Accessibility.js\");\nconst ConsoleMessage_js_1 = require(\"../common/ConsoleMessage.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst CDPSession_js_1 = require(\"./CDPSession.js\");\nconst Deserializer_js_1 = require(\"./Deserializer.js\");\nconst Dialog_js_1 = require(\"./Dialog.js\");\nconst ExposedFunction_js_1 = require(\"./ExposedFunction.js\");\nconst HTTPRequest_js_1 = require(\"./HTTPRequest.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\nconst util_js_2 = require(\"./util.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\nlet BidiFrame = (() => {\n  var _a;\n  let _classSuper = Frame_js_1.Frame;\n  let _instanceExtraInitializers = [];\n  let _goto_decorators;\n  let _setContent_decorators;\n  let _waitForNavigation_decorators;\n  let _private_waitForLoad$_decorators;\n  let _private_waitForLoad$_descriptor;\n  let _private_waitForNetworkIdle$_decorators;\n  let _private_waitForNetworkIdle$_descriptor;\n  let _setFiles_decorators;\n  let _locateNodes_decorators;\n  return class BidiFrame extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      _goto_decorators = [Frame_js_1.throwIfDetached];\n      _setContent_decorators = [Frame_js_1.throwIfDetached];\n      _waitForNavigation_decorators = [Frame_js_1.throwIfDetached];\n      _private_waitForLoad$_decorators = [Frame_js_1.throwIfDetached];\n      _private_waitForNetworkIdle$_decorators = [Frame_js_1.throwIfDetached];\n      _setFiles_decorators = [Frame_js_1.throwIfDetached];\n      _locateNodes_decorators = [Frame_js_1.throwIfDetached];\n      __esDecorate(this, null, _goto_decorators, {\n        kind: \"method\",\n        name: \"goto\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"goto\" in obj,\n          get: obj => obj.goto\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setContent_decorators, {\n        kind: \"method\",\n        name: \"setContent\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setContent\" in obj,\n          get: obj => obj.setContent\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _waitForNavigation_decorators, {\n        kind: \"method\",\n        name: \"waitForNavigation\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"waitForNavigation\" in obj,\n          get: obj => obj.waitForNavigation\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, _private_waitForLoad$_descriptor = {\n        value: __setFunctionName(function (options = {}) {\n          let {\n            waitUntil = 'load'\n          } = options;\n          const {\n            timeout: ms = this.timeoutSettings.navigationTimeout()\n          } = options;\n          if (!Array.isArray(waitUntil)) {\n            waitUntil = [waitUntil];\n          }\n          const events = new Set();\n          for (const lifecycleEvent of waitUntil) {\n            switch (lifecycleEvent) {\n              case 'load':\n                {\n                  events.add('load');\n                  break;\n                }\n              case 'domcontentloaded':\n                {\n                  events.add('DOMContentLoaded');\n                  break;\n                }\n            }\n          }\n          if (events.size === 0) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return (0, rxjs_js_1.combineLatest)([...events].map(event => {\n            return (0, util_js_1.fromEmitterEvent)(this.browsingContext, event);\n          })).pipe((0, rxjs_js_1.map)(() => {}), (0, rxjs_js_1.first)(), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), this.#detached$().pipe((0, rxjs_js_1.map)(() => {\n            throw new Error('Frame detached.');\n          }))));\n        }, \"#waitForLoad$\")\n      }, _private_waitForLoad$_decorators, {\n        kind: \"method\",\n        name: \"#waitForLoad$\",\n        static: false,\n        private: true,\n        access: {\n          has: obj => #waitForLoad$ in obj,\n          get: obj => obj.#waitForLoad$\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, _private_waitForNetworkIdle$_descriptor = {\n        value: __setFunctionName(function (options = {}) {\n          let {\n            waitUntil = 'load'\n          } = options;\n          if (!Array.isArray(waitUntil)) {\n            waitUntil = [waitUntil];\n          }\n          let concurrency = Infinity;\n          for (const event of waitUntil) {\n            switch (event) {\n              case 'networkidle0':\n                {\n                  concurrency = Math.min(0, concurrency);\n                  break;\n                }\n              case 'networkidle2':\n                {\n                  concurrency = Math.min(2, concurrency);\n                  break;\n                }\n            }\n          }\n          if (concurrency === Infinity) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return this.page().waitForNetworkIdle$({\n            idleTime: 500,\n            timeout: options.timeout ?? this.timeoutSettings.timeout(),\n            concurrency\n          });\n        }, \"#waitForNetworkIdle$\")\n      }, _private_waitForNetworkIdle$_decorators, {\n        kind: \"method\",\n        name: \"#waitForNetworkIdle$\",\n        static: false,\n        private: true,\n        access: {\n          has: obj => #waitForNetworkIdle$ in obj,\n          get: obj => obj.#waitForNetworkIdle$\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setFiles_decorators, {\n        kind: \"method\",\n        name: \"setFiles\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setFiles\" in obj,\n          get: obj => obj.setFiles\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _locateNodes_decorators, {\n        kind: \"method\",\n        name: \"locateNodes\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"locateNodes\" in obj,\n          get: obj => obj.locateNodes\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static from(parent, browsingContext) {\n      const frame = new BidiFrame(parent, browsingContext);\n      frame.#initialize();\n      return frame;\n    }\n    #parent = __runInitializers(this, _instanceExtraInitializers);\n    browsingContext;\n    #frames = new WeakMap();\n    realms;\n    _id;\n    client;\n    accessibility;\n    constructor(parent, browsingContext) {\n      super();\n      this.#parent = parent;\n      this.browsingContext = browsingContext;\n      this._id = browsingContext.id;\n      this.client = new CDPSession_js_1.BidiCdpSession(this);\n      this.realms = {\n        default: Realm_js_1.BidiFrameRealm.from(this.browsingContext.defaultRealm, this),\n        internal: Realm_js_1.BidiFrameRealm.from(this.browsingContext.createWindowRealm(`__puppeteer_internal_${Math.ceil(Math.random() * 10000)}`), this)\n      };\n      this.accessibility = new Accessibility_js_1.Accessibility(this.realms.default);\n    }\n    #initialize() {\n      for (const browsingContext of this.browsingContext.children) {\n        this.#createFrameTarget(browsingContext);\n      }\n      this.browsingContext.on('browsingcontext', ({\n        browsingContext\n      }) => {\n        this.#createFrameTarget(browsingContext);\n      });\n      this.browsingContext.on('closed', () => {\n        for (const session of CDPSession_js_1.BidiCdpSession.sessions.values()) {\n          if (session.frame === this) {\n            session.onClose();\n          }\n        }\n        this.page().trustedEmitter.emit(\"framedetached\" /* PageEvent.FrameDetached */, this);\n      });\n      this.browsingContext.on('request', ({\n        request\n      }) => {\n        const httpRequest = HTTPRequest_js_1.BidiHTTPRequest.from(request, this);\n        request.once('success', () => {\n          this.page().trustedEmitter.emit(\"requestfinished\" /* PageEvent.RequestFinished */, httpRequest);\n        });\n        request.once('error', () => {\n          this.page().trustedEmitter.emit(\"requestfailed\" /* PageEvent.RequestFailed */, httpRequest);\n        });\n        void httpRequest.finalizeInterceptions();\n      });\n      this.browsingContext.on('navigation', ({\n        navigation\n      }) => {\n        navigation.once('fragment', () => {\n          this.page().trustedEmitter.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, this);\n        });\n      });\n      this.browsingContext.on('load', () => {\n        this.page().trustedEmitter.emit(\"load\" /* PageEvent.Load */, undefined);\n      });\n      this.browsingContext.on('DOMContentLoaded', () => {\n        this._hasStartedLoading = true;\n        this.page().trustedEmitter.emit(\"domcontentloaded\" /* PageEvent.DOMContentLoaded */, undefined);\n        this.page().trustedEmitter.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, this);\n      });\n      this.browsingContext.on('userprompt', ({\n        userPrompt\n      }) => {\n        this.page().trustedEmitter.emit(\"dialog\" /* PageEvent.Dialog */, Dialog_js_1.BidiDialog.from(userPrompt));\n      });\n      this.browsingContext.on('log', ({\n        entry\n      }) => {\n        if (this._id !== entry.source.context) {\n          return;\n        }\n        if (isConsoleLogEntry(entry)) {\n          const args = entry.args.map(arg => {\n            return this.mainRealm().createHandle(arg);\n          });\n          const text = args.reduce((value, arg) => {\n            const parsedValue = arg instanceof JSHandle_js_1.BidiJSHandle && arg.isPrimitiveValue ? Deserializer_js_1.BidiDeserializer.deserialize(arg.remoteValue()) : arg.toString();\n            return `${value} ${parsedValue}`;\n          }, '').slice(1);\n          this.page().trustedEmitter.emit(\"console\" /* PageEvent.Console */, new ConsoleMessage_js_1.ConsoleMessage(entry.method, text, args, getStackTraceLocations(entry.stackTrace)));\n        } else if (isJavaScriptLogEntry(entry)) {\n          const error = new Error(entry.text ?? '');\n          const messageHeight = error.message.split('\\n').length;\n          const messageLines = error.stack.split('\\n').splice(0, messageHeight);\n          const stackLines = [];\n          if (entry.stackTrace) {\n            for (const frame of entry.stackTrace.callFrames) {\n              // Note we need to add `1` because the values are 0-indexed.\n              stackLines.push(`    at ${frame.functionName || '<anonymous>'} (${frame.url}:${frame.lineNumber + 1}:${frame.columnNumber + 1})`);\n              if (stackLines.length >= Error.stackTraceLimit) {\n                break;\n              }\n            }\n          }\n          error.stack = [...messageLines, ...stackLines].join('\\n');\n          this.page().trustedEmitter.emit(\"pageerror\" /* PageEvent.PageError */, error);\n        } else {\n          (0, util_js_1.debugError)(`Unhandled LogEntry with type \"${entry.type}\", text \"${entry.text}\" and level \"${entry.level}\"`);\n        }\n      });\n      this.browsingContext.on('worker', ({\n        realm\n      }) => {\n        const worker = WebWorker_js_1.BidiWebWorker.from(this, realm);\n        realm.on('destroyed', () => {\n          this.page().trustedEmitter.emit(\"workerdestroyed\" /* PageEvent.WorkerDestroyed */, worker);\n        });\n        this.page().trustedEmitter.emit(\"workercreated\" /* PageEvent.WorkerCreated */, worker);\n      });\n    }\n    #createFrameTarget(browsingContext) {\n      const frame = BidiFrame.from(this, browsingContext);\n      this.#frames.set(browsingContext, frame);\n      this.page().trustedEmitter.emit(\"frameattached\" /* PageEvent.FrameAttached */, frame);\n      browsingContext.on('closed', () => {\n        this.#frames.delete(browsingContext);\n      });\n      return frame;\n    }\n    get timeoutSettings() {\n      return this.page()._timeoutSettings;\n    }\n    mainRealm() {\n      return this.realms.default;\n    }\n    isolatedRealm() {\n      return this.realms.internal;\n    }\n    realm(id) {\n      for (const realm of Object.values(this.realms)) {\n        if (realm.realm.id === id) {\n          return realm;\n        }\n      }\n      return;\n    }\n    page() {\n      let parent = this.#parent;\n      while (parent instanceof BidiFrame) {\n        parent = parent.#parent;\n      }\n      return parent;\n    }\n    url() {\n      return this.browsingContext.url;\n    }\n    parentFrame() {\n      if (this.#parent instanceof BidiFrame) {\n        return this.#parent;\n      }\n      return null;\n    }\n    childFrames() {\n      return [...this.browsingContext.children].map(child => {\n        return this.#frames.get(child);\n      });\n    }\n    #detached$() {\n      return (0, rxjs_js_1.defer)(() => {\n        if (this.detached) {\n          return (0, rxjs_js_1.of)(this);\n        }\n        return (0, util_js_1.fromEmitterEvent)(this.page().trustedEmitter, \"framedetached\" /* PageEvent.FrameDetached */).pipe((0, rxjs_js_1.filter)(detachedFrame => {\n          return detachedFrame === this;\n        }));\n      });\n    }\n    async goto(url, options = {}) {\n      const [response] = await Promise.all([this.waitForNavigation(options),\n      // Some implementations currently only report errors when the\n      // readiness=interactive.\n      //\n      // Related: https://bugzilla.mozilla.org/show_bug.cgi?id=1846601\n      this.browsingContext.navigate(url, \"interactive\" /* Bidi.BrowsingContext.ReadinessState.Interactive */).catch(error => {\n        if ((0, ErrorLike_js_1.isErrorLike)(error) && error.message.includes('net::ERR_HTTP_RESPONSE_CODE_FAILURE')) {\n          return;\n        }\n        throw error;\n      })]).catch((0, util_js_2.rewriteNavigationError)(url, options.timeout ?? this.timeoutSettings.navigationTimeout()));\n      return response;\n    }\n    async setContent(html, options = {}) {\n      await Promise.all([this.setFrameContent(html), (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.combineLatest)([this.#waitForLoad$(options), this.#waitForNetworkIdle$(options)]))]);\n    }\n    async waitForNavigation(options = {}) {\n      const {\n        timeout: ms = this.timeoutSettings.navigationTimeout(),\n        signal\n      } = options;\n      const frames = this.childFrames().map(frame => {\n        return frame.#detached$();\n      });\n      return await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.combineLatest)([(0, util_js_1.fromEmitterEvent)(this.browsingContext, 'navigation').pipe((0, rxjs_js_1.first)()).pipe((0, rxjs_js_1.switchMap)(({\n        navigation\n      }) => {\n        return this.#waitForLoad$(options).pipe((0, rxjs_js_1.delayWhen)(() => {\n          if (frames.length === 0) {\n            return (0, rxjs_js_1.of)(undefined);\n          }\n          return (0, rxjs_js_1.combineLatest)(frames);\n        }), (0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(navigation, 'fragment'), (0, util_js_1.fromEmitterEvent)(navigation, 'failed'), (0, util_js_1.fromEmitterEvent)(navigation, 'aborted').pipe((0, rxjs_js_1.map)(({\n          url\n        }) => {\n          throw new Error(`Navigation aborted: ${url}`);\n        }))), (0, rxjs_js_1.switchMap)(() => {\n          if (navigation.request) {\n            function requestFinished$(request) {\n              // Reduces flakiness if the response events arrive after\n              // the load event.\n              // Usually, the response or error is already there at this point.\n              if (request.response || request.error) {\n                return (0, rxjs_js_1.of)(navigation);\n              }\n              if (request.redirect) {\n                return requestFinished$(request.redirect);\n              }\n              return (0, util_js_1.fromEmitterEvent)(request, 'success').pipe((0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(request, 'error')), (0, rxjs_js_1.raceWith)((0, util_js_1.fromEmitterEvent)(request, 'redirect'))).pipe((0, rxjs_js_1.switchMap)(() => {\n                return requestFinished$(request);\n              }));\n            }\n            return requestFinished$(navigation.request);\n          }\n          return (0, rxjs_js_1.of)(navigation);\n        }));\n      })), this.#waitForNetworkIdle$(options)]).pipe((0, rxjs_js_1.map)(([navigation]) => {\n        const request = navigation.request;\n        if (!request) {\n          return null;\n        }\n        const lastRequest = request.lastRedirect ?? request;\n        const httpRequest = HTTPRequest_js_1.requests.get(lastRequest);\n        return httpRequest.response();\n      }), (0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms), (0, util_js_1.fromAbortSignal)(signal), this.#detached$().pipe((0, rxjs_js_1.map)(() => {\n        throw new Errors_js_1.TargetCloseError('Frame detached.');\n      })))));\n    }\n    waitForDevicePrompt() {\n      throw new Errors_js_1.UnsupportedOperation();\n    }\n    get detached() {\n      return this.browsingContext.closed;\n    }\n    #exposedFunctions = new Map();\n    async exposeFunction(name, apply) {\n      if (this.#exposedFunctions.has(name)) {\n        throw new Error(`Failed to add page binding with name ${name}: globalThis['${name}'] already exists!`);\n      }\n      const exposeable = await ExposedFunction_js_1.ExposeableFunction.from(this, name, apply);\n      this.#exposedFunctions.set(name, exposeable);\n    }\n    async removeExposedFunction(name) {\n      const exposedFunction = this.#exposedFunctions.get(name);\n      if (!exposedFunction) {\n        throw new Error(`Failed to remove page binding with name ${name}: window['${name}'] does not exists!`);\n      }\n      this.#exposedFunctions.delete(name);\n      await exposedFunction[Symbol.asyncDispose]();\n    }\n    async createCDPSession() {\n      if (!this.page().browser().cdpSupported) {\n        throw new Errors_js_1.UnsupportedOperation();\n      }\n      const cdpConnection = this.page().browser().cdpConnection;\n      return await cdpConnection._createSession({\n        targetId: this._id\n      });\n    }\n    get #waitForLoad$() {\n      return _private_waitForLoad$_descriptor.value;\n    }\n    get #waitForNetworkIdle$() {\n      return _private_waitForNetworkIdle$_descriptor.value;\n    }\n    async setFiles(element, files) {\n      await this.browsingContext.setFiles(\n      // SAFETY: ElementHandles are always remote references.\n      element.remoteValue(), files);\n    }\n    async locateNodes(element, locator) {\n      return await this.browsingContext.locateNodes(locator,\n      // SAFETY: ElementHandles are always remote references.\n      [element.remoteValue()]);\n    }\n  };\n})();\nexports.BidiFrame = BidiFrame;\nfunction isConsoleLogEntry(event) {\n  return event.type === 'console';\n}\nfunction isJavaScriptLogEntry(event) {\n  return event.type === 'javascript';\n}\nfunction getStackTraceLocations(stackTrace) {\n  const stackTraceLocations = [];\n  if (stackTrace) {\n    for (const callFrame of stackTrace.callFrames) {\n      stackTraceLocations.push({\n        url: callFrame.url,\n        lineNumber: callFrame.lineNumber,\n        columnNumber: callFrame.columnNumber\n      });\n    }\n  }\n  return stackTraceLocations;\n}","map":{"version":3,"names":["rxjs_js_1","require","Frame_js_1","Accessibility_js_1","ConsoleMessage_js_1","Errors_js_1","util_js_1","ErrorLike_js_1","CDPSession_js_1","Deserializer_js_1","Dialog_js_1","ExposedFunction_js_1","HTTPRequest_js_1","JSHandle_js_1","Realm_js_1","util_js_2","WebWorker_js_1","BidiFrame","Frame","_classSuper","throwIfDetached","__esDecorate","_goto_decorators","kind","name","static","private","access","has","obj","get","goto","metadata","_metadata","_instanceExtraInitializers","_setContent_decorators","setContent","_waitForNavigation_decorators","waitForNavigation","_private_waitForLoad$_descriptor","value","__setFunctionName","options","waitUntil","timeout","ms","timeoutSettings","navigationTimeout","Array","isArray","events","Set","lifecycleEvent","add","size","of","undefined","combineLatest","map","event","fromEmitterEvent","browsingContext","pipe","first","raceWith","detached$","Error","_private_waitForLoad$_decorators","waitForLoad$","_private_waitForNetworkIdle$_descriptor","concurrency","Infinity","Math","min","page","waitForNetworkIdle$","idleTime","_private_waitForNetworkIdle$_decorators","_setFiles_decorators","setFiles","_locateNodes_decorators","locateNodes","from","parent","frame","initialize","__runInitializers","frames","WeakMap","realms","_id","client","accessibility","constructor","id","BidiCdpSession","default","BidiFrameRealm","defaultRealm","internal","createWindowRealm","ceil","random","Accessibility","#initialize","children","createFrameTarget","on","session","sessions","values","onClose","trustedEmitter","emit","request","httpRequest","BidiHTTPRequest","once","finalizeInterceptions","navigation","_hasStartedLoading","userPrompt","BidiDialog","entry","source","context","isConsoleLogEntry","args","arg","mainRealm","createHandle","text","reduce","parsedValue","BidiJSHandle","isPrimitiveValue","BidiDeserializer","deserialize","remoteValue","toString","slice","ConsoleMessage","method","getStackTraceLocations","stackTrace","isJavaScriptLogEntry","error","messageHeight","message","split","length","messageLines","stack","splice","stackLines","callFrames","push","functionName","url","lineNumber","columnNumber","stackTraceLimit","join","debugError","type","level","realm","worker","BidiWebWorker","#createFrameTarget","set","delete","_timeoutSettings","isolatedRealm","Object","parentFrame","childFrames","child","#detached$","defer","detached","filter","detachedFrame","response","Promise","all","navigate","catch","isErrorLike","includes","rewriteNavigationError","html","setFrameContent","firstValueFrom","signal","switchMap","delayWhen","requestFinished$","redirect","lastRequest","lastRedirect","requests","fromAbortSignal","TargetCloseError","waitForDevicePrompt","UnsupportedOperation","closed","exposedFunctions","Map","exposeFunction","apply","exposeable","ExposeableFunction","removeExposedFunction","exposedFunction","Symbol","asyncDispose","createCDPSession","browser","cdpSupported","cdpConnection","_createSession","targetId","#waitForLoad$","#waitForNetworkIdle$","element","files","locator","exports","stackTraceLocations","callFrame"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/Frame.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {Observable} from '../../third_party/rxjs/rxjs.js';\nimport {\n  combineLatest,\n  defer,\n  delayWhen,\n  filter,\n  first,\n  firstValueFrom,\n  map,\n  of,\n  raceWith,\n  switchMap,\n} from '../../third_party/rxjs/rxjs.js';\nimport type {CDPSession} from '../api/CDPSession.js';\nimport {\n  Frame,\n  throwIfDetached,\n  type GoToOptions,\n  type WaitForOptions,\n} from '../api/Frame.js';\nimport {PageEvent} from '../api/Page.js';\nimport {Accessibility} from '../cdp/Accessibility.js';\nimport type {ConsoleMessageType} from '../common/ConsoleMessage.js';\nimport {\n  ConsoleMessage,\n  type ConsoleMessageLocation,\n} from '../common/ConsoleMessage.js';\nimport {TargetCloseError, UnsupportedOperation} from '../common/Errors.js';\nimport type {TimeoutSettings} from '../common/TimeoutSettings.js';\nimport type {Awaitable} from '../common/types.js';\nimport {\n  debugError,\n  fromAbortSignal,\n  fromEmitterEvent,\n  timeout,\n} from '../common/util.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {BidiCdpSession} from './CDPSession.js';\nimport type {BrowsingContext} from './core/BrowsingContext.js';\nimport type {Navigation} from './core/Navigation.js';\nimport type {Request} from './core/Request.js';\nimport {BidiDeserializer} from './Deserializer.js';\nimport {BidiDialog} from './Dialog.js';\nimport type {BidiElementHandle} from './ElementHandle.js';\nimport {ExposeableFunction} from './ExposedFunction.js';\nimport {BidiHTTPRequest, requests} from './HTTPRequest.js';\nimport type {BidiHTTPResponse} from './HTTPResponse.js';\nimport {BidiJSHandle} from './JSHandle.js';\nimport type {BidiPage} from './Page.js';\nimport type {BidiRealm} from './Realm.js';\nimport {BidiFrameRealm} from './Realm.js';\nimport {rewriteNavigationError} from './util.js';\nimport {BidiWebWorker} from './WebWorker.js';\n\nexport class BidiFrame extends Frame {\n  static from(\n    parent: BidiPage | BidiFrame,\n    browsingContext: BrowsingContext\n  ): BidiFrame {\n    const frame = new BidiFrame(parent, browsingContext);\n    frame.#initialize();\n    return frame;\n  }\n\n  readonly #parent: BidiPage | BidiFrame;\n  readonly browsingContext: BrowsingContext;\n  readonly #frames = new WeakMap<BrowsingContext, BidiFrame>();\n  readonly realms: {default: BidiFrameRealm; internal: BidiFrameRealm};\n\n  override readonly _id: string;\n  override readonly client: BidiCdpSession;\n  override readonly accessibility: Accessibility;\n\n  private constructor(\n    parent: BidiPage | BidiFrame,\n    browsingContext: BrowsingContext\n  ) {\n    super();\n    this.#parent = parent;\n    this.browsingContext = browsingContext;\n\n    this._id = browsingContext.id;\n    this.client = new BidiCdpSession(this);\n    this.realms = {\n      default: BidiFrameRealm.from(this.browsingContext.defaultRealm, this),\n      internal: BidiFrameRealm.from(\n        this.browsingContext.createWindowRealm(\n          `__puppeteer_internal_${Math.ceil(Math.random() * 10000)}`\n        ),\n        this\n      ),\n    };\n    this.accessibility = new Accessibility(this.realms.default);\n  }\n\n  #initialize(): void {\n    for (const browsingContext of this.browsingContext.children) {\n      this.#createFrameTarget(browsingContext);\n    }\n\n    this.browsingContext.on('browsingcontext', ({browsingContext}) => {\n      this.#createFrameTarget(browsingContext);\n    });\n    this.browsingContext.on('closed', () => {\n      for (const session of BidiCdpSession.sessions.values()) {\n        if (session.frame === this) {\n          session.onClose();\n        }\n      }\n      this.page().trustedEmitter.emit(PageEvent.FrameDetached, this);\n    });\n\n    this.browsingContext.on('request', ({request}) => {\n      const httpRequest = BidiHTTPRequest.from(request, this);\n      request.once('success', () => {\n        this.page().trustedEmitter.emit(PageEvent.RequestFinished, httpRequest);\n      });\n\n      request.once('error', () => {\n        this.page().trustedEmitter.emit(PageEvent.RequestFailed, httpRequest);\n      });\n      void httpRequest.finalizeInterceptions();\n    });\n\n    this.browsingContext.on('navigation', ({navigation}) => {\n      navigation.once('fragment', () => {\n        this.page().trustedEmitter.emit(PageEvent.FrameNavigated, this);\n      });\n    });\n    this.browsingContext.on('load', () => {\n      this.page().trustedEmitter.emit(PageEvent.Load, undefined);\n    });\n    this.browsingContext.on('DOMContentLoaded', () => {\n      this._hasStartedLoading = true;\n      this.page().trustedEmitter.emit(PageEvent.DOMContentLoaded, undefined);\n      this.page().trustedEmitter.emit(PageEvent.FrameNavigated, this);\n    });\n\n    this.browsingContext.on('userprompt', ({userPrompt}) => {\n      this.page().trustedEmitter.emit(\n        PageEvent.Dialog,\n        BidiDialog.from(userPrompt)\n      );\n    });\n\n    this.browsingContext.on('log', ({entry}) => {\n      if (this._id !== entry.source.context) {\n        return;\n      }\n      if (isConsoleLogEntry(entry)) {\n        const args = entry.args.map(arg => {\n          return this.mainRealm().createHandle(arg);\n        });\n\n        const text = args\n          .reduce((value, arg) => {\n            const parsedValue =\n              arg instanceof BidiJSHandle && arg.isPrimitiveValue\n                ? BidiDeserializer.deserialize(arg.remoteValue())\n                : arg.toString();\n            return `${value} ${parsedValue}`;\n          }, '')\n          .slice(1);\n\n        this.page().trustedEmitter.emit(\n          PageEvent.Console,\n          new ConsoleMessage(\n            entry.method as ConsoleMessageType,\n            text,\n            args,\n            getStackTraceLocations(entry.stackTrace)\n          )\n        );\n      } else if (isJavaScriptLogEntry(entry)) {\n        const error = new Error(entry.text ?? '');\n\n        const messageHeight = error.message.split('\\n').length;\n        const messageLines = error.stack!.split('\\n').splice(0, messageHeight);\n\n        const stackLines = [];\n        if (entry.stackTrace) {\n          for (const frame of entry.stackTrace.callFrames) {\n            // Note we need to add `1` because the values are 0-indexed.\n            stackLines.push(\n              `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n                frame.lineNumber + 1\n              }:${frame.columnNumber + 1})`\n            );\n            if (stackLines.length >= Error.stackTraceLimit) {\n              break;\n            }\n          }\n        }\n\n        error.stack = [...messageLines, ...stackLines].join('\\n');\n        this.page().trustedEmitter.emit(PageEvent.PageError, error);\n      } else {\n        debugError(\n          `Unhandled LogEntry with type \"${entry.type}\", text \"${entry.text}\" and level \"${entry.level}\"`\n        );\n      }\n    });\n\n    this.browsingContext.on('worker', ({realm}) => {\n      const worker = BidiWebWorker.from(this, realm);\n      realm.on('destroyed', () => {\n        this.page().trustedEmitter.emit(PageEvent.WorkerDestroyed, worker);\n      });\n      this.page().trustedEmitter.emit(PageEvent.WorkerCreated, worker);\n    });\n  }\n\n  #createFrameTarget(browsingContext: BrowsingContext) {\n    const frame = BidiFrame.from(this, browsingContext);\n    this.#frames.set(browsingContext, frame);\n    this.page().trustedEmitter.emit(PageEvent.FrameAttached, frame);\n\n    browsingContext.on('closed', () => {\n      this.#frames.delete(browsingContext);\n    });\n\n    return frame;\n  }\n\n  get timeoutSettings(): TimeoutSettings {\n    return this.page()._timeoutSettings;\n  }\n\n  override mainRealm(): BidiFrameRealm {\n    return this.realms.default;\n  }\n\n  override isolatedRealm(): BidiFrameRealm {\n    return this.realms.internal;\n  }\n\n  realm(id: string): BidiRealm | undefined {\n    for (const realm of Object.values(this.realms)) {\n      if (realm.realm.id === id) {\n        return realm;\n      }\n    }\n    return;\n  }\n\n  override page(): BidiPage {\n    let parent = this.#parent;\n    while (parent instanceof BidiFrame) {\n      parent = parent.#parent;\n    }\n    return parent;\n  }\n\n  override url(): string {\n    return this.browsingContext.url;\n  }\n\n  override parentFrame(): BidiFrame | null {\n    if (this.#parent instanceof BidiFrame) {\n      return this.#parent;\n    }\n    return null;\n  }\n\n  override childFrames(): BidiFrame[] {\n    return [...this.browsingContext.children].map(child => {\n      return this.#frames.get(child)!;\n    });\n  }\n\n  #detached$() {\n    return defer(() => {\n      if (this.detached) {\n        return of(this as Frame);\n      }\n      return fromEmitterEvent(\n        this.page().trustedEmitter,\n        PageEvent.FrameDetached\n      ).pipe(\n        filter(detachedFrame => {\n          return detachedFrame === this;\n        })\n      );\n    });\n  }\n\n  @throwIfDetached\n  override async goto(\n    url: string,\n    options: GoToOptions = {}\n  ): Promise<BidiHTTPResponse | null> {\n    const [response] = await Promise.all([\n      this.waitForNavigation(options),\n      // Some implementations currently only report errors when the\n      // readiness=interactive.\n      //\n      // Related: https://bugzilla.mozilla.org/show_bug.cgi?id=1846601\n      this.browsingContext\n        .navigate(url, Bidi.BrowsingContext.ReadinessState.Interactive)\n        .catch(error => {\n          if (\n            isErrorLike(error) &&\n            error.message.includes('net::ERR_HTTP_RESPONSE_CODE_FAILURE')\n          ) {\n            return;\n          }\n\n          throw error;\n        }),\n    ]).catch(\n      rewriteNavigationError(\n        url,\n        options.timeout ?? this.timeoutSettings.navigationTimeout()\n      )\n    );\n    return response;\n  }\n\n  @throwIfDetached\n  override async setContent(\n    html: string,\n    options: WaitForOptions = {}\n  ): Promise<void> {\n    await Promise.all([\n      this.setFrameContent(html),\n      firstValueFrom(\n        combineLatest([\n          this.#waitForLoad$(options),\n          this.#waitForNetworkIdle$(options),\n        ])\n      ),\n    ]);\n  }\n\n  @throwIfDetached\n  override async waitForNavigation(\n    options: WaitForOptions = {}\n  ): Promise<BidiHTTPResponse | null> {\n    const {timeout: ms = this.timeoutSettings.navigationTimeout(), signal} =\n      options;\n\n    const frames = this.childFrames().map(frame => {\n      return frame.#detached$();\n    });\n    return await firstValueFrom(\n      combineLatest([\n        fromEmitterEvent(this.browsingContext, 'navigation')\n          .pipe(first())\n          .pipe(\n            switchMap(({navigation}) => {\n              return this.#waitForLoad$(options).pipe(\n                delayWhen(() => {\n                  if (frames.length === 0) {\n                    return of(undefined);\n                  }\n                  return combineLatest(frames);\n                }),\n                raceWith(\n                  fromEmitterEvent(navigation, 'fragment'),\n                  fromEmitterEvent(navigation, 'failed'),\n                  fromEmitterEvent(navigation, 'aborted').pipe(\n                    map(({url}) => {\n                      throw new Error(`Navigation aborted: ${url}`);\n                    })\n                  )\n                ),\n                switchMap(() => {\n                  if (navigation.request) {\n                    function requestFinished$(\n                      request: Request\n                    ): Observable<Navigation> {\n                      // Reduces flakiness if the response events arrive after\n                      // the load event.\n                      // Usually, the response or error is already there at this point.\n                      if (request.response || request.error) {\n                        return of(navigation);\n                      }\n                      if (request.redirect) {\n                        return requestFinished$(request.redirect);\n                      }\n                      return fromEmitterEvent(request, 'success')\n                        .pipe(\n                          raceWith(fromEmitterEvent(request, 'error')),\n                          raceWith(fromEmitterEvent(request, 'redirect'))\n                        )\n                        .pipe(\n                          switchMap(() => {\n                            return requestFinished$(request);\n                          })\n                        );\n                    }\n                    return requestFinished$(navigation.request);\n                  }\n                  return of(navigation);\n                })\n              );\n            })\n          ),\n        this.#waitForNetworkIdle$(options),\n      ]).pipe(\n        map(([navigation]) => {\n          const request = navigation.request;\n          if (!request) {\n            return null;\n          }\n          const lastRequest = request.lastRedirect ?? request;\n          const httpRequest = requests.get(lastRequest)!;\n          return httpRequest.response();\n        }),\n        raceWith(\n          timeout(ms),\n          fromAbortSignal(signal),\n          this.#detached$().pipe(\n            map(() => {\n              throw new TargetCloseError('Frame detached.');\n            })\n          )\n        )\n      )\n    );\n  }\n\n  override waitForDevicePrompt(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override get detached(): boolean {\n    return this.browsingContext.closed;\n  }\n\n  #exposedFunctions = new Map<string, ExposeableFunction<never[], unknown>>();\n  async exposeFunction<Args extends unknown[], Ret>(\n    name: string,\n    apply: (...args: Args) => Awaitable<Ret>\n  ): Promise<void> {\n    if (this.#exposedFunctions.has(name)) {\n      throw new Error(\n        `Failed to add page binding with name ${name}: globalThis['${name}'] already exists!`\n      );\n    }\n    const exposeable = await ExposeableFunction.from(this, name, apply);\n    this.#exposedFunctions.set(name, exposeable);\n  }\n\n  async removeExposedFunction(name: string): Promise<void> {\n    const exposedFunction = this.#exposedFunctions.get(name);\n    if (!exposedFunction) {\n      throw new Error(\n        `Failed to remove page binding with name ${name}: window['${name}'] does not exists!`\n      );\n    }\n\n    this.#exposedFunctions.delete(name);\n    await exposedFunction[Symbol.asyncDispose]();\n  }\n\n  async createCDPSession(): Promise<CDPSession> {\n    if (!this.page().browser().cdpSupported) {\n      throw new UnsupportedOperation();\n    }\n\n    const cdpConnection = this.page().browser().cdpConnection!;\n    return await cdpConnection._createSession({targetId: this._id});\n  }\n\n  @throwIfDetached\n  #waitForLoad$(options: WaitForOptions = {}): Observable<void> {\n    let {waitUntil = 'load'} = options;\n    const {timeout: ms = this.timeoutSettings.navigationTimeout()} = options;\n\n    if (!Array.isArray(waitUntil)) {\n      waitUntil = [waitUntil];\n    }\n\n    const events = new Set<'load' | 'DOMContentLoaded'>();\n    for (const lifecycleEvent of waitUntil) {\n      switch (lifecycleEvent) {\n        case 'load': {\n          events.add('load');\n          break;\n        }\n        case 'domcontentloaded': {\n          events.add('DOMContentLoaded');\n          break;\n        }\n      }\n    }\n    if (events.size === 0) {\n      return of(undefined);\n    }\n\n    return combineLatest(\n      [...events].map(event => {\n        return fromEmitterEvent(this.browsingContext, event);\n      })\n    ).pipe(\n      map(() => {}),\n      first(),\n      raceWith(\n        timeout(ms),\n        this.#detached$().pipe(\n          map(() => {\n            throw new Error('Frame detached.');\n          })\n        )\n      )\n    );\n  }\n\n  @throwIfDetached\n  #waitForNetworkIdle$(options: WaitForOptions = {}): Observable<void> {\n    let {waitUntil = 'load'} = options;\n    if (!Array.isArray(waitUntil)) {\n      waitUntil = [waitUntil];\n    }\n\n    let concurrency = Infinity;\n    for (const event of waitUntil) {\n      switch (event) {\n        case 'networkidle0': {\n          concurrency = Math.min(0, concurrency);\n          break;\n        }\n        case 'networkidle2': {\n          concurrency = Math.min(2, concurrency);\n          break;\n        }\n      }\n    }\n    if (concurrency === Infinity) {\n      return of(undefined);\n    }\n\n    return this.page().waitForNetworkIdle$({\n      idleTime: 500,\n      timeout: options.timeout ?? this.timeoutSettings.timeout(),\n      concurrency,\n    });\n  }\n\n  @throwIfDetached\n  async setFiles(element: BidiElementHandle, files: string[]): Promise<void> {\n    await this.browsingContext.setFiles(\n      // SAFETY: ElementHandles are always remote references.\n      element.remoteValue() as Bidi.Script.SharedReference,\n      files\n    );\n  }\n\n  @throwIfDetached\n  async locateNodes(\n    element: BidiElementHandle,\n    locator: Bidi.BrowsingContext.Locator\n  ): Promise<Bidi.Script.NodeRemoteValue[]> {\n    return await this.browsingContext.locateNodes(\n      locator,\n      // SAFETY: ElementHandles are always remote references.\n      [element.remoteValue() as Bidi.Script.SharedReference]\n    );\n  }\n}\n\nfunction isConsoleLogEntry(\n  event: Bidi.Log.Entry\n): event is Bidi.Log.ConsoleLogEntry {\n  return event.type === 'console';\n}\n\nfunction isJavaScriptLogEntry(\n  event: Bidi.Log.Entry\n): event is Bidi.Log.JavascriptLogEntry {\n  return event.type === 'javascript';\n}\n\nfunction getStackTraceLocations(\n  stackTrace?: Bidi.Script.StackTrace\n): ConsoleMessageLocation[] {\n  const stackTraceLocations: ConsoleMessageLocation[] = [];\n  if (stackTrace) {\n    for (const callFrame of stackTrace.callFrames) {\n      stackTraceLocations.push({\n        url: callFrame.url,\n        lineNumber: callFrame.lineNumber,\n        columnNumber: callFrame.columnNumber,\n      });\n    }\n  }\n  return stackTraceLocations;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}