{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareVersions = exports.resolveBuildId = exports.relativeExecutablePath = exports.resolveDownloadPath = exports.resolveDownloadUrl = void 0;\nconst path_1 = __importDefault(require(\"path\"));\nconst httpUtil_js_1 = require(\"../httpUtil.js\");\nconst types_js_1 = require(\"./types.js\");\nfunction archive(platform, buildId) {\n  switch (platform) {\n    case types_js_1.BrowserPlatform.LINUX:\n      return 'chrome-linux';\n    case types_js_1.BrowserPlatform.MAC_ARM:\n    case types_js_1.BrowserPlatform.MAC:\n      return 'chrome-mac';\n    case types_js_1.BrowserPlatform.WIN32:\n    case types_js_1.BrowserPlatform.WIN64:\n      // Windows archive name changed at r591479.\n      return parseInt(buildId, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n  }\n}\nfunction folder(platform) {\n  switch (platform) {\n    case types_js_1.BrowserPlatform.LINUX:\n      return 'Linux_x64';\n    case types_js_1.BrowserPlatform.MAC_ARM:\n      return 'Mac_Arm';\n    case types_js_1.BrowserPlatform.MAC:\n      return 'Mac';\n    case types_js_1.BrowserPlatform.WIN32:\n      return 'Win';\n    case types_js_1.BrowserPlatform.WIN64:\n      return 'Win_x64';\n  }\n}\nfunction resolveDownloadUrl(platform, buildId, baseUrl = 'https://storage.googleapis.com/chromium-browser-snapshots') {\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexports.resolveDownloadUrl = resolveDownloadUrl;\nfunction resolveDownloadPath(platform, buildId) {\n  return [folder(platform), buildId, `${archive(platform, buildId)}.zip`];\n}\nexports.resolveDownloadPath = resolveDownloadPath;\nfunction relativeExecutablePath(platform, _buildId) {\n  switch (platform) {\n    case types_js_1.BrowserPlatform.MAC:\n    case types_js_1.BrowserPlatform.MAC_ARM:\n      return path_1.default.join('chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n    case types_js_1.BrowserPlatform.LINUX:\n      return path_1.default.join('chrome-linux', 'chrome');\n    case types_js_1.BrowserPlatform.WIN32:\n    case types_js_1.BrowserPlatform.WIN64:\n      return path_1.default.join('chrome-win', 'chrome.exe');\n  }\n}\nexports.relativeExecutablePath = relativeExecutablePath;\nasync function resolveBuildId(platform) {\n  return await (0, httpUtil_js_1.getText)(new URL(`https://storage.googleapis.com/chromium-browser-snapshots/${folder(platform)}/LAST_CHANGE`));\n}\nexports.resolveBuildId = resolveBuildId;\nfunction compareVersions(a, b) {\n  return Number(a) - Number(b);\n}\nexports.compareVersions = compareVersions;","map":{"version":3,"names":["path_1","__importDefault","require","httpUtil_js_1","types_js_1","archive","platform","buildId","BrowserPlatform","LINUX","MAC_ARM","MAC","WIN32","WIN64","parseInt","folder","resolveDownloadUrl","baseUrl","resolveDownloadPath","join","exports","relativeExecutablePath","_buildId","default","resolveBuildId","getText","URL","compareVersions","a","b","Number"],"sources":["/Users/lawj4/webDevelopment/node_modules/@puppeteer/browsers/src/browser-data/chromium.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport path from 'path';\n\nimport {getText} from '../httpUtil.js';\n\nimport {BrowserPlatform} from './types.js';\n\nfunction archive(platform: BrowserPlatform, buildId: string): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'chrome-linux';\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return 'chrome-mac';\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      // Windows archive name changed at r591479.\n      return parseInt(buildId, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n  }\n}\n\nfunction folder(platform: BrowserPlatform): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'Linux_x64';\n    case BrowserPlatform.MAC_ARM:\n      return 'Mac_Arm';\n    case BrowserPlatform.MAC:\n      return 'Mac';\n    case BrowserPlatform.WIN32:\n      return 'Win';\n    case BrowserPlatform.WIN64:\n      return 'Win_x64';\n  }\n}\n\nexport function resolveDownloadUrl(\n  platform: BrowserPlatform,\n  buildId: string,\n  baseUrl = 'https://storage.googleapis.com/chromium-browser-snapshots'\n): string {\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\n\nexport function resolveDownloadPath(\n  platform: BrowserPlatform,\n  buildId: string\n): string[] {\n  return [folder(platform), buildId, `${archive(platform, buildId)}.zip`];\n}\n\nexport function relativeExecutablePath(\n  platform: BrowserPlatform,\n  _buildId: string\n): string {\n  switch (platform) {\n    case BrowserPlatform.MAC:\n    case BrowserPlatform.MAC_ARM:\n      return path.join(\n        'chrome-mac',\n        'Chromium.app',\n        'Contents',\n        'MacOS',\n        'Chromium'\n      );\n    case BrowserPlatform.LINUX:\n      return path.join('chrome-linux', 'chrome');\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return path.join('chrome-win', 'chrome.exe');\n  }\n}\nexport async function resolveBuildId(\n  platform: BrowserPlatform\n): Promise<string> {\n  return await getText(\n    new URL(\n      `https://storage.googleapis.com/chromium-browser-snapshots/${folder(\n        platform\n      )}/LAST_CHANGE`\n    )\n  );\n}\n\nexport function compareVersions(a: string, b: string): number {\n  return Number(a) - Number(b);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}