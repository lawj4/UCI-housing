{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowsingContextImpl = void 0;\nexports.serializeOrigin = serializeOrigin;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst unitConversions_js_1 = require(\"../../../utils/unitConversions.js\");\nconst uuid_1 = require(\"../../../utils/uuid\");\nconst WindowRealm_js_1 = require(\"../script/WindowRealm.js\");\nclass BrowsingContextImpl {\n  static LOGGER_PREFIX = `${log_js_1.LogType.debug}:browsingContext`;\n  /** The ID of this browsing context. */\n  #id;\n  userContext;\n  /**\n   * The ID of the parent browsing context.\n   * If null, this is a top-level context.\n   */\n  #parentId = null;\n  /** Direct children browsing contexts. */\n  #children = new Set();\n  #browsingContextStorage;\n  #lifecycle = {\n    DOMContentLoaded: new Deferred_js_1.Deferred(),\n    load: new Deferred_js_1.Deferred()\n  };\n  #navigation = {\n    withinDocument: new Deferred_js_1.Deferred()\n  };\n  #url;\n  #eventManager;\n  #realmStorage;\n  #loaderId;\n  #cdpTarget;\n  // The deferred will be resolved when the default realm is created.\n  #defaultRealmDeferred = new Deferred_js_1.Deferred();\n  #logger;\n  // Keeps track of the previously set viewport.\n  #previousViewport = {\n    width: 0,\n    height: 0\n  };\n  // The URL of the navigation that is currently in progress. A workaround of the CDP\n  // lacking URL for the pending navigation events, e.g. `Page.frameStartedLoading`.\n  // Set on `Page.navigate`, `Page.reload` commands and on deprecated CDP event\n  // `Page.frameScheduledNavigation`.\n  #pendingNavigationUrl;\n  #virtualNavigationId = (0, uuid_1.uuidv4)();\n  #originalOpener;\n  // Set when the user prompt is opened. Required to provide the type in closing event.\n  #lastUserPromptType;\n  #unhandledPromptBehavior;\n  constructor(id, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, url, originalOpener, unhandledPromptBehavior, logger) {\n    this.#cdpTarget = cdpTarget;\n    this.#id = id;\n    this.#parentId = parentId;\n    this.userContext = userContext;\n    this.#eventManager = eventManager;\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#realmStorage = realmStorage;\n    this.#unhandledPromptBehavior = unhandledPromptBehavior;\n    this.#logger = logger;\n    this.#url = url;\n    this.#originalOpener = originalOpener;\n  }\n  static create(id, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, url, originalOpener, unhandledPromptBehavior, logger) {\n    const context = new BrowsingContextImpl(id, parentId, userContext, cdpTarget, eventManager, browsingContextStorage, realmStorage, url, originalOpener, unhandledPromptBehavior, logger);\n    context.#initListeners();\n    browsingContextStorage.addContext(context);\n    if (!context.isTopLevelContext()) {\n      context.parent.addChild(context.id);\n    }\n    // Hold on the `contextCreated` event until the target is unblocked. This is required,\n    // as the parent of the context can be set later in case of reconnecting to an\n    // existing browser instance + OOPiF.\n    eventManager.registerPromiseEvent(context.targetUnblockedOrThrow().then(() => {\n      return {\n        kind: 'success',\n        value: {\n          type: 'event',\n          method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextCreated,\n          params: context.serializeToBidiValue()\n        }\n      };\n    }, error => {\n      return {\n        kind: 'error',\n        error\n      };\n    }), context.id, protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextCreated);\n    return context;\n  }\n  static getTimestamp() {\n    // `timestamp` from the event is MonotonicTime, not real time, so\n    // the best Mapper can do is to set the timestamp to the epoch time\n    // of the event arrived.\n    // https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-MonotonicTime\n    return new Date().getTime();\n  }\n  /**\n   * @see https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n   */\n  get navigableId() {\n    return this.#loaderId;\n  }\n  /**\n   * Virtual navigation ID. Required, as CDP `loaderId` cannot be mapped 1:1 to all the\n   * navigations (e.g. same document navigations). Updated after each navigation,\n   * including same-document ones.\n   */\n  get virtualNavigationId() {\n    return this.#virtualNavigationId;\n  }\n  dispose() {\n    this.#deleteAllChildren();\n    this.#realmStorage.deleteRealms({\n      browsingContextId: this.id\n    });\n    // Remove context from the parent.\n    if (!this.isTopLevelContext()) {\n      this.parent.#children.delete(this.id);\n    }\n    // Fail all ongoing navigations.\n    this.#failLifecycleIfNotFinished();\n    this.#eventManager.registerEvent({\n      type: 'event',\n      method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.ContextDestroyed,\n      params: this.serializeToBidiValue()\n    }, this.id);\n    this.#browsingContextStorage.deleteContextById(this.id);\n  }\n  /** Returns the ID of this context. */\n  get id() {\n    return this.#id;\n  }\n  /** Returns the parent context ID. */\n  get parentId() {\n    return this.#parentId;\n  }\n  /** Sets the parent context ID and updates parent's children. */\n  set parentId(parentId) {\n    if (this.#parentId !== null) {\n      this.#logger?.(log_js_1.LogType.debugError, 'Parent context already set');\n      // Cannot do anything except logging, as throwing will stop event processing. So\n      // just return,\n      return;\n    }\n    this.#parentId = parentId;\n    if (!this.isTopLevelContext()) {\n      this.parent.addChild(this.id);\n    }\n  }\n  /** Returns the parent context. */\n  get parent() {\n    if (this.parentId === null) {\n      return null;\n    }\n    return this.#browsingContextStorage.getContext(this.parentId);\n  }\n  /** Returns all direct children contexts. */\n  get directChildren() {\n    return [...this.#children].map(id => this.#browsingContextStorage.getContext(id));\n  }\n  /** Returns all children contexts, flattened. */\n  get allChildren() {\n    const children = this.directChildren;\n    return children.concat(...children.map(child => child.allChildren));\n  }\n  /**\n   * Returns true if this is a top-level context.\n   * This is the case whenever the parent context ID is null.\n   */\n  isTopLevelContext() {\n    return this.#parentId === null;\n  }\n  get top() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let topContext = this;\n    let parent = topContext.parent;\n    while (parent) {\n      topContext = parent;\n      parent = topContext.parent;\n    }\n    return topContext;\n  }\n  addChild(childId) {\n    this.#children.add(childId);\n  }\n  #deleteAllChildren() {\n    this.directChildren.map(child => child.dispose());\n  }\n  get cdpTarget() {\n    return this.#cdpTarget;\n  }\n  updateCdpTarget(cdpTarget) {\n    this.#cdpTarget = cdpTarget;\n    this.#initListeners();\n  }\n  get url() {\n    return this.#url;\n  }\n  async lifecycleLoaded() {\n    await this.#lifecycle.load;\n  }\n  async targetUnblockedOrThrow() {\n    const result = await this.#cdpTarget.unblocked;\n    if (result.kind === 'error') {\n      throw result.error;\n    }\n  }\n  async getOrCreateSandbox(sandbox) {\n    if (sandbox === undefined || sandbox === '') {\n      // Default realm is not guaranteed to be created at this point, so return a deferred.\n      return await this.#defaultRealmDeferred;\n    }\n    let maybeSandboxes = this.#realmStorage.findRealms({\n      browsingContextId: this.id,\n      sandbox\n    });\n    if (maybeSandboxes.length === 0) {\n      await this.#cdpTarget.cdpClient.sendCommand('Page.createIsolatedWorld', {\n        frameId: this.id,\n        worldName: sandbox\n      });\n      // `Runtime.executionContextCreated` should be emitted by the time the\n      // previous command is done.\n      maybeSandboxes = this.#realmStorage.findRealms({\n        browsingContextId: this.id,\n        sandbox\n      });\n      (0, assert_js_1.assert)(maybeSandboxes.length !== 0);\n    }\n    // It's possible for more than one sandbox to be created due to provisional\n    // frames. In this case, it's always the first one (i.e. the oldest one)\n    // that is more relevant since the user may have set that one up already\n    // through evaluation.\n    return maybeSandboxes[0];\n  }\n  serializeToBidiValue(maxDepth = 0, addParentField = true) {\n    return {\n      context: this.#id,\n      url: this.url,\n      userContext: this.userContext,\n      originalOpener: this.#originalOpener ?? null,\n      children: maxDepth > 0 ? this.directChildren.map(c => c.serializeToBidiValue(maxDepth - 1, false)) : null,\n      ...(addParentField ? {\n        parent: this.#parentId\n      } : {})\n    };\n  }\n  onTargetInfoChanged(params) {\n    this.#url = params.targetInfo.url;\n  }\n  #initListeners() {\n    this.#cdpTarget.cdpClient.on('Page.frameNavigated', params => {\n      if (this.id !== params.frame.id) {\n        return;\n      }\n      this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n      this.#pendingNavigationUrl = undefined;\n      // At the point the page is initialized, all the nested iframes from the\n      // previous page are detached and realms are destroyed.\n      // Remove children from context.\n      this.#deleteAllChildren();\n    });\n    this.#cdpTarget.cdpClient.on('Page.navigatedWithinDocument', params => {\n      if (this.id !== params.frameId) {\n        return;\n      }\n      this.#pendingNavigationUrl = undefined;\n      const timestamp = BrowsingContextImpl.getTimestamp();\n      this.#url = params.url;\n      this.#navigation.withinDocument.resolve();\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.FragmentNavigated,\n        params: {\n          context: this.id,\n          navigation: this.#virtualNavigationId,\n          timestamp,\n          url: this.#url\n        }\n      }, this.id);\n    });\n    this.#cdpTarget.cdpClient.on('Page.frameStartedLoading', params => {\n      if (this.id !== params.frameId) {\n        return;\n      }\n      // Generate a new virtual navigation id.\n      this.#virtualNavigationId = (0, uuid_1.uuidv4)();\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.NavigationStarted,\n        params: {\n          context: this.id,\n          navigation: this.#virtualNavigationId,\n          timestamp: BrowsingContextImpl.getTimestamp(),\n          // The URL of the navigation that is currently in progress. Although the URL\n          // is not yet known in case of user-initiated navigations, it is possible to\n          // provide the URL in case of BiDi-initiated navigations.\n          // TODO: provide proper URL in case of user-initiated navigations.\n          url: this.#pendingNavigationUrl ?? 'UNKNOWN'\n        }\n      }, this.id);\n    });\n    // TODO: don't use deprecated `Page.frameScheduledNavigation` event.\n    this.#cdpTarget.cdpClient.on('Page.frameScheduledNavigation', params => {\n      if (this.id !== params.frameId) {\n        return;\n      }\n      this.#pendingNavigationUrl = params.url;\n    });\n    this.#cdpTarget.cdpClient.on('Page.lifecycleEvent', params => {\n      if (this.id !== params.frameId) {\n        return;\n      }\n      if (params.name === 'init') {\n        this.#documentChanged(params.loaderId);\n        return;\n      }\n      if (params.name === 'commit') {\n        this.#loaderId = params.loaderId;\n        return;\n      }\n      // If mapper attached to the page late, it might miss init and\n      // commit events. In that case, save the first loaderId for this\n      // frameId.\n      if (!this.#loaderId) {\n        this.#loaderId = params.loaderId;\n      }\n      // Ignore event from not current navigation.\n      if (params.loaderId !== this.#loaderId) {\n        return;\n      }\n      const timestamp = BrowsingContextImpl.getTimestamp();\n      switch (params.name) {\n        case 'DOMContentLoaded':\n          this.#eventManager.registerEvent({\n            type: 'event',\n            method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.DomContentLoaded,\n            params: {\n              context: this.id,\n              navigation: this.#virtualNavigationId,\n              timestamp,\n              url: this.#url\n            }\n          }, this.id);\n          this.#lifecycle.DOMContentLoaded.resolve();\n          break;\n        case 'load':\n          this.#eventManager.registerEvent({\n            type: 'event',\n            method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.Load,\n            params: {\n              context: this.id,\n              navigation: this.#virtualNavigationId,\n              timestamp,\n              url: this.#url\n            }\n          }, this.id);\n          this.#lifecycle.load.resolve();\n          break;\n      }\n    });\n    this.#cdpTarget.cdpClient.on('Runtime.executionContextCreated', params => {\n      const {\n        auxData,\n        name,\n        uniqueId,\n        id\n      } = params.context;\n      if (!auxData || auxData.frameId !== this.id) {\n        return;\n      }\n      let origin;\n      let sandbox;\n      // Only these execution contexts are supported for now.\n      switch (auxData.type) {\n        case 'isolated':\n          sandbox = name;\n          // Sandbox should have the same origin as the context itself, but in CDP\n          // it has an empty one.\n          if (!this.#defaultRealmDeferred.isFinished) {\n            this.#logger?.(log_js_1.LogType.debugError, 'Unexpectedly, isolated realm created before the default one');\n          }\n          origin = this.#defaultRealmDeferred.isFinished ? this.#defaultRealmDeferred.result.origin :\n          // This fallback is not expected to be ever reached.\n          '';\n          break;\n        case 'default':\n          origin = serializeOrigin(params.context.origin);\n          break;\n        default:\n          return;\n      }\n      const realm = new WindowRealm_js_1.WindowRealm(this.id, this.#browsingContextStorage, this.#cdpTarget.cdpClient, this.#eventManager, id, this.#logger, origin, uniqueId, this.#realmStorage, sandbox);\n      if (auxData.isDefault) {\n        this.#defaultRealmDeferred.resolve(realm);\n        // Initialize ChannelProxy listeners for all the channels of all the\n        // preload scripts related to this BrowsingContext.\n        // TODO: extend for not default realms by the sandbox name.\n        void Promise.all(this.#cdpTarget.getChannels().map(channel => channel.startListenerFromWindow(realm, this.#eventManager)));\n      }\n    });\n    this.#cdpTarget.cdpClient.on('Runtime.executionContextDestroyed', params => {\n      if (this.#defaultRealmDeferred.isFinished && this.#defaultRealmDeferred.result.executionContextId === params.executionContextId) {\n        this.#defaultRealmDeferred = new Deferred_js_1.Deferred();\n      }\n      this.#realmStorage.deleteRealms({\n        cdpSessionId: this.#cdpTarget.cdpSessionId,\n        executionContextId: params.executionContextId\n      });\n    });\n    this.#cdpTarget.cdpClient.on('Runtime.executionContextsCleared', () => {\n      if (!this.#defaultRealmDeferred.isFinished) {\n        this.#defaultRealmDeferred.reject(new protocol_js_1.UnknownErrorException('execution contexts cleared'));\n      }\n      this.#defaultRealmDeferred = new Deferred_js_1.Deferred();\n      this.#realmStorage.deleteRealms({\n        cdpSessionId: this.#cdpTarget.cdpSessionId\n      });\n    });\n    this.#cdpTarget.cdpClient.on('Page.javascriptDialogClosed', params => {\n      const accepted = params.result;\n      if (this.#lastUserPromptType === undefined) {\n        this.#logger?.(log_js_1.LogType.debugError, 'Unexpectedly no opening prompt event before closing one');\n      }\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.UserPromptClosed,\n        params: {\n          context: this.id,\n          accepted,\n          // `lastUserPromptType` should never be undefined here, so fallback to\n          // `UNKNOWN`. The fallback is required to prevent tests from hanging while\n          // waiting for the closing event. The cast is required, as the `UNKNOWN` value\n          // is not standard.\n          type: this.#lastUserPromptType ?? 'UNKNOWN',\n          userText: accepted && params.userInput ? params.userInput : undefined\n        }\n      }, this.id);\n      this.#lastUserPromptType = undefined;\n    });\n    this.#cdpTarget.cdpClient.on('Page.javascriptDialogOpening', params => {\n      const promptType = BrowsingContextImpl.#getPromptType(params.type);\n      // Set the last prompt type to provide it in closing event.\n      this.#lastUserPromptType = promptType;\n      const promptHandler = this.#getPromptHandler(promptType);\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.UserPromptOpened,\n        params: {\n          context: this.id,\n          handler: promptHandler,\n          type: promptType,\n          message: params.message,\n          ...(params.type === 'prompt' ? {\n            defaultValue: params.defaultPrompt\n          } : {})\n        }\n      }, this.id);\n      switch (promptHandler) {\n        // Based on `unhandledPromptBehavior`, check if the prompt should be handled\n        // automatically (`accept`, `dismiss`) or wait for the user to do it.\n        case \"accept\" /* Session.UserPromptHandlerType.Accept */:\n          void this.handleUserPrompt(true);\n          break;\n        case \"dismiss\" /* Session.UserPromptHandlerType.Dismiss */:\n          void this.handleUserPrompt(false);\n          break;\n        case \"ignore\" /* Session.UserPromptHandlerType.Ignore */:\n          break;\n      }\n    });\n  }\n  static #getPromptType(cdpType) {\n    switch (cdpType) {\n      case 'alert':\n        return \"alert\" /* BrowsingContext.UserPromptType.Alert */;\n      case 'beforeunload':\n        return \"beforeunload\" /* BrowsingContext.UserPromptType.Beforeunload */;\n      case 'confirm':\n        return \"confirm\" /* BrowsingContext.UserPromptType.Confirm */;\n      case 'prompt':\n        return \"prompt\" /* BrowsingContext.UserPromptType.Prompt */;\n    }\n  }\n  #getPromptHandler(promptType) {\n    const defaultPromptHandler = \"dismiss\" /* Session.UserPromptHandlerType.Dismiss */;\n    switch (promptType) {\n      case \"alert\" /* BrowsingContext.UserPromptType.Alert */:\n        return this.#unhandledPromptBehavior?.alert ?? this.#unhandledPromptBehavior?.default ?? defaultPromptHandler;\n      case \"beforeunload\" /* BrowsingContext.UserPromptType.Beforeunload */:\n        return this.#unhandledPromptBehavior?.beforeUnload ?? this.#unhandledPromptBehavior?.default ?? \"accept\" /* Session.UserPromptHandlerType.Accept */;\n      case \"confirm\" /* BrowsingContext.UserPromptType.Confirm */:\n        return this.#unhandledPromptBehavior?.confirm ?? this.#unhandledPromptBehavior?.default ?? defaultPromptHandler;\n      case \"prompt\" /* BrowsingContext.UserPromptType.Prompt */:\n        return this.#unhandledPromptBehavior?.prompt ?? this.#unhandledPromptBehavior?.default ?? defaultPromptHandler;\n    }\n  }\n  #documentChanged(loaderId) {\n    // Same document navigation.\n    if (loaderId === undefined || this.#loaderId === loaderId) {\n      if (this.#navigation.withinDocument.isFinished) {\n        this.#navigation.withinDocument = new Deferred_js_1.Deferred();\n      } else {\n        this.#logger?.(BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (navigatedWithinDocument)');\n      }\n      return;\n    }\n    this.#resetLifecycleIfFinished();\n    this.#loaderId = loaderId;\n  }\n  #resetLifecycleIfFinished() {\n    if (this.#lifecycle.DOMContentLoaded.isFinished) {\n      this.#lifecycle.DOMContentLoaded = new Deferred_js_1.Deferred();\n    } else {\n      this.#logger?.(BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (DOMContentLoaded)');\n    }\n    if (this.#lifecycle.load.isFinished) {\n      this.#lifecycle.load = new Deferred_js_1.Deferred();\n    } else {\n      this.#logger?.(BrowsingContextImpl.LOGGER_PREFIX, 'Document changed (load)');\n    }\n  }\n  #failLifecycleIfNotFinished() {\n    if (!this.#lifecycle.DOMContentLoaded.isFinished) {\n      this.#lifecycle.DOMContentLoaded.reject(new protocol_js_1.UnknownErrorException('navigation canceled'));\n    }\n    if (!this.#lifecycle.load.isFinished) {\n      this.#lifecycle.load.reject(new protocol_js_1.UnknownErrorException('navigation canceled'));\n    }\n  }\n  async navigate(url, wait) {\n    try {\n      new URL(url);\n    } catch {\n      throw new protocol_js_1.InvalidArgumentException(`Invalid URL: ${url}`);\n    }\n    await this.targetUnblockedOrThrow();\n    // Set the pending navigation URL to provide it in `browsingContext.navigationStarted`\n    // event.\n    // TODO: detect navigation start not from CDP. Check if\n    //  `Page.frameRequestedNavigation` can be used for this purpose.\n    this.#pendingNavigationUrl = url;\n    // TODO: handle loading errors.\n    const cdpNavigateResult = await this.#cdpTarget.cdpClient.sendCommand('Page.navigate', {\n      url,\n      frameId: this.id\n    });\n    if (cdpNavigateResult.errorText) {\n      // If navigation failed, no pending navigation is left.\n      this.#pendingNavigationUrl = undefined;\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: protocol_js_1.ChromiumBidi.BrowsingContext.EventNames.NavigationFailed,\n        params: {\n          context: this.id,\n          navigation: this.#virtualNavigationId,\n          timestamp: BrowsingContextImpl.getTimestamp(),\n          url\n        }\n      }, this.id);\n      throw new protocol_js_1.UnknownErrorException(cdpNavigateResult.errorText);\n    }\n    this.#documentChanged(cdpNavigateResult.loaderId);\n    switch (wait) {\n      case \"none\" /* BrowsingContext.ReadinessState.None */:\n        break;\n      case \"interactive\" /* BrowsingContext.ReadinessState.Interactive */:\n        // No `loaderId` means same-document navigation.\n        if (cdpNavigateResult.loaderId === undefined) {\n          await this.#navigation.withinDocument;\n        } else {\n          await this.#lifecycle.DOMContentLoaded;\n        }\n        break;\n      case \"complete\" /* BrowsingContext.ReadinessState.Complete */:\n        // No `loaderId` means same-document navigation.\n        if (cdpNavigateResult.loaderId === undefined) {\n          await this.#navigation.withinDocument;\n        } else {\n          await this.#lifecycle.load;\n        }\n        break;\n    }\n    return {\n      navigation: this.#virtualNavigationId,\n      // Url can change due to redirect get the latest one.\n      url: wait === \"none\" /* BrowsingContext.ReadinessState.None */ ? url : this.#url\n    };\n  }\n  async reload(ignoreCache, wait) {\n    await this.targetUnblockedOrThrow();\n    this.#resetLifecycleIfFinished();\n    await this.#cdpTarget.cdpClient.sendCommand('Page.reload', {\n      ignoreCache\n    });\n    switch (wait) {\n      case \"none\" /* BrowsingContext.ReadinessState.None */:\n        break;\n      case \"interactive\" /* BrowsingContext.ReadinessState.Interactive */:\n        await this.#lifecycle.DOMContentLoaded;\n        break;\n      case \"complete\" /* BrowsingContext.ReadinessState.Complete */:\n        await this.#lifecycle.load;\n        break;\n    }\n    return {\n      navigation: this.#virtualNavigationId,\n      url: this.url\n    };\n  }\n  async setViewport(viewport, devicePixelRatio) {\n    if (viewport === null && devicePixelRatio === null) {\n      await this.#cdpTarget.cdpClient.sendCommand('Emulation.clearDeviceMetricsOverride');\n    } else {\n      try {\n        let appliedViewport;\n        if (viewport === undefined) {\n          appliedViewport = this.#previousViewport;\n        } else if (viewport === null) {\n          appliedViewport = {\n            width: 0,\n            height: 0\n          };\n        } else {\n          appliedViewport = viewport;\n        }\n        this.#previousViewport = appliedViewport;\n        await this.#cdpTarget.cdpClient.sendCommand('Emulation.setDeviceMetricsOverride', {\n          width: this.#previousViewport.width,\n          height: this.#previousViewport.height,\n          deviceScaleFactor: devicePixelRatio ? devicePixelRatio : 0,\n          mobile: false,\n          dontSetVisibleSize: true\n        });\n      } catch (err) {\n        if (err.message.startsWith(\n        // https://crsrc.org/c/content/browser/devtools/protocol/emulation_handler.cc;l=257;drc=2f6eee84cf98d4227e7c41718dd71b82f26d90ff\n        'Width and height values must be positive')) {\n          throw new protocol_js_1.UnsupportedOperationException('Provided viewport dimensions are not supported');\n        }\n        throw err;\n      }\n    }\n  }\n  async handleUserPrompt(accept, userText) {\n    await this.#cdpTarget.cdpClient.sendCommand('Page.handleJavaScriptDialog', {\n      accept: accept ?? true,\n      promptText: userText\n    });\n  }\n  async activate() {\n    await this.#cdpTarget.cdpClient.sendCommand('Page.bringToFront');\n  }\n  async captureScreenshot(params) {\n    if (!this.isTopLevelContext()) {\n      throw new protocol_js_1.UnsupportedOperationException(`Non-top-level 'context' (${params.context}) is currently not supported`);\n    }\n    const formatParameters = getImageFormatParameters(params);\n    // XXX: Focus the original tab after the screenshot is taken.\n    // This is needed because the screenshot gets blocked until the active tab gets focus.\n    await this.#cdpTarget.cdpClient.sendCommand('Page.bringToFront');\n    let captureBeyondViewport = false;\n    let script;\n    params.origin ??= 'viewport';\n    switch (params.origin) {\n      case 'document':\n        {\n          script = String(() => {\n            const element = document.documentElement;\n            return {\n              x: 0,\n              y: 0,\n              width: element.scrollWidth,\n              height: element.scrollHeight\n            };\n          });\n          captureBeyondViewport = true;\n          break;\n        }\n      case 'viewport':\n        {\n          script = String(() => {\n            const viewport = window.visualViewport;\n            return {\n              x: viewport.pageLeft,\n              y: viewport.pageTop,\n              width: viewport.width,\n              height: viewport.height\n            };\n          });\n          break;\n        }\n    }\n    const realm = await this.getOrCreateSandbox(undefined);\n    const originResult = await realm.callFunction(script, false);\n    (0, assert_js_1.assert)(originResult.type === 'success');\n    const origin = deserializeDOMRect(originResult.result);\n    (0, assert_js_1.assert)(origin);\n    let rect = origin;\n    if (params.clip) {\n      const clip = params.clip;\n      if (params.origin === 'viewport' && clip.type === 'box') {\n        // For viewport origin, the clip is relative to the viewport, while the CDP\n        // screenshot is relative to the document. So correction for the viewport position\n        // is required.\n        clip.x += origin.x;\n        clip.y += origin.y;\n      }\n      rect = getIntersectionRect(await this.#parseRect(clip), origin);\n    }\n    if (rect.width === 0 || rect.height === 0) {\n      throw new protocol_js_1.UnableToCaptureScreenException(`Unable to capture screenshot with zero dimensions: width=${rect.width}, height=${rect.height}`);\n    }\n    return await this.#cdpTarget.cdpClient.sendCommand('Page.captureScreenshot', {\n      clip: {\n        ...rect,\n        scale: 1.0\n      },\n      ...formatParameters,\n      captureBeyondViewport\n    });\n  }\n  async print(params) {\n    const cdpParams = {};\n    if (params.background !== undefined) {\n      cdpParams.printBackground = params.background;\n    }\n    if (params.margin?.bottom !== undefined) {\n      cdpParams.marginBottom = (0, unitConversions_js_1.inchesFromCm)(params.margin.bottom);\n    }\n    if (params.margin?.left !== undefined) {\n      cdpParams.marginLeft = (0, unitConversions_js_1.inchesFromCm)(params.margin.left);\n    }\n    if (params.margin?.right !== undefined) {\n      cdpParams.marginRight = (0, unitConversions_js_1.inchesFromCm)(params.margin.right);\n    }\n    if (params.margin?.top !== undefined) {\n      cdpParams.marginTop = (0, unitConversions_js_1.inchesFromCm)(params.margin.top);\n    }\n    if (params.orientation !== undefined) {\n      cdpParams.landscape = params.orientation === 'landscape';\n    }\n    if (params.page?.height !== undefined) {\n      cdpParams.paperHeight = (0, unitConversions_js_1.inchesFromCm)(params.page.height);\n    }\n    if (params.page?.width !== undefined) {\n      cdpParams.paperWidth = (0, unitConversions_js_1.inchesFromCm)(params.page.width);\n    }\n    if (params.pageRanges !== undefined) {\n      for (const range of params.pageRanges) {\n        if (typeof range === 'number') {\n          continue;\n        }\n        const rangeParts = range.split('-');\n        if (rangeParts.length < 1 || rangeParts.length > 2) {\n          throw new protocol_js_1.InvalidArgumentException(`Invalid page range: ${range} is not a valid integer range.`);\n        }\n        if (rangeParts.length === 1) {\n          void parseInteger(rangeParts[0] ?? '');\n          continue;\n        }\n        let lowerBound;\n        let upperBound;\n        const [rangeLowerPart = '', rangeUpperPart = ''] = rangeParts;\n        if (rangeLowerPart === '') {\n          lowerBound = 1;\n        } else {\n          lowerBound = parseInteger(rangeLowerPart);\n        }\n        if (rangeUpperPart === '') {\n          upperBound = Number.MAX_SAFE_INTEGER;\n        } else {\n          upperBound = parseInteger(rangeUpperPart);\n        }\n        if (lowerBound > upperBound) {\n          throw new protocol_js_1.InvalidArgumentException(`Invalid page range: ${rangeLowerPart} > ${rangeUpperPart}`);\n        }\n      }\n      cdpParams.pageRanges = params.pageRanges.join(',');\n    }\n    if (params.scale !== undefined) {\n      cdpParams.scale = params.scale;\n    }\n    if (params.shrinkToFit !== undefined) {\n      cdpParams.preferCSSPageSize = !params.shrinkToFit;\n    }\n    try {\n      const result = await this.#cdpTarget.cdpClient.sendCommand('Page.printToPDF', cdpParams);\n      return {\n        data: result.data\n      };\n    } catch (error) {\n      // Effectively zero dimensions.\n      if (error.message === 'invalid print parameters: content area is empty') {\n        throw new protocol_js_1.UnsupportedOperationException(error.message);\n      }\n      throw error;\n    }\n  }\n  /**\n   * See\n   * https://w3c.github.io/webdriver-bidi/#:~:text=If%20command%20parameters%20contains%20%22clip%22%3A\n   */\n  async #parseRect(clip) {\n    switch (clip.type) {\n      case 'box':\n        return {\n          x: clip.x,\n          y: clip.y,\n          width: clip.width,\n          height: clip.height\n        };\n      case 'element':\n        {\n          // TODO: #1213: Use custom sandbox specifically for Chromium BiDi\n          const sandbox = await this.getOrCreateSandbox(undefined);\n          const result = await sandbox.callFunction(String(element => {\n            return element instanceof Element;\n          }), false, {\n            type: 'undefined'\n          }, [clip.element]);\n          if (result.type === 'exception') {\n            throw new protocol_js_1.NoSuchElementException(`Element '${clip.element.sharedId}' was not found`);\n          }\n          (0, assert_js_1.assert)(result.result.type === 'boolean');\n          if (!result.result.value) {\n            throw new protocol_js_1.NoSuchElementException(`Node '${clip.element.sharedId}' is not an Element`);\n          }\n          {\n            const result = await sandbox.callFunction(String(element => {\n              const rect = element.getBoundingClientRect();\n              return {\n                x: rect.x,\n                y: rect.y,\n                height: rect.height,\n                width: rect.width\n              };\n            }), false, {\n              type: 'undefined'\n            }, [clip.element]);\n            (0, assert_js_1.assert)(result.type === 'success');\n            const rect = deserializeDOMRect(result.result);\n            if (!rect) {\n              throw new protocol_js_1.UnableToCaptureScreenException(`Could not get bounding box for Element '${clip.element.sharedId}'`);\n            }\n            return rect;\n          }\n        }\n    }\n  }\n  async close() {\n    await this.#cdpTarget.cdpClient.sendCommand('Page.close');\n  }\n  async traverseHistory(delta) {\n    if (delta === 0) {\n      return;\n    }\n    const history = await this.#cdpTarget.cdpClient.sendCommand('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      throw new protocol_js_1.NoSuchHistoryEntryException(`No history entry at delta ${delta}`);\n    }\n    await this.#cdpTarget.cdpClient.sendCommand('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    });\n  }\n  async toggleModulesIfNeeded() {\n    await this.#cdpTarget.toggleNetworkIfNeeded();\n  }\n  async locateNodes(params) {\n    // TODO: create a dedicated sandbox instead of `#defaultRealm`.\n    return await this.#locateNodesByLocator(await this.#defaultRealmDeferred, params.locator, params.startNodes ?? [], params.maxNodeCount, params.serializationOptions);\n  }\n  async #getLocatorDelegate(realm, locator, maxNodeCount, startNodes) {\n    switch (locator.type) {\n      case 'css':\n        return {\n          functionDeclaration: String((cssSelector, maxNodeCount, ...startNodes) => {\n            const locateNodesUsingCss = element => {\n              if (!(element instanceof HTMLElement || element instanceof Document || element instanceof DocumentFragment)) {\n                throw new Error('startNodes in css selector should be HTMLElement, Document or DocumentFragment');\n              }\n              return [...element.querySelectorAll(cssSelector)];\n            };\n            startNodes = startNodes.length > 0 ? startNodes : [document.body];\n            const returnedNodes = startNodes.map(startNode =>\n            // TODO: stop search early if `maxNodeCount` is reached.\n            locateNodesUsingCss(startNode)).flat(1);\n            return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n          }),\n          argumentsLocalValues: [\n          // `cssSelector`\n          {\n            type: 'string',\n            value: locator.value\n          },\n          // `maxNodeCount` with `0` means no limit.\n          {\n            type: 'number',\n            value: maxNodeCount ?? 0\n          },\n          // `startNodes`\n          ...startNodes]\n        };\n      case 'xpath':\n        return {\n          functionDeclaration: String((xPathSelector, maxNodeCount, ...startNodes) => {\n            // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-xpath\n            const evaluator = new XPathEvaluator();\n            const expression = evaluator.createExpression(xPathSelector);\n            const locateNodesUsingXpath = element => {\n              const xPathResult = expression.evaluate(element, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n              const returnedNodes = [];\n              for (let i = 0; i < xPathResult.snapshotLength; i++) {\n                returnedNodes.push(xPathResult.snapshotItem(i));\n              }\n              return returnedNodes;\n            };\n            startNodes = startNodes.length > 0 ? startNodes : [document.body];\n            const returnedNodes = startNodes.map(startNode =>\n            // TODO: stop search early if `maxNodeCount` is reached.\n            locateNodesUsingXpath(startNode)).flat(1);\n            return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n          }),\n          argumentsLocalValues: [\n          // `xPathSelector`\n          {\n            type: 'string',\n            value: locator.value\n          },\n          // `maxNodeCount` with `0` means no limit.\n          {\n            type: 'number',\n            value: maxNodeCount ?? 0\n          },\n          // `startNodes`\n          ...startNodes]\n        };\n      case 'innerText':\n        // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-inner-text\n        if (locator.value === '') {\n          throw new protocol_js_1.InvalidSelectorException('innerText locator cannot be empty');\n        }\n        return {\n          functionDeclaration: String((innerTextSelector, fullMatch, ignoreCase, maxNodeCount, maxDepth, ...startNodes) => {\n            const searchText = ignoreCase ? innerTextSelector.toUpperCase() : innerTextSelector;\n            const locateNodesUsingInnerText = (node, currentMaxDepth) => {\n              const returnedNodes = [];\n              if (node instanceof DocumentFragment || node instanceof Document) {\n                const children = [...node.children];\n                children.forEach(child =>\n                // `currentMaxDepth` is not decremented intentionally according to\n                // https://github.com/w3c/webdriver-bidi/pull/713.\n                returnedNodes.push(...locateNodesUsingInnerText(child, currentMaxDepth)));\n                return returnedNodes;\n              }\n              if (!(node instanceof HTMLElement)) {\n                return [];\n              }\n              const element = node;\n              const nodeInnerText = ignoreCase ? element.innerText?.toUpperCase() : element.innerText;\n              if (!nodeInnerText.includes(searchText)) {\n                return [];\n              }\n              const childNodes = [];\n              for (const child of element.children) {\n                if (child instanceof HTMLElement) {\n                  childNodes.push(child);\n                }\n              }\n              if (childNodes.length === 0) {\n                if (fullMatch && nodeInnerText === searchText) {\n                  returnedNodes.push(element);\n                } else {\n                  if (!fullMatch) {\n                    // Note: `nodeInnerText.includes(searchText)` is already checked\n                    returnedNodes.push(element);\n                  }\n                }\n              } else {\n                const childNodeMatches =\n                // Don't search deeper if `maxDepth` is reached.\n                currentMaxDepth <= 0 ? [] : childNodes.map(child => locateNodesUsingInnerText(child, currentMaxDepth - 1)).flat(1);\n                if (childNodeMatches.length === 0) {\n                  // Note: `nodeInnerText.includes(searchText)` is already checked\n                  if (!fullMatch || nodeInnerText === searchText) {\n                    returnedNodes.push(element);\n                  }\n                } else {\n                  returnedNodes.push(...childNodeMatches);\n                }\n              }\n              // TODO: stop search early if `maxNodeCount` is reached.\n              return returnedNodes;\n            };\n            // TODO: stop search early if `maxNodeCount` is reached.\n            startNodes = startNodes.length > 0 ? startNodes : [document];\n            const returnedNodes = startNodes.map(startNode =>\n            // TODO: stop search early if `maxNodeCount` is reached.\n            locateNodesUsingInnerText(startNode, maxDepth)).flat(1);\n            return maxNodeCount === 0 ? returnedNodes : returnedNodes.slice(0, maxNodeCount);\n          }),\n          argumentsLocalValues: [\n          // `innerTextSelector`\n          {\n            type: 'string',\n            value: locator.value\n          },\n          // `fullMatch` with default `true`.\n          {\n            type: 'boolean',\n            value: locator.matchType !== 'partial'\n          },\n          // `ignoreCase` with default `false`.\n          {\n            type: 'boolean',\n            value: locator.ignoreCase === true\n          },\n          // `maxNodeCount` with `0` means no limit.\n          {\n            type: 'number',\n            value: maxNodeCount ?? 0\n          },\n          // `maxDepth` with default `1000` (same as default full serialization depth).\n          {\n            type: 'number',\n            value: locator.maxDepth ?? 1000\n          },\n          // `startNodes`\n          ...startNodes]\n        };\n      case 'accessibility':\n        {\n          // https://w3c.github.io/webdriver-bidi/#locate-nodes-using-accessibility-attributes\n          if (!locator.value.name && !locator.value.role) {\n            throw new protocol_js_1.InvalidSelectorException('Either name or role has to be specified');\n          }\n          // The next two commands cause a11y caches for the target to be\n          // preserved. We probably do not need to disable them if the\n          // client is using a11y features, but we could by calling\n          // Accessibility.disable.\n          await Promise.all([this.#cdpTarget.cdpClient.sendCommand('Accessibility.enable'), this.#cdpTarget.cdpClient.sendCommand('Accessibility.getRootAXNode')]);\n          const bindings = await realm.evaluate( /* expression=*/'({getAccessibleName, getAccessibleRole})', /* awaitPromise=*/false, \"root\" /* Script.ResultOwnership.Root */, /* serializationOptions= */undefined, /* userActivation=*/false, /* includeCommandLineApi=*/true);\n          if (bindings.type !== 'success') {\n            throw new Error('Could not get bindings');\n          }\n          if (bindings.result.type !== 'object') {\n            throw new Error('Could not get bindings');\n          }\n          return {\n            functionDeclaration: String((name, role, bindings, maxNodeCount, ...startNodes) => {\n              const returnedNodes = [];\n              let aborted = false;\n              function collect(contextNodes, selector) {\n                if (aborted) {\n                  return;\n                }\n                for (const contextNode of contextNodes) {\n                  let match = true;\n                  if (selector.role) {\n                    const role = bindings.getAccessibleRole(contextNode);\n                    if (selector.role !== role) {\n                      match = false;\n                    }\n                  }\n                  if (selector.name) {\n                    const name = bindings.getAccessibleName(contextNode);\n                    if (selector.name !== name) {\n                      match = false;\n                    }\n                  }\n                  if (match) {\n                    if (maxNodeCount !== 0 && returnedNodes.length === maxNodeCount) {\n                      aborted = true;\n                      break;\n                    }\n                    returnedNodes.push(contextNode);\n                  }\n                  const childNodes = [];\n                  for (const child of contextNode.children) {\n                    if (child instanceof HTMLElement) {\n                      childNodes.push(child);\n                    }\n                  }\n                  collect(childNodes, selector);\n                }\n              }\n              startNodes = startNodes.length > 0 ? startNodes : [document.body];\n              collect(startNodes, {\n                role,\n                name\n              });\n              return returnedNodes;\n            }),\n            argumentsLocalValues: [\n            // `name`\n            {\n              type: 'string',\n              value: locator.value.name || ''\n            },\n            // `role`\n            {\n              type: 'string',\n              value: locator.value.role || ''\n            },\n            // `bindings`.\n            {\n              handle: bindings.result.handle\n            },\n            // `maxNodeCount` with `0` means no limit.\n            {\n              type: 'number',\n              value: maxNodeCount ?? 0\n            },\n            // `startNodes`\n            ...startNodes]\n          };\n        }\n    }\n  }\n  async #locateNodesByLocator(realm, locator, startNodes, maxNodeCount, serializationOptions) {\n    const locatorDelegate = await this.#getLocatorDelegate(realm, locator, maxNodeCount, startNodes);\n    serializationOptions = {\n      ...serializationOptions,\n      // The returned object is an array of nodes, so no need in deeper JS serialization.\n      maxObjectDepth: 1\n    };\n    const locatorResult = await realm.callFunction(locatorDelegate.functionDeclaration, false, {\n      type: 'undefined'\n    }, locatorDelegate.argumentsLocalValues, \"none\" /* Script.ResultOwnership.None */, serializationOptions);\n    if (locatorResult.type !== 'success') {\n      this.#logger?.(BrowsingContextImpl.LOGGER_PREFIX, 'Failed locateNodesByLocator', locatorResult);\n      // Heuristic to detect invalid selector for different types of selectors.\n      if (\n      // CSS selector.\n      locatorResult.exceptionDetails.text?.endsWith('is not a valid selector.') ||\n      // XPath selector.\n      locatorResult.exceptionDetails.text?.endsWith('is not a valid XPath expression.')) {\n        throw new protocol_js_1.InvalidSelectorException(`Not valid selector ${typeof locator.value === 'string' ? locator.value : JSON.stringify(locator.value)}`);\n      }\n      // Heuristic to detect if the `startNode` is not an `HTMLElement` in css selector.\n      if (locatorResult.exceptionDetails.text === 'Error: startNodes in css selector should be HTMLElement, Document or DocumentFragment') {\n        throw new protocol_js_1.InvalidArgumentException('startNodes in css selector should be HTMLElement, Document or DocumentFragment');\n      }\n      throw new protocol_js_1.UnknownErrorException(`Unexpected error in selector script: ${locatorResult.exceptionDetails.text}`);\n    }\n    if (locatorResult.result.type !== 'array') {\n      throw new protocol_js_1.UnknownErrorException(`Unexpected selector script result type: ${locatorResult.result.type}`);\n    }\n    // Check there are no non-node elements in the result.\n    const nodes = locatorResult.result.value.map(value => {\n      if (value.type !== 'node') {\n        throw new protocol_js_1.UnknownErrorException(`Unexpected selector script result element: ${value.type}`);\n      }\n      return value;\n    });\n    return {\n      nodes\n    };\n  }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\nfunction serializeOrigin(origin) {\n  // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n  if (['://', ''].includes(origin)) {\n    origin = 'null';\n  }\n  return origin;\n}\nfunction getImageFormatParameters(params) {\n  const {\n    quality,\n    type\n  } = params.format ?? {\n    type: 'image/png'\n  };\n  switch (type) {\n    case 'image/png':\n      {\n        return {\n          format: 'png'\n        };\n      }\n    case 'image/jpeg':\n      {\n        return {\n          format: 'jpeg',\n          ...(quality === undefined ? {} : {\n            quality: Math.round(quality * 100)\n          })\n        };\n      }\n    case 'image/webp':\n      {\n        return {\n          format: 'webp',\n          ...(quality === undefined ? {} : {\n            quality: Math.round(quality * 100)\n          })\n        };\n      }\n  }\n  throw new protocol_js_1.InvalidArgumentException(`Image format '${type}' is not a supported format`);\n}\nfunction deserializeDOMRect(result) {\n  if (result.type !== 'object' || result.value === undefined) {\n    return;\n  }\n  const x = result.value.find(([key]) => {\n    return key === 'x';\n  })?.[1];\n  const y = result.value.find(([key]) => {\n    return key === 'y';\n  })?.[1];\n  const height = result.value.find(([key]) => {\n    return key === 'height';\n  })?.[1];\n  const width = result.value.find(([key]) => {\n    return key === 'width';\n  })?.[1];\n  if (x?.type !== 'number' || y?.type !== 'number' || height?.type !== 'number' || width?.type !== 'number') {\n    return;\n  }\n  return {\n    x: x.value,\n    y: y.value,\n    width: width.value,\n    height: height.value\n  };\n}\n/** @see https://w3c.github.io/webdriver-bidi/#normalize-rect */\nfunction normalizeRect(box) {\n  return {\n    ...(box.width < 0 ? {\n      x: box.x + box.width,\n      width: -box.width\n    } : {\n      x: box.x,\n      width: box.width\n    }),\n    ...(box.height < 0 ? {\n      y: box.y + box.height,\n      height: -box.height\n    } : {\n      y: box.y,\n      height: box.height\n    })\n  };\n}\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(first, second) {\n  first = normalizeRect(first);\n  second = normalizeRect(second);\n  const x = Math.max(first.x, second.x);\n  const y = Math.max(first.y, second.y);\n  return {\n    x,\n    y,\n    width: Math.max(Math.min(first.x + first.width, second.x + second.width) - x, 0),\n    height: Math.max(Math.min(first.y + first.height, second.y + second.height) - y, 0)\n  };\n}\nfunction parseInteger(value) {\n  value = value.trim();\n  if (!/^[0-9]+$/.test(value)) {\n    throw new protocol_js_1.InvalidArgumentException(`Invalid integer: ${value}`);\n  }\n  return parseInt(value);\n}","map":{"version":3,"names":["exports","serializeOrigin","protocol_js_1","require","assert_js_1","Deferred_js_1","log_js_1","unitConversions_js_1","uuid_1","WindowRealm_js_1","BrowsingContextImpl","LOGGER_PREFIX","LogType","debug","id","userContext","parentId","children","Set","browsingContextStorage","lifecycle","DOMContentLoaded","Deferred","load","navigation","withinDocument","url","eventManager","realmStorage","loaderId","cdpTarget","defaultRealmDeferred","logger","previousViewport","width","height","pendingNavigationUrl","virtualNavigationId","uuidv4","originalOpener","lastUserPromptType","unhandledPromptBehavior","constructor","create","context","initListeners","addContext","isTopLevelContext","parent","addChild","registerPromiseEvent","targetUnblockedOrThrow","then","kind","value","type","method","ChromiumBidi","BrowsingContext","EventNames","ContextCreated","params","serializeToBidiValue","error","getTimestamp","Date","getTime","navigableId","dispose","deleteAllChildren","deleteRealms","browsingContextId","delete","failLifecycleIfNotFinished","registerEvent","ContextDestroyed","deleteContextById","debugError","getContext","directChildren","map","allChildren","concat","child","top","topContext","childId","add","#deleteAllChildren","updateCdpTarget","lifecycleLoaded","result","unblocked","getOrCreateSandbox","sandbox","undefined","maybeSandboxes","findRealms","length","cdpClient","sendCommand","frameId","worldName","assert","maxDepth","addParentField","c","onTargetInfoChanged","targetInfo","#initListeners","on","frame","urlFragment","timestamp","resolve","FragmentNavigated","NavigationStarted","name","documentChanged","DomContentLoaded","Load","auxData","uniqueId","origin","isFinished","realm","WindowRealm","isDefault","Promise","all","getChannels","channel","startListenerFromWindow","executionContextId","cdpSessionId","reject","UnknownErrorException","accepted","UserPromptClosed","userText","userInput","promptType","getPromptType","promptHandler","getPromptHandler","UserPromptOpened","handler","message","defaultValue","defaultPrompt","handleUserPrompt","#getPromptType","cdpType","#getPromptHandler","defaultPromptHandler","alert","default","beforeUnload","confirm","prompt","#documentChanged","resetLifecycleIfFinished","#resetLifecycleIfFinished","#failLifecycleIfNotFinished","navigate","wait","URL","InvalidArgumentException","cdpNavigateResult","errorText","NavigationFailed","reload","ignoreCache","setViewport","viewport","devicePixelRatio","appliedViewport","deviceScaleFactor","mobile","dontSetVisibleSize","err","startsWith","UnsupportedOperationException","accept","promptText","activate","captureScreenshot","formatParameters","getImageFormatParameters","captureBeyondViewport","script","String","element","document","documentElement","x","y","scrollWidth","scrollHeight","window","visualViewport","pageLeft","pageTop","originResult","callFunction","deserializeDOMRect","rect","clip","getIntersectionRect","parseRect","UnableToCaptureScreenException","scale","print","cdpParams","background","printBackground","margin","bottom","marginBottom","inchesFromCm","left","marginLeft","right","marginRight","marginTop","orientation","landscape","page","paperHeight","paperWidth","pageRanges","range","rangeParts","split","parseInteger","lowerBound","upperBound","rangeLowerPart","rangeUpperPart","Number","MAX_SAFE_INTEGER","join","shrinkToFit","preferCSSPageSize","data","#parseRect","Element","NoSuchElementException","sharedId","getBoundingClientRect","close","traverseHistory","delta","history","entry","entries","currentIndex","NoSuchHistoryEntryException","entryId","toggleModulesIfNeeded","toggleNetworkIfNeeded","locateNodes","locateNodesByLocator","locator","startNodes","maxNodeCount","serializationOptions","getLocatorDelegate","#getLocatorDelegate","functionDeclaration","cssSelector","locateNodesUsingCss","HTMLElement","Document","DocumentFragment","Error","querySelectorAll","body","returnedNodes","startNode","flat","slice","argumentsLocalValues","xPathSelector","evaluator","XPathEvaluator","expression","createExpression","locateNodesUsingXpath","xPathResult","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","i","snapshotLength","push","snapshotItem","InvalidSelectorException","innerTextSelector","fullMatch","ignoreCase","searchText","toUpperCase","locateNodesUsingInnerText","node","currentMaxDepth","forEach","nodeInnerText","innerText","includes","childNodes","childNodeMatches","matchType","role","bindings","aborted","collect","contextNodes","selector","contextNode","match","getAccessibleRole","getAccessibleName","handle","#locateNodesByLocator","locatorDelegate","maxObjectDepth","locatorResult","exceptionDetails","text","endsWith","JSON","stringify","nodes","quality","format","Math","round","find","key","normalizeRect","box","first","second","max","min","trim","test","parseInt"],"sources":["../../../../../src/bidiMapper/modules/context/BrowsingContextImpl.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}