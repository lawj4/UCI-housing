{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserContext = void 0;\nconst EventEmitter_js_1 = require(\"../../common/EventEmitter.js\");\nconst assert_js_1 = require(\"../../util/assert.js\");\nconst decorators_js_1 = require(\"../../util/decorators.js\");\nconst disposable_js_1 = require(\"../../util/disposable.js\");\nconst BrowsingContext_js_1 = require(\"./BrowsingContext.js\");\n/**\n * @internal\n */\nlet UserContext = (() => {\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _dispose_decorators;\n  let _createBrowsingContext_decorators;\n  let _remove_decorators;\n  let _getCookies_decorators;\n  let _setCookie_decorators;\n  let _setPermissions_decorators;\n  return class UserContext extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      __esDecorate(this, null, _dispose_decorators, {\n        kind: \"method\",\n        name: \"dispose\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"dispose\" in obj,\n          get: obj => obj.dispose\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _createBrowsingContext_decorators, {\n        kind: \"method\",\n        name: \"createBrowsingContext\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"createBrowsingContext\" in obj,\n          get: obj => obj.createBrowsingContext\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _remove_decorators, {\n        kind: \"method\",\n        name: \"remove\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"remove\" in obj,\n          get: obj => obj.remove\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _getCookies_decorators, {\n        kind: \"method\",\n        name: \"getCookies\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"getCookies\" in obj,\n          get: obj => obj.getCookies\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setCookie_decorators, {\n        kind: \"method\",\n        name: \"setCookie\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setCookie\" in obj,\n          get: obj => obj.setCookie\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setPermissions_decorators, {\n        kind: \"method\",\n        name: \"setPermissions\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setPermissions\" in obj,\n          get: obj => obj.setPermissions\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static DEFAULT = 'default';\n    static create(browser, id) {\n      const context = new UserContext(browser, id);\n      context.#initialize();\n      return context;\n    }\n    #reason = __runInitializers(this, _instanceExtraInitializers);\n    // Note these are only top-level contexts.\n    #browsingContexts = new Map();\n    #disposables = new disposable_js_1.DisposableStack();\n    #id;\n    browser;\n    constructor(browser, id) {\n      super();\n      this.#id = id;\n      this.browser = browser;\n    }\n    #initialize() {\n      const browserEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.browser));\n      browserEmitter.once('closed', ({\n        reason\n      }) => {\n        this.dispose(`User context was closed: ${reason}`);\n      });\n      browserEmitter.once('disconnected', ({\n        reason\n      }) => {\n        this.dispose(`User context was closed: ${reason}`);\n      });\n      const sessionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#session));\n      sessionEmitter.on('browsingContext.contextCreated', info => {\n        if (info.parent) {\n          return;\n        }\n        if (info.userContext !== this.#id) {\n          return;\n        }\n        const browsingContext = BrowsingContext_js_1.BrowsingContext.from(this, undefined, info.context, info.url, info.originalOpener);\n        this.#browsingContexts.set(browsingContext.id, browsingContext);\n        const browsingContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(browsingContext));\n        browsingContextEmitter.on('closed', () => {\n          browsingContextEmitter.removeAllListeners();\n          this.#browsingContexts.delete(browsingContext.id);\n        });\n        this.emit('browsingcontext', {\n          browsingContext\n        });\n      });\n    }\n    get #session() {\n      return this.browser.session;\n    }\n    get browsingContexts() {\n      return this.#browsingContexts.values();\n    }\n    get closed() {\n      return this.#reason !== undefined;\n    }\n    get disposed() {\n      return this.closed;\n    }\n    get id() {\n      return this.#id;\n    }\n    dispose(reason) {\n      this.#reason = reason;\n      this[disposable_js_1.disposeSymbol]();\n    }\n    async createBrowsingContext(type, options = {}) {\n      const {\n        result: {\n          context: contextId\n        }\n      } = await this.#session.send('browsingContext.create', {\n        type,\n        ...options,\n        referenceContext: options.referenceContext?.id,\n        userContext: this.#id\n      });\n      const browsingContext = this.#browsingContexts.get(contextId);\n      (0, assert_js_1.assert)(browsingContext, 'The WebDriver BiDi implementation is failing to create a browsing context correctly.');\n      // We use an array to avoid the promise from being awaited.\n      return browsingContext;\n    }\n    async remove() {\n      try {\n        await this.#session.send('browser.removeUserContext', {\n          userContext: this.#id\n        });\n      } finally {\n        this.dispose('User context already closed.');\n      }\n    }\n    async getCookies(options = {}, sourceOrigin = undefined) {\n      const {\n        result: {\n          cookies\n        }\n      } = await this.#session.send('storage.getCookies', {\n        ...options,\n        partition: {\n          type: 'storageKey',\n          userContext: this.#id,\n          sourceOrigin\n        }\n      });\n      return cookies;\n    }\n    async setCookie(cookie, sourceOrigin) {\n      await this.#session.send('storage.setCookie', {\n        cookie,\n        partition: {\n          type: 'storageKey',\n          sourceOrigin,\n          userContext: this.id\n        }\n      });\n    }\n    async setPermissions(origin, descriptor, state) {\n      await this.#session.send('permissions.setPermission', {\n        origin,\n        descriptor,\n        state,\n        userContext: this.#id\n      });\n    }\n    [(_dispose_decorators = [decorators_js_1.inertIfDisposed], _createBrowsingContext_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _remove_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _getCookies_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setCookie_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], _setPermissions_decorators = [(0, decorators_js_1.throwIfDisposed)(context => {\n      // SAFETY: Disposal implies this exists.\n      return context.#reason;\n    })], disposable_js_1.disposeSymbol)]() {\n      this.#reason ??= 'User context already closed, probably because the browser disconnected/closed.';\n      this.emit('closed', {\n        reason: this.#reason\n      });\n      this.#disposables.dispose();\n      super[disposable_js_1.disposeSymbol]();\n    }\n  };\n})();\nexports.UserContext = UserContext;","map":{"version":3,"names":["EventEmitter_js_1","require","assert_js_1","decorators_js_1","disposable_js_1","BrowsingContext_js_1","UserContext","EventEmitter","_classSuper","__esDecorate","_dispose_decorators","kind","name","static","private","access","has","obj","get","dispose","metadata","_metadata","_instanceExtraInitializers","_createBrowsingContext_decorators","createBrowsingContext","_remove_decorators","remove","_getCookies_decorators","getCookies","_setCookie_decorators","setCookie","_setPermissions_decorators","setPermissions","DEFAULT","create","browser","id","context","initialize","reason","__runInitializers","browsingContexts","Map","disposables","DisposableStack","constructor","#initialize","browserEmitter","use","once","sessionEmitter","session","on","info","parent","userContext","browsingContext","BrowsingContext","from","undefined","url","originalOpener","set","browsingContextEmitter","removeAllListeners","delete","emit","#session","values","closed","disposed","disposeSymbol","type","options","result","contextId","send","referenceContext","assert","sourceOrigin","cookies","partition","cookie","origin","descriptor","state","inertIfDisposed","throwIfDisposed","exports"],"sources":["/Users/lawj4/webDevelopment/Todo-List/frontend/node_modules/puppeteer-core/src/bidi/core/UserContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport {assert} from '../../util/assert.js';\nimport {inertIfDisposed, throwIfDisposed} from '../../util/decorators.js';\nimport {DisposableStack, disposeSymbol} from '../../util/disposable.js';\n\nimport type {Browser} from './Browser.js';\nimport type {GetCookiesOptions} from './BrowsingContext.js';\nimport {BrowsingContext} from './BrowsingContext.js';\n\n/**\n * @internal\n */\nexport type CreateBrowsingContextOptions = Omit<\n  Bidi.BrowsingContext.CreateParameters,\n  'type' | 'referenceContext'\n> & {\n  referenceContext?: BrowsingContext;\n};\n\n/**\n * @internal\n */\nexport class UserContext extends EventEmitter<{\n  /**\n   * Emitted when a new browsing context is created.\n   */\n  browsingcontext: {\n    /** The new browsing context. */\n    browsingContext: BrowsingContext;\n  };\n  /**\n   * Emitted when the user context is closed.\n   */\n  closed: {\n    /** The reason the user context was closed. */\n    reason: string;\n  };\n}> {\n  static DEFAULT = 'default' as const;\n\n  static create(browser: Browser, id: string): UserContext {\n    const context = new UserContext(browser, id);\n    context.#initialize();\n    return context;\n  }\n\n  #reason?: string;\n  // Note these are only top-level contexts.\n  readonly #browsingContexts = new Map<string, BrowsingContext>();\n  readonly #disposables = new DisposableStack();\n  readonly #id: string;\n  readonly browser: Browser;\n\n  private constructor(browser: Browser, id: string) {\n    super();\n\n    this.#id = id;\n    this.browser = browser;\n  }\n\n  #initialize() {\n    const browserEmitter = this.#disposables.use(\n      new EventEmitter(this.browser)\n    );\n    browserEmitter.once('closed', ({reason}) => {\n      this.dispose(`User context was closed: ${reason}`);\n    });\n    browserEmitter.once('disconnected', ({reason}) => {\n      this.dispose(`User context was closed: ${reason}`);\n    });\n\n    const sessionEmitter = this.#disposables.use(\n      new EventEmitter(this.#session)\n    );\n    sessionEmitter.on('browsingContext.contextCreated', info => {\n      if (info.parent) {\n        return;\n      }\n\n      if (info.userContext !== this.#id) {\n        return;\n      }\n\n      const browsingContext = BrowsingContext.from(\n        this,\n        undefined,\n        info.context,\n        info.url,\n        info.originalOpener\n      );\n      this.#browsingContexts.set(browsingContext.id, browsingContext);\n\n      const browsingContextEmitter = this.#disposables.use(\n        new EventEmitter(browsingContext)\n      );\n      browsingContextEmitter.on('closed', () => {\n        browsingContextEmitter.removeAllListeners();\n\n        this.#browsingContexts.delete(browsingContext.id);\n      });\n\n      this.emit('browsingcontext', {browsingContext});\n    });\n  }\n\n  get #session() {\n    return this.browser.session;\n  }\n  get browsingContexts(): Iterable<BrowsingContext> {\n    return this.#browsingContexts.values();\n  }\n  get closed(): boolean {\n    return this.#reason !== undefined;\n  }\n  get disposed(): boolean {\n    return this.closed;\n  }\n  get id(): string {\n    return this.#id;\n  }\n\n  @inertIfDisposed\n  private dispose(reason?: string): void {\n    this.#reason = reason;\n    this[disposeSymbol]();\n  }\n\n  @throwIfDisposed<UserContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async createBrowsingContext(\n    type: Bidi.BrowsingContext.CreateType,\n    options: CreateBrowsingContextOptions = {}\n  ): Promise<BrowsingContext> {\n    const {\n      result: {context: contextId},\n    } = await this.#session.send('browsingContext.create', {\n      type,\n      ...options,\n      referenceContext: options.referenceContext?.id,\n      userContext: this.#id,\n    });\n\n    const browsingContext = this.#browsingContexts.get(contextId);\n    assert(\n      browsingContext,\n      'The WebDriver BiDi implementation is failing to create a browsing context correctly.'\n    );\n\n    // We use an array to avoid the promise from being awaited.\n    return browsingContext;\n  }\n\n  @throwIfDisposed<UserContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async remove(): Promise<void> {\n    try {\n      await this.#session.send('browser.removeUserContext', {\n        userContext: this.#id,\n      });\n    } finally {\n      this.dispose('User context already closed.');\n    }\n  }\n\n  @throwIfDisposed<UserContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async getCookies(\n    options: GetCookiesOptions = {},\n    sourceOrigin: string | undefined = undefined\n  ): Promise<Bidi.Network.Cookie[]> {\n    const {\n      result: {cookies},\n    } = await this.#session.send('storage.getCookies', {\n      ...options,\n      partition: {\n        type: 'storageKey',\n        userContext: this.#id,\n        sourceOrigin,\n      },\n    });\n    return cookies;\n  }\n\n  @throwIfDisposed<UserContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setCookie(\n    cookie: Bidi.Storage.PartialCookie,\n    sourceOrigin?: string\n  ): Promise<void> {\n    await this.#session.send('storage.setCookie', {\n      cookie,\n      partition: {\n        type: 'storageKey',\n        sourceOrigin,\n        userContext: this.id,\n      },\n    });\n  }\n\n  @throwIfDisposed<UserContext>(context => {\n    // SAFETY: Disposal implies this exists.\n    return context.#reason!;\n  })\n  async setPermissions(\n    origin: string,\n    descriptor: Bidi.Permissions.PermissionDescriptor,\n    state: Bidi.Permissions.PermissionState\n  ): Promise<void> {\n    await this.#session.send('permissions.setPermission', {\n      origin,\n      descriptor,\n      state,\n      userContext: this.#id,\n    });\n  }\n\n  [disposeSymbol](): void {\n    this.#reason ??=\n      'User context already closed, probably because the browser disconnected/closed.';\n    this.emit('closed', {reason: this.#reason});\n\n    this.#disposables.dispose();\n    super[disposeSymbol]();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}