{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkRequest = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst NetworkUtils_js_1 = require(\"./NetworkUtils.js\");\nconst REALM_REGEX = /(?<=realm=\").*(?=\")/;\n/** Abstracts one individual network request. */\nclass NetworkRequest {\n  static unknownParameter = 'UNKNOWN';\n  /**\n   * Each network request has an associated request id, which is a string\n   * uniquely identifying that request.\n   *\n   * The identifier for a request resulting from a redirect matches that of the\n   * request that initiated it.\n   */\n  #id;\n  #fetchId;\n  /**\n   * Indicates the network intercept phase, if the request is currently blocked.\n   * Undefined necessarily implies that the request is not blocked.\n   */\n  #interceptPhase;\n  #servedFromCache = false;\n  #redirectCount;\n  #request = {};\n  #requestOverrides;\n  #response = {};\n  #eventManager;\n  #networkStorage;\n  #cdpTarget;\n  #logger;\n  #emittedEvents = {\n    [protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.FetchError]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted]: false,\n    [protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted]: false\n  };\n  waitNextPhase = new Deferred_js_1.Deferred();\n  constructor(id, eventManager, networkStorage, cdpTarget, redirectCount = 0, logger) {\n    this.#id = id;\n    this.#eventManager = eventManager;\n    this.#networkStorage = networkStorage;\n    this.#cdpTarget = cdpTarget;\n    this.#redirectCount = redirectCount;\n    this.#logger = logger;\n  }\n  get id() {\n    return this.#id;\n  }\n  get fetchId() {\n    return this.#fetchId;\n  }\n  /**\n   * When blocked returns the phase for it\n   */\n  get interceptPhase() {\n    return this.#interceptPhase;\n  }\n  get url() {\n    const fragment = this.#request.info?.request.urlFragment ?? this.#request.paused?.request.urlFragment ?? '';\n    const url = this.#response.info?.url ?? this.#response.paused?.request.url ?? this.#requestOverrides?.url ?? this.#request.auth?.request.url ?? this.#request.info?.request.url ?? this.#request.paused?.request.url ?? NetworkRequest.unknownParameter;\n    return `${url}${fragment}`;\n  }\n  get redirectCount() {\n    return this.#redirectCount;\n  }\n  get cdpTarget() {\n    return this.#cdpTarget;\n  }\n  get cdpClient() {\n    return this.#cdpTarget.cdpClient;\n  }\n  isRedirecting() {\n    return Boolean(this.#request.info);\n  }\n  #isDataUrl() {\n    return this.url.startsWith('data:');\n  }\n  get #method() {\n    return this.#requestOverrides?.method ?? this.#request.info?.request.method ?? this.#request.paused?.request.method ?? this.#request.auth?.request.method ?? this.#response.paused?.request.method;\n  }\n  get #navigationId() {\n    // Heuristic to determine if this is a navigation request, and if not return null.\n    if (!this.#request.info || !this.#request.info.loaderId ||\n    // When we navigate all CDP network events have `loaderId`\n    // CDP's `loaderId` and `requestId` match when\n    // that request triggered the loading\n    this.#request.info.loaderId !== this.#request.info.requestId) {\n      return null;\n    }\n    // Get virtual navigation ID from the browsing context.\n    return this.#networkStorage.getVirtualNavigationId(this.#context ?? undefined);\n  }\n  get #cookies() {\n    let cookies = [];\n    if (this.#request.extraInfo) {\n      cookies = this.#request.extraInfo.associatedCookies.filter(({\n        blockedReasons\n      }) => {\n        return !Array.isArray(blockedReasons) || blockedReasons.length === 0;\n      }).map(({\n        cookie\n      }) => (0, NetworkUtils_js_1.cdpToBiDiCookie)(cookie));\n    }\n    return cookies;\n  }\n  get #bodySize() {\n    let bodySize = 0;\n    if (typeof this.#requestOverrides?.bodySize === 'number') {\n      bodySize = this.#requestOverrides.bodySize;\n    } else {\n      bodySize = (0, NetworkUtils_js_1.bidiBodySizeFromCdpPostDataEntries)(this.#request.info?.request.postDataEntries ?? []);\n    }\n    return bodySize;\n  }\n  get #context() {\n    return this.#response.paused?.frameId ?? this.#request.info?.frameId ?? this.#request.paused?.frameId ?? this.#request.auth?.frameId ?? null;\n  }\n  /** Returns the HTTP status code associated with this request if any. */\n  get #statusCode() {\n    return this.#response.paused?.responseStatusCode ?? this.#response.extraInfo?.statusCode ?? this.#response.info?.status;\n  }\n  get #requestHeaders() {\n    let headers = [];\n    if (this.#requestOverrides?.headers) {\n      headers = this.#requestOverrides.headers;\n    } else {\n      headers = [...(0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#request.info?.request.headers), ...(0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#request.extraInfo?.headers)];\n    }\n    return headers;\n  }\n  get #authChallenges() {\n    // TODO: get headers from Fetch.requestPaused\n    if (!this.#response.info) {\n      return;\n    }\n    if (!(this.#statusCode === 401 || this.#statusCode === 407)) {\n      return undefined;\n    }\n    const headerName = this.#statusCode === 401 ? 'WWW-Authenticate' : 'Proxy-Authenticate';\n    const authChallenges = [];\n    for (const [header, value] of Object.entries(this.#response.info.headers)) {\n      // TODO: Do a proper match based on https://httpwg.org/specs/rfc9110.html#credentials\n      // Or verify this works\n      if (header.localeCompare(headerName, undefined, {\n        sensitivity: 'base'\n      }) === 0) {\n        authChallenges.push({\n          scheme: value.split(' ').at(0) ?? '',\n          realm: value.match(REALM_REGEX)?.at(0) ?? ''\n        });\n      }\n    }\n    return authChallenges;\n  }\n  get #timings() {\n    return {\n      // TODO: Verify this is correct\n      timeOrigin: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.requestTime),\n      requestTime: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.requestTime),\n      redirectStart: 0,\n      redirectEnd: 0,\n      // TODO: Verify this is correct\n      // https://source.chromium.org/chromium/chromium/src/+/main:net/base/load_timing_info.h;l=145\n      fetchStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.requestTime),\n      dnsStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.dnsStart),\n      dnsEnd: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.dnsEnd),\n      connectStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.connectStart),\n      connectEnd: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.connectEnd),\n      tlsStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.sslStart),\n      requestStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.sendStart),\n      // https://source.chromium.org/chromium/chromium/src/+/main:net/base/load_timing_info.h;l=196\n      responseStart: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.receiveHeadersStart),\n      responseEnd: (0, NetworkUtils_js_1.getTiming)(this.#response.info?.timing?.receiveHeadersEnd)\n    };\n  }\n  #phaseChanged() {\n    this.waitNextPhase.resolve();\n    this.waitNextPhase = new Deferred_js_1.Deferred();\n  }\n  #interceptsInPhase(phase) {\n    if (!this.#cdpTarget.isSubscribedTo(`network.${phase}`)) {\n      return new Set();\n    }\n    return this.#networkStorage.getInterceptsForPhase(this, phase);\n  }\n  #isBlockedInPhase(phase) {\n    return this.#interceptsInPhase(phase).size > 0;\n  }\n  handleRedirect(event) {\n    // TODO: use event.redirectResponse;\n    // Temporary workaround to emit ResponseCompleted event for redirects\n    this.#response.hasExtraInfo = false;\n    this.#response.info = event.redirectResponse;\n    this.#emitEventsIfReady({\n      wasRedirected: true\n    });\n  }\n  #emitEventsIfReady(options = {}) {\n    const requestExtraInfoCompleted =\n    // Flush redirects\n    options.wasRedirected || options.hasFailed || this.#isDataUrl() || Boolean(this.#request.extraInfo) ||\n    // Requests from cache don't have extra info\n    this.#servedFromCache ||\n    // Sometimes there is no extra info and the response\n    // is the only place we can find out\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const noInterceptionExpected =\n    // We can't intercept data urls from CDP\n    this.#isDataUrl() ||\n    // Cached requests never hit the network\n    this.#servedFromCache;\n    const requestInterceptionExpected = !noInterceptionExpected && this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */);\n    const requestInterceptionCompleted = !requestInterceptionExpected || requestInterceptionExpected && Boolean(this.#request.paused);\n    if (Boolean(this.#request.info) && (requestInterceptionExpected ? requestInterceptionCompleted : requestExtraInfoCompleted)) {\n      this.#emitEvent(this.#getBeforeRequestEvent.bind(this));\n    }\n    const responseExtraInfoCompleted = Boolean(this.#response.extraInfo) ||\n    // Response from cache don't have extra info\n    this.#servedFromCache ||\n    // Don't expect extra info if the flag is false\n    Boolean(this.#response.info && !this.#response.hasExtraInfo);\n    const responseInterceptionExpected = !noInterceptionExpected && this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */);\n    if (this.#response.info || responseInterceptionExpected && Boolean(this.#response.paused)) {\n      this.#emitEvent(this.#getResponseStartedEvent.bind(this));\n    }\n    const responseInterceptionCompleted = !responseInterceptionExpected || responseInterceptionExpected && Boolean(this.#response.paused);\n    if (Boolean(this.#response.info) && responseExtraInfoCompleted && responseInterceptionCompleted) {\n      this.#emitEvent(this.#getResponseReceivedEvent.bind(this));\n      this.#networkStorage.deleteRequest(this.id);\n    }\n  }\n  onRequestWillBeSentEvent(event) {\n    this.#request.info = event;\n    this.#emitEventsIfReady();\n  }\n  onRequestWillBeSentExtraInfoEvent(event) {\n    this.#request.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedExtraInfoEvent(event) {\n    if (event.statusCode >= 300 && event.statusCode <= 399 && this.#request.info && event.headers['location'] === this.#request.info.request.url) {\n      // We received the Response Extra info for the redirect\n      // Too late so we need to skip it as it will\n      // fire wrongly for the last one\n      return;\n    }\n    this.#response.extraInfo = event;\n    this.#emitEventsIfReady();\n  }\n  onResponseReceivedEvent(event) {\n    this.#response.hasExtraInfo = event.hasExtraInfo;\n    this.#response.info = event.response;\n    this.#emitEventsIfReady();\n  }\n  onServedFromCache() {\n    this.#servedFromCache = true;\n    this.#emitEventsIfReady();\n  }\n  onLoadingFailedEvent(event) {\n    this.#emitEventsIfReady({\n      hasFailed: true\n    });\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.FetchError,\n        params: {\n          ...this.#getBaseEventParams(),\n          errorText: event.errorText\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-failRequest */\n  async failRequest(errorReason) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.failRequest', {\n      requestId: this.#fetchId,\n      errorReason\n    });\n    this.#interceptPhase = undefined;\n  }\n  onRequestPaused(event) {\n    this.#fetchId = event.requestId;\n    // CDP https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#event-requestPaused\n    if (event.responseStatusCode || event.responseErrorReason) {\n      this.#response.paused = event;\n      if (this.#isBlockedInPhase(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */) &&\n      // CDP may emit multiple events for a single request\n      !this.#emittedEvents[protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted] &&\n      // Continue all response that have not enabled Network domain\n      this.#fetchId !== this.id) {\n        this.#interceptPhase = \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */;\n      } else {\n        void this.#continueResponse();\n      }\n    } else {\n      this.#request.paused = event;\n      if (this.#isBlockedInPhase(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */) &&\n      // CDP may emit multiple events for a single request\n      !this.#emittedEvents[protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent] &&\n      // Continue all requests that have not enabled Network domain\n      this.#fetchId !== this.id) {\n        this.#interceptPhase = \"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */;\n      } else {\n        void this.#continueRequest();\n      }\n    }\n    this.#emitEventsIfReady();\n  }\n  onAuthRequired(event) {\n    this.#fetchId = event.requestId;\n    this.#request.auth = event;\n    if (this.#isBlockedInPhase(\"authRequired\" /* Network.InterceptPhase.AuthRequired */) &&\n    // Continue all auth requests that have not enabled Network domain\n    this.#fetchId !== this.id) {\n      this.#interceptPhase = \"authRequired\" /* Network.InterceptPhase.AuthRequired */;\n    } else {\n      void this.#continueWithAuth({\n        response: 'Default'\n      });\n    }\n    this.#emitEvent(() => {\n      return {\n        method: protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired,\n        params: {\n          ...this.#getBaseEventParams(\"authRequired\" /* Network.InterceptPhase.AuthRequired */),\n          response: this.#getResponseEventParams()\n        }\n      };\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueRequest */\n  async continueRequest(overrides = {}) {\n    const overrideHeaders = this.#getOverrideHeader(overrides.headers, overrides.cookies);\n    const headers = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(overrideHeaders);\n    const postData = getCdpBodyFromBiDiBytesValue(overrides.body);\n    await this.#continueRequest({\n      url: overrides.url,\n      method: overrides.method,\n      headers,\n      postData\n    });\n    this.#requestOverrides = {\n      url: overrides.url,\n      method: overrides.method,\n      headers: overrides.headers,\n      cookies: overrides.cookies,\n      bodySize: getSizeFromBiDiBytesValue(overrides.body)\n    };\n  }\n  async #continueRequest(overrides = {}) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueRequest', {\n      requestId: this.#fetchId,\n      url: overrides.url,\n      method: overrides.method,\n      headers: overrides.headers,\n      postData: overrides.postData\n    });\n    this.#interceptPhase = undefined;\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueResponse */\n  async continueResponse(overrides = {}) {\n    if (this.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      if (overrides.credentials) {\n        await Promise.all([this.waitNextPhase, await this.#continueWithAuth({\n          response: 'ProvideCredentials',\n          username: overrides.credentials.username,\n          password: overrides.credentials.password\n        })]);\n      } else {\n        // We need to use `ProvideCredentials`\n        // As `Default` may cancel the request\n        return await this.#continueWithAuth({\n          response: 'ProvideCredentials'\n        });\n      }\n    }\n    if (this.#interceptPhase === \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */) {\n      const overrideHeaders = this.#getOverrideHeader(overrides.headers, overrides.cookies);\n      const responseHeaders = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(overrideHeaders);\n      await this.#continueResponse({\n        responseCode: overrides.statusCode,\n        responsePhrase: overrides.reasonPhrase,\n        responseHeaders\n      });\n    }\n  }\n  async #continueResponse({\n    responseCode,\n    responsePhrase,\n    responseHeaders\n  } = {}) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueResponse', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase,\n      responseHeaders\n    });\n    this.#interceptPhase = undefined;\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-continueWithAuth */\n  async continueWithAuth(authChallenge) {\n    let username;\n    let password;\n    if (authChallenge.action === 'provideCredentials') {\n      const {\n        credentials\n      } = authChallenge;\n      username = credentials.username;\n      password = credentials.password;\n    }\n    const response = (0, NetworkUtils_js_1.cdpAuthChallengeResponseFromBidiAuthContinueWithAuthAction)(authChallenge.action);\n    await this.#continueWithAuth({\n      response,\n      username,\n      password\n    });\n  }\n  /** @see https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-provideResponse */\n  async provideResponse(overrides) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    // We need to pass through if the request is already in\n    // AuthRequired phase\n    if (this.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      // We need to use `ProvideCredentials`\n      // As `Default` may cancel the request\n      return await this.#continueWithAuth({\n        response: 'ProvideCredentials'\n      });\n    }\n    // If we don't modify the response\n    // just continue the request\n    if (!overrides.body && !overrides.headers) {\n      return await this.#continueRequest();\n    }\n    const overrideHeaders = this.#getOverrideHeader(overrides.headers, overrides.cookies);\n    const responseHeaders = (0, NetworkUtils_js_1.cdpFetchHeadersFromBidiNetworkHeaders)(overrideHeaders);\n    const responseCode = overrides.statusCode ?? this.#statusCode ?? 200;\n    await this.cdpClient.sendCommand('Fetch.fulfillRequest', {\n      requestId: this.#fetchId,\n      responseCode,\n      responsePhrase: overrides.reasonPhrase,\n      responseHeaders,\n      body: getCdpBodyFromBiDiBytesValue(overrides.body)\n    });\n    this.#interceptPhase = undefined;\n  }\n  async #continueWithAuth(authChallengeResponse) {\n    (0, assert_js_1.assert)(this.#fetchId, 'Network Interception not set-up.');\n    await this.cdpClient.sendCommand('Fetch.continueWithAuth', {\n      requestId: this.#fetchId,\n      authChallengeResponse\n    });\n    this.#interceptPhase = undefined;\n  }\n  #emitEvent(getEvent) {\n    let event;\n    try {\n      event = getEvent();\n    } catch (error) {\n      this.#logger?.(log_js_1.LogType.debugError, error);\n      return;\n    }\n    if (this.#isIgnoredEvent() || this.#emittedEvents[event.method] &&\n    // Special case this event can be emitted multiple times\n    event.method !== protocol_js_1.ChromiumBidi.Network.EventNames.AuthRequired) {\n      return;\n    }\n    this.#phaseChanged();\n    this.#emittedEvents[event.method] = true;\n    this.#eventManager.registerEvent(Object.assign(event, {\n      type: 'event'\n    }), this.#context);\n  }\n  #getBaseEventParams(phase) {\n    const interceptProps = {\n      isBlocked: false\n    };\n    if (phase) {\n      const blockedBy = this.#interceptsInPhase(phase);\n      interceptProps.isBlocked = blockedBy.size > 0;\n      if (interceptProps.isBlocked) {\n        interceptProps.intercepts = [...blockedBy];\n      }\n    }\n    return {\n      context: this.#context,\n      navigation: this.#navigationId,\n      redirectCount: this.#redirectCount,\n      request: this.#getRequestData(),\n      // Timestamp should be in milliseconds, while CDP provides it in seconds.\n      timestamp: Math.round((0, NetworkUtils_js_1.getTiming)(this.#request.info?.wallTime) * 1000),\n      // Contains isBlocked and intercepts\n      ...interceptProps\n    };\n  }\n  #getResponseEventParams() {\n    // Chromium sends wrong extraInfo events for responses served from cache.\n    // See https://github.com/puppeteer/puppeteer/issues/9965 and\n    // https://crbug.com/1340398.\n    if (this.#response.info?.fromDiskCache) {\n      this.#response.extraInfo = undefined;\n    }\n    const headers = [...(0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#response.info?.headers), ...(0, NetworkUtils_js_1.bidiNetworkHeadersFromCdpNetworkHeaders)(this.#response.extraInfo?.headers)\n    // TODO: Verify how to dedupe these\n    // ...bidiNetworkHeadersFromCdpNetworkHeadersEntries(\n    //   this.#response.paused?.responseHeaders\n    // ),\n    ];\n    const authChallenges = this.#authChallenges;\n    return {\n      url: this.url,\n      protocol: this.#response.info?.protocol ?? '',\n      status: this.#statusCode ?? -1,\n      // TODO: Throw an exception or use some other status code?\n      statusText: this.#response.info?.statusText || this.#response.paused?.responseStatusText || '',\n      fromCache: this.#response.info?.fromDiskCache || this.#response.info?.fromPrefetchCache || this.#servedFromCache,\n      headers,\n      mimeType: this.#response.info?.mimeType || '',\n      bytesReceived: this.#response.info?.encodedDataLength || 0,\n      headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n      // TODO: consider removing from spec.\n      bodySize: 0,\n      content: {\n        // TODO: consider removing from spec.\n        size: 0\n      },\n      ...(authChallenges ? {\n        authChallenges\n      } : {}),\n      // @ts-expect-error this is a CDP-specific extension.\n      'goog:securityDetails': this.#response.info?.securityDetails\n    };\n  }\n  #getRequestData() {\n    const headers = this.#requestHeaders;\n    return {\n      request: this.#id,\n      url: this.url,\n      method: this.#method ?? NetworkRequest.unknownParameter,\n      headers,\n      cookies: this.#cookies,\n      headersSize: (0, NetworkUtils_js_1.computeHeadersSize)(headers),\n      bodySize: this.#bodySize,\n      timings: this.#timings,\n      // @ts-expect-error CDP-specific attribute.\n      'goog:postData': this.#request.info?.request?.postData,\n      'goog:hasPostData': this.#request.info?.request?.hasPostData,\n      'goog:resourceType': this.#request.info?.type\n    };\n  }\n  #getBeforeRequestEvent() {\n    (0, assert_js_1.assert)(this.#request.info, 'RequestWillBeSentEvent is not set');\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.BeforeRequestSent,\n      params: {\n        ...this.#getBaseEventParams(\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */),\n        initiator: {\n          type: NetworkRequest.#getInitiatorType(this.#request.info.initiator.type),\n          columnNumber: this.#request.info.initiator.columnNumber,\n          lineNumber: this.#request.info.initiator.lineNumber,\n          stackTrace: this.#request.info.initiator.stack,\n          request: this.#request.info.initiator.requestId\n        }\n      }\n    };\n  }\n  #getResponseStartedEvent() {\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseStarted,\n      params: {\n        ...this.#getBaseEventParams(\"responseStarted\" /* Network.InterceptPhase.ResponseStarted */),\n        response: this.#getResponseEventParams()\n      }\n    };\n  }\n  #getResponseReceivedEvent() {\n    return {\n      method: protocol_js_1.ChromiumBidi.Network.EventNames.ResponseCompleted,\n      params: {\n        ...this.#getBaseEventParams(),\n        response: this.#getResponseEventParams()\n      }\n    };\n  }\n  #isIgnoredEvent() {\n    const faviconUrl = '/favicon.ico';\n    return this.#request.paused?.request.url.endsWith(faviconUrl) ?? this.#request.info?.request.url.endsWith(faviconUrl) ?? false;\n  }\n  #getOverrideHeader(headers, cookies) {\n    if (!headers && !cookies) {\n      return undefined;\n    }\n    let overrideHeaders = headers;\n    const cookieHeader = (0, NetworkUtils_js_1.networkHeaderFromCookieHeaders)(cookies);\n    if (cookieHeader && !overrideHeaders) {\n      overrideHeaders = this.#requestHeaders;\n    }\n    if (cookieHeader && overrideHeaders) {\n      overrideHeaders.filter(header => header.name.localeCompare('cookie', undefined, {\n        sensitivity: 'base'\n      }) !== 0);\n      overrideHeaders.push(cookieHeader);\n    }\n    return overrideHeaders;\n  }\n  static #getInitiatorType(initiatorType) {\n    switch (initiatorType) {\n      case 'parser':\n      case 'script':\n      case 'preflight':\n        return initiatorType;\n      default:\n        return 'other';\n    }\n  }\n}\nexports.NetworkRequest = NetworkRequest;\nfunction getCdpBodyFromBiDiBytesValue(body) {\n  let parsedBody;\n  if (body?.type === 'string') {\n    parsedBody = btoa(body.value);\n  } else if (body?.type === 'base64') {\n    parsedBody = body.value;\n  }\n  return parsedBody;\n}\nfunction getSizeFromBiDiBytesValue(body) {\n  if (body?.type === 'string') {\n    return body.value.length;\n  } else if (body?.type === 'base64') {\n    return atob(body.value).length;\n  }\n  return 0;\n}","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","Deferred_js_1","log_js_1","NetworkUtils_js_1","REALM_REGEX","NetworkRequest","unknownParameter","id","fetchId","interceptPhase","servedFromCache","redirectCount","request","requestOverrides","response","eventManager","networkStorage","cdpTarget","logger","emittedEvents","ChromiumBidi","Network","EventNames","AuthRequired","BeforeRequestSent","FetchError","ResponseCompleted","ResponseStarted","waitNextPhase","Deferred","constructor","url","fragment","info","urlFragment","paused","auth","cdpClient","isRedirecting","Boolean","isDataUrl","#isDataUrl","startsWith","method","#method","navigationId","#navigationId","loaderId","requestId","getVirtualNavigationId","context","undefined","cookies","#cookies","extraInfo","associatedCookies","filter","blockedReasons","Array","isArray","length","map","cookie","cdpToBiDiCookie","bodySize","#bodySize","bidiBodySizeFromCdpPostDataEntries","postDataEntries","#context","frameId","statusCode","#statusCode","responseStatusCode","status","requestHeaders","#requestHeaders","headers","bidiNetworkHeadersFromCdpNetworkHeaders","authChallenges","#authChallenges","headerName","header","value","Object","entries","localeCompare","sensitivity","push","scheme","split","at","realm","match","timings","#timings","timeOrigin","getTiming","timing","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","sslStart","requestStart","sendStart","responseStart","receiveHeadersStart","responseEnd","receiveHeadersEnd","phaseChanged","#phaseChanged","resolve","interceptsInPhase","#interceptsInPhase","phase","isSubscribedTo","Set","getInterceptsForPhase","isBlockedInPhase","#isBlockedInPhase","size","handleRedirect","event","hasExtraInfo","redirectResponse","emitEventsIfReady","wasRedirected","#emitEventsIfReady","options","requestExtraInfoCompleted","hasFailed","noInterceptionExpected","requestInterceptionExpected","requestInterceptionCompleted","emitEvent","getBeforeRequestEvent","bind","responseExtraInfoCompleted","responseInterceptionExpected","getResponseStartedEvent","responseInterceptionCompleted","getResponseReceivedEvent","deleteRequest","onRequestWillBeSentEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedExtraInfoEvent","onResponseReceivedEvent","onServedFromCache","onLoadingFailedEvent","params","getBaseEventParams","errorText","failRequest","errorReason","assert","sendCommand","onRequestPaused","responseErrorReason","continueResponse","continueRequest","onAuthRequired","continueWithAuth","getResponseEventParams","overrides","overrideHeaders","getOverrideHeader","cdpFetchHeadersFromBidiNetworkHeaders","postData","getCdpBodyFromBiDiBytesValue","body","getSizeFromBiDiBytesValue","#continueRequest","credentials","Promise","all","username","password","responseHeaders","responseCode","responsePhrase","reasonPhrase","#continueResponse","authChallenge","action","cdpAuthChallengeResponseFromBidiAuthContinueWithAuthAction","provideResponse","#continueWithAuth","authChallengeResponse","#emitEvent","getEvent","error","LogType","debugError","isIgnoredEvent","registerEvent","assign","type","#getBaseEventParams","interceptProps","isBlocked","blockedBy","intercepts","navigation","getRequestData","timestamp","Math","round","wallTime","#getResponseEventParams","fromDiskCache","protocol","statusText","responseStatusText","fromCache","fromPrefetchCache","mimeType","bytesReceived","encodedDataLength","headersSize","computeHeadersSize","content","securityDetails","#getRequestData","hasPostData","#getBeforeRequestEvent","initiator","getInitiatorType","columnNumber","lineNumber","stackTrace","stack","#getResponseStartedEvent","#getResponseReceivedEvent","#isIgnoredEvent","faviconUrl","endsWith","#getOverrideHeader","cookieHeader","networkHeaderFromCookieHeaders","name","#getInitiatorType","initiatorType","exports","parsedBody","btoa","atob"],"sources":["../../../../../src/bidiMapper/modules/network/NetworkRequest.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}