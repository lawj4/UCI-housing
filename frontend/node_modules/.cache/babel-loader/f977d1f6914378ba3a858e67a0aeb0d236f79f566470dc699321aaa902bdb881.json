{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Browser = void 0;\nconst EventEmitter_js_1 = require(\"../../common/EventEmitter.js\");\nconst decorators_js_1 = require(\"../../util/decorators.js\");\nconst disposable_js_1 = require(\"../../util/disposable.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\nconst UserContext_js_1 = require(\"./UserContext.js\");\n/**\n * @internal\n */\nlet Browser = (() => {\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _dispose_decorators;\n  let _close_decorators;\n  let _addPreloadScript_decorators;\n  let _removeIntercept_decorators;\n  let _removePreloadScript_decorators;\n  let _createUserContext_decorators;\n  return class Browser extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      __esDecorate(this, null, _dispose_decorators, {\n        kind: \"method\",\n        name: \"dispose\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"dispose\" in obj,\n          get: obj => obj.dispose\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _close_decorators, {\n        kind: \"method\",\n        name: \"close\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"close\" in obj,\n          get: obj => obj.close\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addPreloadScript_decorators, {\n        kind: \"method\",\n        name: \"addPreloadScript\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addPreloadScript\" in obj,\n          get: obj => obj.addPreloadScript\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _removeIntercept_decorators, {\n        kind: \"method\",\n        name: \"removeIntercept\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"removeIntercept\" in obj,\n          get: obj => obj.removeIntercept\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _removePreloadScript_decorators, {\n        kind: \"method\",\n        name: \"removePreloadScript\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"removePreloadScript\" in obj,\n          get: obj => obj.removePreloadScript\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _createUserContext_decorators, {\n        kind: \"method\",\n        name: \"createUserContext\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"createUserContext\" in obj,\n          get: obj => obj.createUserContext\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static async from(session) {\n      const browser = new Browser(session);\n      await browser.#initialize();\n      return browser;\n    }\n    #closed = (__runInitializers(this, _instanceExtraInitializers), false);\n    #reason;\n    #disposables = new disposable_js_1.DisposableStack();\n    #userContexts = new Map();\n    session;\n    #sharedWorkers = new Map();\n    constructor(session) {\n      super();\n      this.session = session;\n    }\n    async #initialize() {\n      const sessionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.session));\n      sessionEmitter.once('ended', ({\n        reason\n      }) => {\n        this.dispose(reason);\n      });\n      sessionEmitter.on('script.realmCreated', info => {\n        if (info.type !== 'shared-worker') {\n          return;\n        }\n        this.#sharedWorkers.set(info.realm, Realm_js_1.SharedWorkerRealm.from(this, info.realm, info.origin));\n      });\n      await this.#syncUserContexts();\n      await this.#syncBrowsingContexts();\n    }\n    async #syncUserContexts() {\n      const {\n        result: {\n          userContexts\n        }\n      } = await this.session.send('browser.getUserContexts', {});\n      for (const context of userContexts) {\n        this.#createUserContext(context.userContext);\n      }\n    }\n    async #syncBrowsingContexts() {\n      // In case contexts are created or destroyed during `getTree`, we use this\n      // set to detect them.\n      const contextIds = new Set();\n      let contexts;\n      {\n        const env_1 = {\n          stack: [],\n          error: void 0,\n          hasError: false\n        };\n        try {\n          const sessionEmitter = __addDisposableResource(env_1, new EventEmitter_js_1.EventEmitter(this.session), false);\n          sessionEmitter.on('browsingContext.contextCreated', info => {\n            contextIds.add(info.context);\n          });\n          const {\n            result\n          } = await this.session.send('browsingContext.getTree', {});\n          contexts = result.contexts;\n        } catch (e_1) {\n          env_1.error = e_1;\n          env_1.hasError = true;\n        } finally {\n          __disposeResources(env_1);\n        }\n      }\n      // Simulating events so contexts are created naturally.\n      for (const info of contexts) {\n        if (!contextIds.has(info.context)) {\n          this.session.emit('browsingContext.contextCreated', info);\n        }\n        if (info.children) {\n          contexts.push(...info.children);\n        }\n      }\n    }\n    #createUserContext(id) {\n      const userContext = UserContext_js_1.UserContext.create(this, id);\n      this.#userContexts.set(userContext.id, userContext);\n      const userContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(userContext));\n      userContextEmitter.once('closed', () => {\n        userContextEmitter.removeAllListeners();\n        this.#userContexts.delete(userContext.id);\n      });\n      return userContext;\n    }\n    get closed() {\n      return this.#closed;\n    }\n    get defaultUserContext() {\n      // SAFETY: A UserContext is always created for the default context.\n      return this.#userContexts.get(UserContext_js_1.UserContext.DEFAULT);\n    }\n    get disconnected() {\n      return this.#reason !== undefined;\n    }\n    get disposed() {\n      return this.disconnected;\n    }\n    get userContexts() {\n      return this.#userContexts.values();\n    }\n    dispose(reason, closed = false) {\n      this.#closed = closed;\n      this.#reason = reason;\n      this[disposable_js_1.disposeSymbol]();\n    }\n    async close() {\n      try {\n        await this.session.send('browser.close', {});\n      } finally {\n        this.dispose('Browser already closed.', true);\n      }\n    }\n    async addPreloadScript(functionDeclaration, options = {}) {\n      const {\n        result: {\n          script\n        }\n      } = await this.session.send('script.addPreloadScript', {\n        functionDeclaration,\n        ...options,\n        contexts: options.contexts?.map(context => {\n          return context.id;\n        })\n      });\n      return script;\n    }\n    async removeIntercept(intercept) {\n      await this.session.send('network.removeIntercept', {\n        intercept\n      });\n    }\n    async removePreloadScript(script) {\n      await this.session.send('script.removePreloadScript', {\n        script\n      });\n    }\n    async createUserContext() {\n      const {\n        result: {\n          userContext: context\n        }\n      } = await this.session.send('browser.createUserContext', {});\n      return this.#createUserContext(context);\n    }\n    [(_dispose_decorators = [decorators_js_1.inertIfDisposed], _close_decorators = [(0, decorators_js_1.throwIfDisposed)(browser => {\n      // SAFETY: By definition of `disposed`, `#reason` is defined.\n      return browser.#reason;\n    })], _addPreloadScript_decorators = [(0, decorators_js_1.throwIfDisposed)(browser => {\n      // SAFETY: By definition of `disposed`, `#reason` is defined.\n      return browser.#reason;\n    })], _removeIntercept_decorators = [(0, decorators_js_1.throwIfDisposed)(browser => {\n      // SAFETY: By definition of `disposed`, `#reason` is defined.\n      return browser.#reason;\n    })], _removePreloadScript_decorators = [(0, decorators_js_1.throwIfDisposed)(browser => {\n      // SAFETY: By definition of `disposed`, `#reason` is defined.\n      return browser.#reason;\n    })], _createUserContext_decorators = [(0, decorators_js_1.throwIfDisposed)(browser => {\n      // SAFETY: By definition of `disposed`, `#reason` is defined.\n      return browser.#reason;\n    })], disposable_js_1.disposeSymbol)]() {\n      this.#reason ??= 'Browser was disconnected, probably because the session ended.';\n      if (this.closed) {\n        this.emit('closed', {\n          reason: this.#reason\n        });\n      }\n      this.emit('disconnected', {\n        reason: this.#reason\n      });\n      this.#disposables.dispose();\n      super[disposable_js_1.disposeSymbol]();\n    }\n  };\n})();\nexports.Browser = Browser;","map":{"version":3,"names":["EventEmitter_js_1","require","decorators_js_1","disposable_js_1","Realm_js_1","UserContext_js_1","Browser","EventEmitter","_classSuper","__esDecorate","_dispose_decorators","kind","name","static","private","access","has","obj","get","dispose","metadata","_metadata","_instanceExtraInitializers","_close_decorators","close","_addPreloadScript_decorators","addPreloadScript","_removeIntercept_decorators","removeIntercept","_removePreloadScript_decorators","removePreloadScript","_createUserContext_decorators","createUserContext","from","session","browser","initialize","closed","__runInitializers","reason","disposables","DisposableStack","userContexts","Map","sharedWorkers","constructor","#initialize","sessionEmitter","use","once","on","info","type","set","realm","SharedWorkerRealm","origin","syncUserContexts","syncBrowsingContexts","#syncUserContexts","result","send","context","userContext","#syncBrowsingContexts","contextIds","Set","contexts","__addDisposableResource","env_1","add","emit","children","push","#createUserContext","id","UserContext","create","userContextEmitter","removeAllListeners","delete","defaultUserContext","DEFAULT","disconnected","undefined","disposed","values","disposeSymbol","functionDeclaration","options","script","map","intercept","inertIfDisposed","throwIfDisposed","exports"],"sources":["/Users/lawj4/webDevelopment/Todo-List/frontend/node_modules/puppeteer-core/src/bidi/core/Browser.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport {inertIfDisposed, throwIfDisposed} from '../../util/decorators.js';\nimport {DisposableStack, disposeSymbol} from '../../util/disposable.js';\n\nimport type {BrowsingContext} from './BrowsingContext.js';\nimport {SharedWorkerRealm} from './Realm.js';\nimport type {Session} from './Session.js';\nimport {UserContext} from './UserContext.js';\n\n/**\n * @internal\n */\nexport type AddPreloadScriptOptions = Omit<\n  Bidi.Script.AddPreloadScriptParameters,\n  'functionDeclaration' | 'contexts'\n> & {\n  contexts?: [BrowsingContext, ...BrowsingContext[]];\n};\n\n/**\n * @internal\n */\nexport class Browser extends EventEmitter<{\n  /** Emitted before the browser closes. */\n  closed: {\n    /** The reason for closing the browser. */\n    reason: string;\n  };\n  /** Emitted after the browser disconnects. */\n  disconnected: {\n    /** The reason for disconnecting the browser. */\n    reason: string;\n  };\n  /** Emitted when a shared worker is created. */\n  sharedworker: {\n    /** The realm of the shared worker. */\n    realm: SharedWorkerRealm;\n  };\n}> {\n  static async from(session: Session): Promise<Browser> {\n    const browser = new Browser(session);\n    await browser.#initialize();\n    return browser;\n  }\n\n  #closed = false;\n  #reason: string | undefined;\n  readonly #disposables = new DisposableStack();\n  readonly #userContexts = new Map<string, UserContext>();\n  readonly session: Session;\n  readonly #sharedWorkers = new Map<string, SharedWorkerRealm>();\n\n  private constructor(session: Session) {\n    super();\n\n    this.session = session;\n  }\n\n  async #initialize() {\n    const sessionEmitter = this.#disposables.use(\n      new EventEmitter(this.session)\n    );\n    sessionEmitter.once('ended', ({reason}) => {\n      this.dispose(reason);\n    });\n\n    sessionEmitter.on('script.realmCreated', info => {\n      if (info.type !== 'shared-worker') {\n        return;\n      }\n      this.#sharedWorkers.set(\n        info.realm,\n        SharedWorkerRealm.from(this, info.realm, info.origin)\n      );\n    });\n\n    await this.#syncUserContexts();\n    await this.#syncBrowsingContexts();\n  }\n\n  async #syncUserContexts() {\n    const {\n      result: {userContexts},\n    } = await this.session.send('browser.getUserContexts', {});\n\n    for (const context of userContexts) {\n      this.#createUserContext(context.userContext);\n    }\n  }\n\n  async #syncBrowsingContexts() {\n    // In case contexts are created or destroyed during `getTree`, we use this\n    // set to detect them.\n    const contextIds = new Set<string>();\n    let contexts: Bidi.BrowsingContext.Info[];\n\n    {\n      using sessionEmitter = new EventEmitter(this.session);\n      sessionEmitter.on('browsingContext.contextCreated', info => {\n        contextIds.add(info.context);\n      });\n      const {result} = await this.session.send('browsingContext.getTree', {});\n      contexts = result.contexts;\n    }\n\n    // Simulating events so contexts are created naturally.\n    for (const info of contexts) {\n      if (!contextIds.has(info.context)) {\n        this.session.emit('browsingContext.contextCreated', info);\n      }\n      if (info.children) {\n        contexts.push(...info.children);\n      }\n    }\n  }\n\n  #createUserContext(id: string) {\n    const userContext = UserContext.create(this, id);\n    this.#userContexts.set(userContext.id, userContext);\n\n    const userContextEmitter = this.#disposables.use(\n      new EventEmitter(userContext)\n    );\n    userContextEmitter.once('closed', () => {\n      userContextEmitter.removeAllListeners();\n\n      this.#userContexts.delete(userContext.id);\n    });\n\n    return userContext;\n  }\n\n  get closed(): boolean {\n    return this.#closed;\n  }\n  get defaultUserContext(): UserContext {\n    // SAFETY: A UserContext is always created for the default context.\n    return this.#userContexts.get(UserContext.DEFAULT)!;\n  }\n  get disconnected(): boolean {\n    return this.#reason !== undefined;\n  }\n  get disposed(): boolean {\n    return this.disconnected;\n  }\n  get userContexts(): Iterable<UserContext> {\n    return this.#userContexts.values();\n  }\n\n  @inertIfDisposed\n  dispose(reason?: string, closed = false): void {\n    this.#closed = closed;\n    this.#reason = reason;\n    this[disposeSymbol]();\n  }\n\n  @throwIfDisposed<Browser>(browser => {\n    // SAFETY: By definition of `disposed`, `#reason` is defined.\n    return browser.#reason!;\n  })\n  async close(): Promise<void> {\n    try {\n      await this.session.send('browser.close', {});\n    } finally {\n      this.dispose('Browser already closed.', true);\n    }\n  }\n\n  @throwIfDisposed<Browser>(browser => {\n    // SAFETY: By definition of `disposed`, `#reason` is defined.\n    return browser.#reason!;\n  })\n  async addPreloadScript(\n    functionDeclaration: string,\n    options: AddPreloadScriptOptions = {}\n  ): Promise<string> {\n    const {\n      result: {script},\n    } = await this.session.send('script.addPreloadScript', {\n      functionDeclaration,\n      ...options,\n      contexts: options.contexts?.map(context => {\n        return context.id;\n      }) as [string, ...string[]],\n    });\n    return script;\n  }\n\n  @throwIfDisposed<Browser>(browser => {\n    // SAFETY: By definition of `disposed`, `#reason` is defined.\n    return browser.#reason!;\n  })\n  async removeIntercept(intercept: Bidi.Network.Intercept): Promise<void> {\n    await this.session.send('network.removeIntercept', {\n      intercept,\n    });\n  }\n\n  @throwIfDisposed<Browser>(browser => {\n    // SAFETY: By definition of `disposed`, `#reason` is defined.\n    return browser.#reason!;\n  })\n  async removePreloadScript(script: string): Promise<void> {\n    await this.session.send('script.removePreloadScript', {\n      script,\n    });\n  }\n\n  @throwIfDisposed<Browser>(browser => {\n    // SAFETY: By definition of `disposed`, `#reason` is defined.\n    return browser.#reason!;\n  })\n  async createUserContext(): Promise<UserContext> {\n    const {\n      result: {userContext: context},\n    } = await this.session.send('browser.createUserContext', {});\n    return this.#createUserContext(context);\n  }\n\n  [disposeSymbol](): void {\n    this.#reason ??=\n      'Browser was disconnected, probably because the session ended.';\n    if (this.closed) {\n      this.emit('closed', {reason: this.#reason});\n    }\n    this.emit('disconnected', {reason: this.#reason});\n\n    this.#disposables.dispose();\n    super[disposeSymbol]();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}