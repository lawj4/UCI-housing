{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpTarget = void 0;\nconst chromium_bidi_js_1 = require(\"../../../protocol/chromium-bidi.js\");\nconst Deferred_js_1 = require(\"../../../utils/Deferred.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst BrowsingContextImpl_js_1 = require(\"../context/BrowsingContextImpl.js\");\nconst LogManager_js_1 = require(\"../log/LogManager.js\");\nclass CdpTarget {\n  #id;\n  #cdpClient;\n  #browserCdpClient;\n  #realmStorage;\n  #eventManager;\n  #preloadScriptStorage;\n  #browsingContextStorage;\n  #networkStorage;\n  #unblocked = new Deferred_js_1.Deferred();\n  #unhandledPromptBehavior;\n  #logger;\n  #networkDomainEnabled = false;\n  #fetchDomainStages = {\n    request: false,\n    response: false,\n    auth: false\n  };\n  static create(targetId, cdpClient, browserCdpClient, realmStorage, eventManager, preloadScriptStorage, browsingContextStorage, networkStorage, unhandledPromptBehavior, logger) {\n    const cdpTarget = new CdpTarget(targetId, cdpClient, browserCdpClient, eventManager, realmStorage, preloadScriptStorage, browsingContextStorage, networkStorage, unhandledPromptBehavior, logger);\n    LogManager_js_1.LogManager.create(cdpTarget, realmStorage, eventManager, logger);\n    cdpTarget.#setEventListeners();\n    // No need to await.\n    // Deferred will be resolved when the target is unblocked.\n    void cdpTarget.#unblock();\n    return cdpTarget;\n  }\n  constructor(targetId, cdpClient, browserCdpClient, eventManager, realmStorage, preloadScriptStorage, browsingContextStorage, networkStorage, unhandledPromptBehavior, logger) {\n    this.#id = targetId;\n    this.#cdpClient = cdpClient;\n    this.#browserCdpClient = browserCdpClient;\n    this.#eventManager = eventManager;\n    this.#realmStorage = realmStorage;\n    this.#preloadScriptStorage = preloadScriptStorage;\n    this.#networkStorage = networkStorage;\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#unhandledPromptBehavior = unhandledPromptBehavior;\n    this.#logger = logger;\n  }\n  /** Returns a deferred that resolves when the target is unblocked. */\n  get unblocked() {\n    return this.#unblocked;\n  }\n  get id() {\n    return this.#id;\n  }\n  get cdpClient() {\n    return this.#cdpClient;\n  }\n  get browserCdpClient() {\n    return this.#browserCdpClient;\n  }\n  /** Needed for CDP escape path. */\n  get cdpSessionId() {\n    // SAFETY we got the client by it's id for creating\n    return this.#cdpClient.sessionId;\n  }\n  /**\n   * Enables all the required CDP domains and unblocks the target.\n   */\n  async #unblock() {\n    try {\n      await Promise.all([this.#cdpClient.sendCommand('Page.enable'),\n      // There can be some existing frames in the target, if reconnecting to an\n      // existing browser instance, e.g. via Puppeteer. Need to restore the browsing\n      // contexts for the frames to correctly handle further events, like\n      // `Runtime.executionContextCreated`.\n      // It's important to schedule this task together with enabling domains commands to\n      // prepare the tree before the events (e.g. Runtime.executionContextCreated) start\n      // coming.\n      // https://github.com/GoogleChromeLabs/chromium-bidi/issues/2282\n      this.#cdpClient.sendCommand('Page.getFrameTree').then(frameTree => this.#restoreFrameTreeState(frameTree.frameTree)), this.#cdpClient.sendCommand('Runtime.enable'), this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n        enabled: true\n      }), this.toggleNetworkIfNeeded(), this.#cdpClient.sendCommand('Target.setAutoAttach', {\n        autoAttach: true,\n        waitForDebuggerOnStart: true,\n        flatten: true\n      }), this.#initAndEvaluatePreloadScripts(), this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger')]);\n    } catch (error) {\n      this.#logger?.(log_js_1.LogType.debugError, 'Failed to unblock target', error);\n      // The target might have been closed before the initialization finished.\n      if (!this.#cdpClient.isCloseError(error)) {\n        this.#unblocked.resolve({\n          kind: 'error',\n          error\n        });\n        return;\n      }\n    }\n    this.#unblocked.resolve({\n      kind: 'success',\n      value: undefined\n    });\n  }\n  #restoreFrameTreeState(frameTree) {\n    const frame = frameTree.frame;\n    const maybeContext = this.#browsingContextStorage.findContext(frame.id);\n    if (maybeContext !== undefined) {\n      // Restoring parent of already known browsing context. This means the target is\n      // OOPiF and the BiDi session was connected to already existing browser instance.\n      if (maybeContext.parentId === null && frame.parentId !== null && frame.parentId !== undefined) {\n        maybeContext.parentId = frame.parentId;\n      }\n    }\n    if (maybeContext === undefined && frame.parentId !== undefined) {\n      // Restore not yet known nested frames. The top-level frame is created when the\n      // target is attached.\n      const parentBrowsingContext = this.#browsingContextStorage.getContext(frame.parentId);\n      BrowsingContextImpl_js_1.BrowsingContextImpl.create(frame.id, frame.parentId, parentBrowsingContext.userContext, parentBrowsingContext.cdpTarget, this.#eventManager, this.#browsingContextStorage, this.#realmStorage, frame.url, undefined, this.#unhandledPromptBehavior, this.#logger);\n    }\n    frameTree.childFrames?.map(frameTree => this.#restoreFrameTreeState(frameTree));\n  }\n  async toggleFetchIfNeeded() {\n    const stages = this.#networkStorage.getInterceptionStages(this.topLevelId);\n    if (\n    // Only toggle interception when Network is enabled\n    !this.#networkDomainEnabled || this.#fetchDomainStages.request === stages.request && this.#fetchDomainStages.response === stages.response && this.#fetchDomainStages.auth === stages.auth) {\n      return;\n    }\n    const patterns = [];\n    this.#fetchDomainStages = stages;\n    if (stages.request || stages.auth) {\n      // CDP quirk we need request interception when we intercept auth\n      patterns.push({\n        urlPattern: '*',\n        requestStage: 'Request'\n      });\n    }\n    if (stages.response) {\n      patterns.push({\n        urlPattern: '*',\n        requestStage: 'Response'\n      });\n    }\n    if (patterns.length) {\n      await this.#cdpClient.sendCommand('Fetch.enable', {\n        patterns,\n        handleAuthRequests: stages.auth\n      });\n    } else {\n      await this.#cdpClient.sendCommand('Fetch.disable');\n    }\n  }\n  /**\n   * Toggles both Network and Fetch domains.\n   */\n  async toggleNetworkIfNeeded() {\n    const enabled = this.isSubscribedTo(chromium_bidi_js_1.BiDiModule.Network);\n    if (enabled === this.#networkDomainEnabled) {\n      return;\n    }\n    this.#networkDomainEnabled = enabled;\n    try {\n      await Promise.all([this.#cdpClient.sendCommand(enabled ? 'Network.enable' : 'Network.disable'), this.toggleFetchIfNeeded()]);\n    } catch (err) {\n      this.#logger?.(log_js_1.LogType.debugError, err);\n      this.#networkDomainEnabled = !enabled;\n    }\n  }\n  #setEventListeners() {\n    this.#cdpClient.on('*', (event, params) => {\n      // We may encounter uses for EventEmitter other than CDP events,\n      // which we want to skip.\n      if (typeof event !== 'string') {\n        return;\n      }\n      this.#eventManager.registerEvent({\n        type: 'event',\n        method: `cdp.${event}`,\n        params: {\n          event,\n          params,\n          session: this.cdpSessionId\n        }\n      }, this.id);\n    });\n  }\n  /**\n   * All the ProxyChannels from all the preload scripts of the given\n   * BrowsingContext.\n   */\n  getChannels() {\n    return this.#preloadScriptStorage.find().flatMap(script => script.channels);\n  }\n  /** Loads all top-level preload scripts. */\n  async #initAndEvaluatePreloadScripts() {\n    await Promise.all(this.#preloadScriptStorage.find({\n      // Needed for OOPIF\n      targetId: this.topLevelId,\n      global: true\n    }).map(script => {\n      return script.initInTarget(this, true);\n    }));\n  }\n  get topLevelId() {\n    return this.#browsingContextStorage.findTopLevelContextId(this.id) ?? this.id;\n  }\n  isSubscribedTo(moduleOrEvent) {\n    return this.#eventManager.subscriptionManager.isSubscribedTo(moduleOrEvent, this.topLevelId);\n  }\n}\nexports.CdpTarget = CdpTarget;","map":{"version":3,"names":["chromium_bidi_js_1","require","Deferred_js_1","log_js_1","BrowsingContextImpl_js_1","LogManager_js_1","CdpTarget","id","cdpClient","browserCdpClient","realmStorage","eventManager","preloadScriptStorage","browsingContextStorage","networkStorage","unblocked","Deferred","unhandledPromptBehavior","logger","networkDomainEnabled","fetchDomainStages","request","response","auth","create","targetId","cdpTarget","LogManager","setEventListeners","unblock","constructor","cdpSessionId","sessionId","#unblock","Promise","all","sendCommand","then","frameTree","restoreFrameTreeState","enabled","toggleNetworkIfNeeded","autoAttach","waitForDebuggerOnStart","flatten","initAndEvaluatePreloadScripts","error","LogType","debugError","isCloseError","resolve","kind","value","undefined","#restoreFrameTreeState","frame","maybeContext","findContext","parentId","parentBrowsingContext","getContext","BrowsingContextImpl","userContext","url","childFrames","map","toggleFetchIfNeeded","stages","getInterceptionStages","topLevelId","patterns","push","urlPattern","requestStage","length","handleAuthRequests","isSubscribedTo","BiDiModule","Network","err","#setEventListeners","on","event","params","registerEvent","type","method","session","getChannels","find","flatMap","script","channels","#initAndEvaluatePreloadScripts","global","initInTarget","findTopLevelContextId","moduleOrEvent","subscriptionManager","exports"],"sources":["../../../../../src/bidiMapper/modules/cdp/CdpTarget.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}