{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiTouchscreen = exports.BidiMouse = exports.BidiKeyboard = void 0;\nconst Input_js_1 = require(\"../api/Input.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nvar SourceActionsType;\n(function (SourceActionsType) {\n  SourceActionsType[\"None\"] = \"none\";\n  SourceActionsType[\"Key\"] = \"key\";\n  SourceActionsType[\"Pointer\"] = \"pointer\";\n  SourceActionsType[\"Wheel\"] = \"wheel\";\n})(SourceActionsType || (SourceActionsType = {}));\nvar ActionType;\n(function (ActionType) {\n  ActionType[\"Pause\"] = \"pause\";\n  ActionType[\"KeyDown\"] = \"keyDown\";\n  ActionType[\"KeyUp\"] = \"keyUp\";\n  ActionType[\"PointerUp\"] = \"pointerUp\";\n  ActionType[\"PointerDown\"] = \"pointerDown\";\n  ActionType[\"PointerMove\"] = \"pointerMove\";\n  ActionType[\"Scroll\"] = \"scroll\";\n})(ActionType || (ActionType = {}));\nconst getBidiKeyValue = key => {\n  switch (key) {\n    case '\\r':\n    case '\\n':\n      key = 'Enter';\n      break;\n  }\n  // Measures the number of code points rather than UTF-16 code units.\n  if ([...key].length === 1) {\n    return key;\n  }\n  switch (key) {\n    case 'Cancel':\n      return '\\uE001';\n    case 'Help':\n      return '\\uE002';\n    case 'Backspace':\n      return '\\uE003';\n    case 'Tab':\n      return '\\uE004';\n    case 'Clear':\n      return '\\uE005';\n    case 'Enter':\n      return '\\uE007';\n    case 'Shift':\n    case 'ShiftLeft':\n      return '\\uE008';\n    case 'Control':\n    case 'ControlLeft':\n      return '\\uE009';\n    case 'Alt':\n    case 'AltLeft':\n      return '\\uE00A';\n    case 'Pause':\n      return '\\uE00B';\n    case 'Escape':\n      return '\\uE00C';\n    case 'PageUp':\n      return '\\uE00E';\n    case 'PageDown':\n      return '\\uE00F';\n    case 'End':\n      return '\\uE010';\n    case 'Home':\n      return '\\uE011';\n    case 'ArrowLeft':\n      return '\\uE012';\n    case 'ArrowUp':\n      return '\\uE013';\n    case 'ArrowRight':\n      return '\\uE014';\n    case 'ArrowDown':\n      return '\\uE015';\n    case 'Insert':\n      return '\\uE016';\n    case 'Delete':\n      return '\\uE017';\n    case 'NumpadEqual':\n      return '\\uE019';\n    case 'Numpad0':\n      return '\\uE01A';\n    case 'Numpad1':\n      return '\\uE01B';\n    case 'Numpad2':\n      return '\\uE01C';\n    case 'Numpad3':\n      return '\\uE01D';\n    case 'Numpad4':\n      return '\\uE01E';\n    case 'Numpad5':\n      return '\\uE01F';\n    case 'Numpad6':\n      return '\\uE020';\n    case 'Numpad7':\n      return '\\uE021';\n    case 'Numpad8':\n      return '\\uE022';\n    case 'Numpad9':\n      return '\\uE023';\n    case 'NumpadMultiply':\n      return '\\uE024';\n    case 'NumpadAdd':\n      return '\\uE025';\n    case 'NumpadSubtract':\n      return '\\uE027';\n    case 'NumpadDecimal':\n      return '\\uE028';\n    case 'NumpadDivide':\n      return '\\uE029';\n    case 'F1':\n      return '\\uE031';\n    case 'F2':\n      return '\\uE032';\n    case 'F3':\n      return '\\uE033';\n    case 'F4':\n      return '\\uE034';\n    case 'F5':\n      return '\\uE035';\n    case 'F6':\n      return '\\uE036';\n    case 'F7':\n      return '\\uE037';\n    case 'F8':\n      return '\\uE038';\n    case 'F9':\n      return '\\uE039';\n    case 'F10':\n      return '\\uE03A';\n    case 'F11':\n      return '\\uE03B';\n    case 'F12':\n      return '\\uE03C';\n    case 'Meta':\n    case 'MetaLeft':\n      return '\\uE03D';\n    case 'ShiftRight':\n      return '\\uE050';\n    case 'ControlRight':\n      return '\\uE051';\n    case 'AltRight':\n      return '\\uE052';\n    case 'MetaRight':\n      return '\\uE053';\n    case 'Digit0':\n      return '0';\n    case 'Digit1':\n      return '1';\n    case 'Digit2':\n      return '2';\n    case 'Digit3':\n      return '3';\n    case 'Digit4':\n      return '4';\n    case 'Digit5':\n      return '5';\n    case 'Digit6':\n      return '6';\n    case 'Digit7':\n      return '7';\n    case 'Digit8':\n      return '8';\n    case 'Digit9':\n      return '9';\n    case 'KeyA':\n      return 'a';\n    case 'KeyB':\n      return 'b';\n    case 'KeyC':\n      return 'c';\n    case 'KeyD':\n      return 'd';\n    case 'KeyE':\n      return 'e';\n    case 'KeyF':\n      return 'f';\n    case 'KeyG':\n      return 'g';\n    case 'KeyH':\n      return 'h';\n    case 'KeyI':\n      return 'i';\n    case 'KeyJ':\n      return 'j';\n    case 'KeyK':\n      return 'k';\n    case 'KeyL':\n      return 'l';\n    case 'KeyM':\n      return 'm';\n    case 'KeyN':\n      return 'n';\n    case 'KeyO':\n      return 'o';\n    case 'KeyP':\n      return 'p';\n    case 'KeyQ':\n      return 'q';\n    case 'KeyR':\n      return 'r';\n    case 'KeyS':\n      return 's';\n    case 'KeyT':\n      return 't';\n    case 'KeyU':\n      return 'u';\n    case 'KeyV':\n      return 'v';\n    case 'KeyW':\n      return 'w';\n    case 'KeyX':\n      return 'x';\n    case 'KeyY':\n      return 'y';\n    case 'KeyZ':\n      return 'z';\n    case 'Semicolon':\n      return ';';\n    case 'Equal':\n      return '=';\n    case 'Comma':\n      return ',';\n    case 'Minus':\n      return '-';\n    case 'Period':\n      return '.';\n    case 'Slash':\n      return '/';\n    case 'Backquote':\n      return '`';\n    case 'BracketLeft':\n      return '[';\n    case 'Backslash':\n      return '\\\\';\n    case 'BracketRight':\n      return ']';\n    case 'Quote':\n      return '\"';\n    default:\n      throw new Error(`Unknown key: \"${key}\"`);\n  }\n};\n/**\n * @internal\n */\nclass BidiKeyboard extends Input_js_1.Keyboard {\n  #page;\n  constructor(page) {\n    super();\n    this.#page = page;\n  }\n  async down(key, _options) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Key,\n      id: \"__puppeteer_keyboard\" /* InputId.Keyboard */,\n      actions: [{\n        type: ActionType.KeyDown,\n        value: getBidiKeyValue(key)\n      }]\n    }]);\n  }\n  async up(key) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Key,\n      id: \"__puppeteer_keyboard\" /* InputId.Keyboard */,\n      actions: [{\n        type: ActionType.KeyUp,\n        value: getBidiKeyValue(key)\n      }]\n    }]);\n  }\n  async press(key, options = {}) {\n    const {\n      delay = 0\n    } = options;\n    const actions = [{\n      type: ActionType.KeyDown,\n      value: getBidiKeyValue(key)\n    }];\n    if (delay > 0) {\n      actions.push({\n        type: ActionType.Pause,\n        duration: delay\n      });\n    }\n    actions.push({\n      type: ActionType.KeyUp,\n      value: getBidiKeyValue(key)\n    });\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Key,\n      id: \"__puppeteer_keyboard\" /* InputId.Keyboard */,\n      actions\n    }]);\n  }\n  async type(text, options = {}) {\n    const {\n      delay = 0\n    } = options;\n    // This spread separates the characters into code points rather than UTF-16\n    // code units.\n    const values = [...text].map(getBidiKeyValue);\n    const actions = [];\n    if (delay <= 0) {\n      for (const value of values) {\n        actions.push({\n          type: ActionType.KeyDown,\n          value\n        }, {\n          type: ActionType.KeyUp,\n          value\n        });\n      }\n    } else {\n      for (const value of values) {\n        actions.push({\n          type: ActionType.KeyDown,\n          value\n        }, {\n          type: ActionType.Pause,\n          duration: delay\n        }, {\n          type: ActionType.KeyUp,\n          value\n        });\n      }\n    }\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Key,\n      id: \"__puppeteer_keyboard\" /* InputId.Keyboard */,\n      actions\n    }]);\n  }\n  async sendCharacter(char) {\n    // Measures the number of code points rather than UTF-16 code units.\n    if ([...char].length > 1) {\n      throw new Error('Cannot send more than 1 character.');\n    }\n    const frame = await this.#page.focusedFrame();\n    await frame.isolatedRealm().evaluate(async char => {\n      document.execCommand('insertText', false, char);\n    }, char);\n  }\n}\nexports.BidiKeyboard = BidiKeyboard;\nconst getBidiButton = button => {\n  switch (button) {\n    case Input_js_1.MouseButton.Left:\n      return 0;\n    case Input_js_1.MouseButton.Middle:\n      return 1;\n    case Input_js_1.MouseButton.Right:\n      return 2;\n    case Input_js_1.MouseButton.Back:\n      return 3;\n    case Input_js_1.MouseButton.Forward:\n      return 4;\n  }\n};\n/**\n * @internal\n */\nclass BidiMouse extends Input_js_1.Mouse {\n  #page;\n  #lastMovePoint = {\n    x: 0,\n    y: 0\n  };\n  constructor(page) {\n    super();\n    this.#page = page;\n  }\n  async reset() {\n    this.#lastMovePoint = {\n      x: 0,\n      y: 0\n    };\n    await this.#page.mainFrame().browsingContext.releaseActions();\n  }\n  async move(x, y, options = {}) {\n    const from = this.#lastMovePoint;\n    const to = {\n      x: Math.round(x),\n      y: Math.round(y)\n    };\n    const actions = [];\n    const steps = options.steps ?? 0;\n    for (let i = 0; i < steps; ++i) {\n      actions.push({\n        type: ActionType.PointerMove,\n        x: from.x + (to.x - from.x) * (i / steps),\n        y: from.y + (to.y - from.y) * (i / steps),\n        origin: options.origin\n      });\n    }\n    actions.push({\n      type: ActionType.PointerMove,\n      ...to,\n      origin: options.origin\n    });\n    // https://w3c.github.io/webdriver-bidi/#command-input-performActions:~:text=input.PointerMoveAction%20%3D%20%7B%0A%20%20type%3A%20%22pointerMove%22%2C%0A%20%20x%3A%20js%2Dint%2C\n    this.#lastMovePoint = to;\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_mouse\" /* InputId.Mouse */,\n      actions\n    }]);\n  }\n  async down(options = {}) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_mouse\" /* InputId.Mouse */,\n      actions: [{\n        type: ActionType.PointerDown,\n        button: getBidiButton(options.button ?? Input_js_1.MouseButton.Left)\n      }]\n    }]);\n  }\n  async up(options = {}) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_mouse\" /* InputId.Mouse */,\n      actions: [{\n        type: ActionType.PointerUp,\n        button: getBidiButton(options.button ?? Input_js_1.MouseButton.Left)\n      }]\n    }]);\n  }\n  async click(x, y, options = {}) {\n    const actions = [{\n      type: ActionType.PointerMove,\n      x: Math.round(x),\n      y: Math.round(y),\n      origin: options.origin\n    }];\n    const pointerDownAction = {\n      type: ActionType.PointerDown,\n      button: getBidiButton(options.button ?? Input_js_1.MouseButton.Left)\n    };\n    const pointerUpAction = {\n      type: ActionType.PointerUp,\n      button: pointerDownAction.button\n    };\n    for (let i = 1; i < (options.count ?? 1); ++i) {\n      actions.push(pointerDownAction, pointerUpAction);\n    }\n    actions.push(pointerDownAction);\n    if (options.delay) {\n      actions.push({\n        type: ActionType.Pause,\n        duration: options.delay\n      });\n    }\n    actions.push(pointerUpAction);\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_mouse\" /* InputId.Mouse */,\n      actions\n    }]);\n  }\n  async wheel(options = {}) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Wheel,\n      id: \"__puppeteer_wheel\" /* InputId.Wheel */,\n      actions: [{\n        type: ActionType.Scroll,\n        ...(this.#lastMovePoint ?? {\n          x: 0,\n          y: 0\n        }),\n        deltaX: options.deltaX ?? 0,\n        deltaY: options.deltaY ?? 0\n      }]\n    }]);\n  }\n  drag() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  dragOver() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  dragEnter() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  drop() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n  dragAndDrop() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n}\nexports.BidiMouse = BidiMouse;\n/**\n * @internal\n */\nclass BidiTouchscreen extends Input_js_1.Touchscreen {\n  #page;\n  constructor(page) {\n    super();\n    this.#page = page;\n  }\n  async touchStart(x, y, options = {}) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_finger\" /* InputId.Finger */,\n      parameters: {\n        pointerType: \"touch\" /* Bidi.Input.PointerType.Touch */\n      },\n      actions: [{\n        type: ActionType.PointerMove,\n        x: Math.round(x),\n        y: Math.round(y),\n        origin: options.origin\n      }, {\n        type: ActionType.PointerDown,\n        button: 0,\n        width: 0.5 * 2,\n        // 2 times default touch radius.\n        height: 0.5 * 2,\n        // 2 times default touch radius.\n        pressure: 0.5,\n        altitudeAngle: Math.PI / 2\n      }]\n    }]);\n  }\n  async touchMove(x, y, options = {}) {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_finger\" /* InputId.Finger */,\n      parameters: {\n        pointerType: \"touch\" /* Bidi.Input.PointerType.Touch */\n      },\n      actions: [{\n        type: ActionType.PointerMove,\n        x: Math.round(x),\n        y: Math.round(y),\n        origin: options.origin,\n        width: 0.5 * 2,\n        // 2 times default touch radius.\n        height: 0.5 * 2,\n        // 2 times default touch radius.\n        pressure: 0.5,\n        altitudeAngle: Math.PI / 2\n      }]\n    }]);\n  }\n  async touchEnd() {\n    await this.#page.mainFrame().browsingContext.performActions([{\n      type: SourceActionsType.Pointer,\n      id: \"__puppeteer_finger\" /* InputId.Finger */,\n      parameters: {\n        pointerType: \"touch\" /* Bidi.Input.PointerType.Touch */\n      },\n      actions: [{\n        type: ActionType.PointerUp,\n        button: 0\n      }]\n    }]);\n  }\n}\nexports.BidiTouchscreen = BidiTouchscreen;","map":{"version":3,"names":["Input_js_1","require","Errors_js_1","SourceActionsType","ActionType","getBidiKeyValue","key","length","Error","BidiKeyboard","Keyboard","page","constructor","down","_options","mainFrame","browsingContext","performActions","type","Key","id","actions","KeyDown","value","up","KeyUp","press","options","delay","push","Pause","duration","text","values","map","sendCharacter","char","frame","focusedFrame","isolatedRealm","evaluate","document","execCommand","exports","getBidiButton","button","MouseButton","Left","Middle","Right","Back","Forward","BidiMouse","Mouse","lastMovePoint","x","y","reset","releaseActions","move","from","to","Math","round","steps","i","PointerMove","origin","Pointer","PointerDown","PointerUp","click","pointerDownAction","pointerUpAction","count","wheel","Wheel","Scroll","deltaX","deltaY","drag","UnsupportedOperation","dragOver","dragEnter","drop","dragAndDrop","BidiTouchscreen","Touchscreen","touchStart","parameters","pointerType","width","height","pressure","altitudeAngle","PI","touchMove","touchEnd"],"sources":["/Users/lawj4/webDevelopment/Todo-List/frontend/node_modules/puppeteer-core/src/bidi/Input.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {Point} from '../api/ElementHandle.js';\nimport {\n  Keyboard,\n  Mouse,\n  MouseButton,\n  Touchscreen,\n  type KeyboardTypeOptions,\n  type KeyDownOptions,\n  type KeyPressOptions,\n  type MouseClickOptions,\n  type MouseMoveOptions,\n  type MouseOptions,\n  type MouseWheelOptions,\n} from '../api/Input.js';\nimport {UnsupportedOperation} from '../common/Errors.js';\nimport type {KeyInput} from '../common/USKeyboardLayout.js';\n\nimport type {BidiPage} from './Page.js';\n\nconst enum InputId {\n  Mouse = '__puppeteer_mouse',\n  Keyboard = '__puppeteer_keyboard',\n  Wheel = '__puppeteer_wheel',\n  Finger = '__puppeteer_finger',\n}\n\nenum SourceActionsType {\n  None = 'none',\n  Key = 'key',\n  Pointer = 'pointer',\n  Wheel = 'wheel',\n}\n\nenum ActionType {\n  Pause = 'pause',\n  KeyDown = 'keyDown',\n  KeyUp = 'keyUp',\n  PointerUp = 'pointerUp',\n  PointerDown = 'pointerDown',\n  PointerMove = 'pointerMove',\n  Scroll = 'scroll',\n}\n\nconst getBidiKeyValue = (key: KeyInput) => {\n  switch (key) {\n    case '\\r':\n    case '\\n':\n      key = 'Enter';\n      break;\n  }\n  // Measures the number of code points rather than UTF-16 code units.\n  if ([...key].length === 1) {\n    return key;\n  }\n  switch (key) {\n    case 'Cancel':\n      return '\\uE001';\n    case 'Help':\n      return '\\uE002';\n    case 'Backspace':\n      return '\\uE003';\n    case 'Tab':\n      return '\\uE004';\n    case 'Clear':\n      return '\\uE005';\n    case 'Enter':\n      return '\\uE007';\n    case 'Shift':\n    case 'ShiftLeft':\n      return '\\uE008';\n    case 'Control':\n    case 'ControlLeft':\n      return '\\uE009';\n    case 'Alt':\n    case 'AltLeft':\n      return '\\uE00A';\n    case 'Pause':\n      return '\\uE00B';\n    case 'Escape':\n      return '\\uE00C';\n    case 'PageUp':\n      return '\\uE00E';\n    case 'PageDown':\n      return '\\uE00F';\n    case 'End':\n      return '\\uE010';\n    case 'Home':\n      return '\\uE011';\n    case 'ArrowLeft':\n      return '\\uE012';\n    case 'ArrowUp':\n      return '\\uE013';\n    case 'ArrowRight':\n      return '\\uE014';\n    case 'ArrowDown':\n      return '\\uE015';\n    case 'Insert':\n      return '\\uE016';\n    case 'Delete':\n      return '\\uE017';\n    case 'NumpadEqual':\n      return '\\uE019';\n    case 'Numpad0':\n      return '\\uE01A';\n    case 'Numpad1':\n      return '\\uE01B';\n    case 'Numpad2':\n      return '\\uE01C';\n    case 'Numpad3':\n      return '\\uE01D';\n    case 'Numpad4':\n      return '\\uE01E';\n    case 'Numpad5':\n      return '\\uE01F';\n    case 'Numpad6':\n      return '\\uE020';\n    case 'Numpad7':\n      return '\\uE021';\n    case 'Numpad8':\n      return '\\uE022';\n    case 'Numpad9':\n      return '\\uE023';\n    case 'NumpadMultiply':\n      return '\\uE024';\n    case 'NumpadAdd':\n      return '\\uE025';\n    case 'NumpadSubtract':\n      return '\\uE027';\n    case 'NumpadDecimal':\n      return '\\uE028';\n    case 'NumpadDivide':\n      return '\\uE029';\n    case 'F1':\n      return '\\uE031';\n    case 'F2':\n      return '\\uE032';\n    case 'F3':\n      return '\\uE033';\n    case 'F4':\n      return '\\uE034';\n    case 'F5':\n      return '\\uE035';\n    case 'F6':\n      return '\\uE036';\n    case 'F7':\n      return '\\uE037';\n    case 'F8':\n      return '\\uE038';\n    case 'F9':\n      return '\\uE039';\n    case 'F10':\n      return '\\uE03A';\n    case 'F11':\n      return '\\uE03B';\n    case 'F12':\n      return '\\uE03C';\n    case 'Meta':\n    case 'MetaLeft':\n      return '\\uE03D';\n    case 'ShiftRight':\n      return '\\uE050';\n    case 'ControlRight':\n      return '\\uE051';\n    case 'AltRight':\n      return '\\uE052';\n    case 'MetaRight':\n      return '\\uE053';\n    case 'Digit0':\n      return '0';\n    case 'Digit1':\n      return '1';\n    case 'Digit2':\n      return '2';\n    case 'Digit3':\n      return '3';\n    case 'Digit4':\n      return '4';\n    case 'Digit5':\n      return '5';\n    case 'Digit6':\n      return '6';\n    case 'Digit7':\n      return '7';\n    case 'Digit8':\n      return '8';\n    case 'Digit9':\n      return '9';\n    case 'KeyA':\n      return 'a';\n    case 'KeyB':\n      return 'b';\n    case 'KeyC':\n      return 'c';\n    case 'KeyD':\n      return 'd';\n    case 'KeyE':\n      return 'e';\n    case 'KeyF':\n      return 'f';\n    case 'KeyG':\n      return 'g';\n    case 'KeyH':\n      return 'h';\n    case 'KeyI':\n      return 'i';\n    case 'KeyJ':\n      return 'j';\n    case 'KeyK':\n      return 'k';\n    case 'KeyL':\n      return 'l';\n    case 'KeyM':\n      return 'm';\n    case 'KeyN':\n      return 'n';\n    case 'KeyO':\n      return 'o';\n    case 'KeyP':\n      return 'p';\n    case 'KeyQ':\n      return 'q';\n    case 'KeyR':\n      return 'r';\n    case 'KeyS':\n      return 's';\n    case 'KeyT':\n      return 't';\n    case 'KeyU':\n      return 'u';\n    case 'KeyV':\n      return 'v';\n    case 'KeyW':\n      return 'w';\n    case 'KeyX':\n      return 'x';\n    case 'KeyY':\n      return 'y';\n    case 'KeyZ':\n      return 'z';\n    case 'Semicolon':\n      return ';';\n    case 'Equal':\n      return '=';\n    case 'Comma':\n      return ',';\n    case 'Minus':\n      return '-';\n    case 'Period':\n      return '.';\n    case 'Slash':\n      return '/';\n    case 'Backquote':\n      return '`';\n    case 'BracketLeft':\n      return '[';\n    case 'Backslash':\n      return '\\\\';\n    case 'BracketRight':\n      return ']';\n    case 'Quote':\n      return '\"';\n    default:\n      throw new Error(`Unknown key: \"${key}\"`);\n  }\n};\n\n/**\n * @internal\n */\nexport class BidiKeyboard extends Keyboard {\n  #page: BidiPage;\n\n  constructor(page: BidiPage) {\n    super();\n    this.#page = page;\n  }\n\n  override async down(\n    key: KeyInput,\n    _options?: Readonly<KeyDownOptions>\n  ): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Key,\n        id: InputId.Keyboard,\n        actions: [\n          {\n            type: ActionType.KeyDown,\n            value: getBidiKeyValue(key),\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async up(key: KeyInput): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Key,\n        id: InputId.Keyboard,\n        actions: [\n          {\n            type: ActionType.KeyUp,\n            value: getBidiKeyValue(key),\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async press(\n    key: KeyInput,\n    options: Readonly<KeyPressOptions> = {}\n  ): Promise<void> {\n    const {delay = 0} = options;\n    const actions: Bidi.Input.KeySourceAction[] = [\n      {\n        type: ActionType.KeyDown,\n        value: getBidiKeyValue(key),\n      },\n    ];\n    if (delay > 0) {\n      actions.push({\n        type: ActionType.Pause,\n        duration: delay,\n      });\n    }\n    actions.push({\n      type: ActionType.KeyUp,\n      value: getBidiKeyValue(key),\n    });\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Key,\n        id: InputId.Keyboard,\n        actions,\n      },\n    ]);\n  }\n\n  override async type(\n    text: string,\n    options: Readonly<KeyboardTypeOptions> = {}\n  ): Promise<void> {\n    const {delay = 0} = options;\n    // This spread separates the characters into code points rather than UTF-16\n    // code units.\n    const values = ([...text] as KeyInput[]).map(getBidiKeyValue);\n    const actions: Bidi.Input.KeySourceAction[] = [];\n    if (delay <= 0) {\n      for (const value of values) {\n        actions.push(\n          {\n            type: ActionType.KeyDown,\n            value,\n          },\n          {\n            type: ActionType.KeyUp,\n            value,\n          }\n        );\n      }\n    } else {\n      for (const value of values) {\n        actions.push(\n          {\n            type: ActionType.KeyDown,\n            value,\n          },\n          {\n            type: ActionType.Pause,\n            duration: delay,\n          },\n          {\n            type: ActionType.KeyUp,\n            value,\n          }\n        );\n      }\n    }\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Key,\n        id: InputId.Keyboard,\n        actions,\n      },\n    ]);\n  }\n\n  override async sendCharacter(char: string): Promise<void> {\n    // Measures the number of code points rather than UTF-16 code units.\n    if ([...char].length > 1) {\n      throw new Error('Cannot send more than 1 character.');\n    }\n    const frame = await this.#page.focusedFrame();\n    await frame.isolatedRealm().evaluate(async char => {\n      document.execCommand('insertText', false, char);\n    }, char);\n  }\n}\n\n/**\n * @internal\n */\nexport interface BidiMouseClickOptions extends MouseClickOptions {\n  origin?: Bidi.Input.Origin;\n}\n\n/**\n * @internal\n */\nexport interface BidiMouseMoveOptions extends MouseMoveOptions {\n  origin?: Bidi.Input.Origin;\n}\n\n/**\n * @internal\n */\nexport interface BidiTouchMoveOptions {\n  origin?: Bidi.Input.Origin;\n}\n\nconst getBidiButton = (button: MouseButton) => {\n  switch (button) {\n    case MouseButton.Left:\n      return 0;\n    case MouseButton.Middle:\n      return 1;\n    case MouseButton.Right:\n      return 2;\n    case MouseButton.Back:\n      return 3;\n    case MouseButton.Forward:\n      return 4;\n  }\n};\n\n/**\n * @internal\n */\nexport class BidiMouse extends Mouse {\n  #page: BidiPage;\n  #lastMovePoint: Point = {x: 0, y: 0};\n\n  constructor(page: BidiPage) {\n    super();\n    this.#page = page;\n  }\n\n  override async reset(): Promise<void> {\n    this.#lastMovePoint = {x: 0, y: 0};\n    await this.#page.mainFrame().browsingContext.releaseActions();\n  }\n\n  override async move(\n    x: number,\n    y: number,\n    options: Readonly<BidiMouseMoveOptions> = {}\n  ): Promise<void> {\n    const from = this.#lastMovePoint;\n    const to = {\n      x: Math.round(x),\n      y: Math.round(y),\n    };\n    const actions: Bidi.Input.PointerSourceAction[] = [];\n    const steps = options.steps ?? 0;\n    for (let i = 0; i < steps; ++i) {\n      actions.push({\n        type: ActionType.PointerMove,\n        x: from.x + (to.x - from.x) * (i / steps),\n        y: from.y + (to.y - from.y) * (i / steps),\n        origin: options.origin,\n      });\n    }\n    actions.push({\n      type: ActionType.PointerMove,\n      ...to,\n      origin: options.origin,\n    });\n    // https://w3c.github.io/webdriver-bidi/#command-input-performActions:~:text=input.PointerMoveAction%20%3D%20%7B%0A%20%20type%3A%20%22pointerMove%22%2C%0A%20%20x%3A%20js%2Dint%2C\n    this.#lastMovePoint = to;\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Mouse,\n        actions,\n      },\n    ]);\n  }\n\n  override async down(options: Readonly<MouseOptions> = {}): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Mouse,\n        actions: [\n          {\n            type: ActionType.PointerDown,\n            button: getBidiButton(options.button ?? MouseButton.Left),\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async up(options: Readonly<MouseOptions> = {}): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Mouse,\n        actions: [\n          {\n            type: ActionType.PointerUp,\n            button: getBidiButton(options.button ?? MouseButton.Left),\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async click(\n    x: number,\n    y: number,\n    options: Readonly<BidiMouseClickOptions> = {}\n  ): Promise<void> {\n    const actions: Bidi.Input.PointerSourceAction[] = [\n      {\n        type: ActionType.PointerMove,\n        x: Math.round(x),\n        y: Math.round(y),\n        origin: options.origin,\n      },\n    ];\n    const pointerDownAction = {\n      type: ActionType.PointerDown,\n      button: getBidiButton(options.button ?? MouseButton.Left),\n    } as const;\n    const pointerUpAction = {\n      type: ActionType.PointerUp,\n      button: pointerDownAction.button,\n    } as const;\n    for (let i = 1; i < (options.count ?? 1); ++i) {\n      actions.push(pointerDownAction, pointerUpAction);\n    }\n    actions.push(pointerDownAction);\n    if (options.delay) {\n      actions.push({\n        type: ActionType.Pause,\n        duration: options.delay,\n      });\n    }\n    actions.push(pointerUpAction);\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Mouse,\n        actions,\n      },\n    ]);\n  }\n\n  override async wheel(\n    options: Readonly<MouseWheelOptions> = {}\n  ): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Wheel,\n        id: InputId.Wheel,\n        actions: [\n          {\n            type: ActionType.Scroll,\n            ...(this.#lastMovePoint ?? {\n              x: 0,\n              y: 0,\n            }),\n            deltaX: options.deltaX ?? 0,\n            deltaY: options.deltaY ?? 0,\n          },\n        ],\n      },\n    ]);\n  }\n\n  override drag(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override dragOver(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override dragEnter(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override drop(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override dragAndDrop(): never {\n    throw new UnsupportedOperation();\n  }\n}\n\n/**\n * @internal\n */\nexport class BidiTouchscreen extends Touchscreen {\n  #page: BidiPage;\n\n  constructor(page: BidiPage) {\n    super();\n    this.#page = page;\n  }\n\n  override async touchStart(\n    x: number,\n    y: number,\n    options: BidiTouchMoveOptions = {}\n  ): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Finger,\n        parameters: {\n          pointerType: Bidi.Input.PointerType.Touch,\n        },\n        actions: [\n          {\n            type: ActionType.PointerMove,\n            x: Math.round(x),\n            y: Math.round(y),\n            origin: options.origin,\n          },\n          {\n            type: ActionType.PointerDown,\n            button: 0,\n            width: 0.5 * 2, // 2 times default touch radius.\n            height: 0.5 * 2, // 2 times default touch radius.\n            pressure: 0.5,\n            altitudeAngle: Math.PI / 2,\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async touchMove(\n    x: number,\n    y: number,\n    options: BidiTouchMoveOptions = {}\n  ): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Finger,\n        parameters: {\n          pointerType: Bidi.Input.PointerType.Touch,\n        },\n        actions: [\n          {\n            type: ActionType.PointerMove,\n            x: Math.round(x),\n            y: Math.round(y),\n            origin: options.origin,\n            width: 0.5 * 2, // 2 times default touch radius.\n            height: 0.5 * 2, // 2 times default touch radius.\n            pressure: 0.5,\n            altitudeAngle: Math.PI / 2,\n          },\n        ],\n      },\n    ]);\n  }\n\n  override async touchEnd(): Promise<void> {\n    await this.#page.mainFrame().browsingContext.performActions([\n      {\n        type: SourceActionsType.Pointer,\n        id: InputId.Finger,\n        parameters: {\n          pointerType: Bidi.Input.PointerType.Touch,\n        },\n        actions: [\n          {\n            type: ActionType.PointerUp,\n            button: 0,\n          },\n        ],\n      },\n    ]);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}