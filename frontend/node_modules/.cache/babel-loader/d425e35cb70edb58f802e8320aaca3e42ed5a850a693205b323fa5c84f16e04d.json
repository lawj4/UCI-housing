{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass CdpProcessor {\n  #browsingContextStorage;\n  #realmStorage;\n  #cdpConnection;\n  #browserCdpClient;\n  constructor(browsingContextStorage, realmStorage, cdpConnection, browserCdpClient) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#realmStorage = realmStorage;\n    this.#cdpConnection = cdpConnection;\n    this.#browserCdpClient = browserCdpClient;\n  }\n  getSession(params) {\n    const context = params.context;\n    const sessionId = this.#browsingContextStorage.getContext(context).cdpTarget.cdpSessionId;\n    if (sessionId === undefined) {\n      return {};\n    }\n    return {\n      session: sessionId\n    };\n  }\n  resolveRealm(params) {\n    const context = params.realm;\n    const realm = this.#realmStorage.getRealm({\n      realmId: context\n    });\n    if (realm === undefined) {\n      throw new protocol_js_1.UnknownErrorException(`Could not find realm ${params.realm}`);\n    }\n    return {\n      executionContextId: realm.executionContextId\n    };\n  }\n  async sendCommand(params) {\n    const client = params.session ? this.#cdpConnection.getCdpClient(params.session) : this.#browserCdpClient;\n    const result = await client.sendCommand(params.method, params.params);\n    return {\n      result,\n      session: params.session\n    };\n  }\n}\nexports.CdpProcessor = CdpProcessor;","map":{"version":3,"names":["protocol_js_1","require","CdpProcessor","browsingContextStorage","realmStorage","cdpConnection","browserCdpClient","constructor","getSession","params","context","sessionId","getContext","cdpTarget","cdpSessionId","undefined","session","resolveRealm","realm","getRealm","realmId","UnknownErrorException","executionContextId","sendCommand","client","getCdpClient","result","method","exports"],"sources":["../../../../../src/bidiMapper/modules/cdp/CdpProcessor.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,aAAA,GAAAC,OAAA;AAKA,MAAaC,YAAY;EACd,CAAAC,sBAAuB;EACvB,CAAAC,YAAa;EACb,CAAAC,aAAc;EACd,CAAAC,gBAAiB;EAE1BC,YACEJ,sBAA8C,EAC9CC,YAA0B,EAC1BC,aAA4B,EAC5BC,gBAA2B;IAE3B,IAAI,CAAC,CAAAH,sBAAuB,GAAGA,sBAAsB;IACrD,IAAI,CAAC,CAAAC,YAAa,GAAGA,YAAY;IACjC,IAAI,CAAC,CAAAC,aAAc,GAAGA,aAAa;IACnC,IAAI,CAAC,CAAAC,gBAAiB,GAAGA,gBAAgB;EAC3C;EAEAE,UAAUA,CAACC,MAAgC;IACzC,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO;IAC9B,MAAMC,SAAS,GACb,IAAI,CAAC,CAAAR,sBAAuB,CAACS,UAAU,CAACF,OAAO,CAAC,CAACG,SAAS,CAACC,YAAY;IACzE,IAAIH,SAAS,KAAKI,SAAS,EAAE;MAC3B,OAAO,EAAE;IACX;IACA,OAAO;MAACC,OAAO,EAAEL;IAAS,CAAC;EAC7B;EAEAM,YAAYA,CAACR,MAAkC;IAC7C,MAAMC,OAAO,GAAGD,MAAM,CAACS,KAAK;IAC5B,MAAMA,KAAK,GAAG,IAAI,CAAC,CAAAd,YAAa,CAACe,QAAQ,CAAC;MAACC,OAAO,EAAEV;IAAO,CAAC,CAAC;IAC7D,IAAIQ,KAAK,KAAKH,SAAS,EAAE;MACvB,MAAM,IAAIf,aAAA,CAAAqB,qBAAqB,CAAC,wBAAwBZ,MAAM,CAACS,KAAK,EAAE,CAAC;IACzE;IACA,OAAO;MAACI,kBAAkB,EAAEJ,KAAK,CAACI;IAAkB,CAAC;EACvD;EAEA,MAAMC,WAAWA,CACfd,MAAiC;IAEjC,MAAMe,MAAM,GAAGf,MAAM,CAACO,OAAO,GACzB,IAAI,CAAC,CAAAX,aAAc,CAACoB,YAAY,CAAChB,MAAM,CAACO,OAAO,CAAC,GAChD,IAAI,CAAC,CAAAV,gBAAiB;IAC1B,MAAMoB,MAAM,GAAG,MAAMF,MAAM,CAACD,WAAW,CAACd,MAAM,CAACkB,MAAM,EAAElB,MAAM,CAACA,MAAM,CAAC;IACrE,OAAO;MACLiB,MAAM;MACNV,OAAO,EAAEP,MAAM,CAACO;KACjB;EACH;;AAhDFY,OAAA,CAAA1B,YAAA,GAAAA,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}