{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActionDispatcher = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst assert_js_1 = require(\"../../../utils/assert.js\");\nconst GraphemeTools_1 = require(\"../../../utils/GraphemeTools\");\nconst InputSource_js_1 = require(\"./InputSource.js\");\nconst keyUtils_js_1 = require(\"./keyUtils.js\");\nconst USKeyboardLayout_js_1 = require(\"./USKeyboardLayout.js\");\n/** https://w3c.github.io/webdriver/#dfn-center-point */\nconst CALCULATE_IN_VIEW_CENTER_PT_DECL = (i => {\n  const t = i.getClientRects()[0],\n    e = Math.max(0, Math.min(t.x, t.x + t.width)),\n    n = Math.min(window.innerWidth, Math.max(t.x, t.x + t.width)),\n    h = Math.max(0, Math.min(t.y, t.y + t.height)),\n    m = Math.min(window.innerHeight, Math.max(t.y, t.y + t.height));\n  return [e + (n - e >> 1), h + (m - h >> 1)];\n}).toString();\nconst IS_MAC_DECL = (() => {\n  return navigator.platform.toLowerCase().includes('mac');\n}).toString();\nasync function getElementCenter(context, element) {\n  const sandbox = await context.getOrCreateSandbox(undefined);\n  const result = await sandbox.callFunction(CALCULATE_IN_VIEW_CENTER_PT_DECL, false, {\n    type: 'undefined'\n  }, [element]);\n  if (result.type === 'exception') {\n    throw new protocol_js_1.NoSuchElementException(`Origin element ${element.sharedId} was not found`);\n  }\n  (0, assert_js_1.assert)(result.result.type === 'array');\n  (0, assert_js_1.assert)(result.result.value?.[0]?.type === 'number');\n  (0, assert_js_1.assert)(result.result.value?.[1]?.type === 'number');\n  const {\n    result: {\n      value: [{\n        value: x\n      }, {\n        value: y\n      }]\n    }\n  } = result;\n  return {\n    x: x,\n    y: y\n  };\n}\nclass ActionDispatcher {\n  static isMacOS = async context => {\n    const result = await (await context.getOrCreateSandbox(undefined)).callFunction(IS_MAC_DECL, false);\n    (0, assert_js_1.assert)(result.type !== 'exception');\n    (0, assert_js_1.assert)(result.result.type === 'boolean');\n    return result.result.value;\n  };\n  #tickStart = 0;\n  #tickDuration = 0;\n  #inputState;\n  #context;\n  #isMacOS;\n  constructor(inputState, context, isMacOS) {\n    this.#inputState = inputState;\n    this.#context = context;\n    this.#isMacOS = isMacOS;\n  }\n  async dispatchActions(optionsByTick) {\n    await this.#inputState.queue.run(async () => {\n      for (const options of optionsByTick) {\n        await this.dispatchTickActions(options);\n      }\n    });\n  }\n  async dispatchTickActions(options) {\n    this.#tickStart = performance.now();\n    this.#tickDuration = 0;\n    for (const {\n      action\n    } of options) {\n      if ('duration' in action && action.duration !== undefined) {\n        this.#tickDuration = Math.max(this.#tickDuration, action.duration);\n      }\n    }\n    const promises = [new Promise(resolve => setTimeout(resolve, this.#tickDuration))];\n    for (const option of options) {\n      // In theory we have to wait for each action to happen, but CDP is serial,\n      // so as an optimization, we queue all CDP commands at once and await all\n      // of them.\n      promises.push(this.#dispatchAction(option));\n    }\n    await Promise.all(promises);\n  }\n  async #dispatchAction({\n    id,\n    action\n  }) {\n    const source = this.#inputState.get(id);\n    const keyState = this.#inputState.getGlobalKeyState();\n    switch (action.type) {\n      case 'keyDown':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchKeyDownAction(source, action);\n          this.#inputState.cancelList.push({\n            id,\n            action: {\n              ...action,\n              type: 'keyUp'\n            }\n          });\n          break;\n        }\n      case 'keyUp':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchKeyUpAction(source, action);\n          break;\n        }\n      case 'pause':\n        {\n          // TODO: Implement waiting on the input source.\n          break;\n        }\n      case 'pointerDown':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchPointerDownAction(source, keyState, action);\n          this.#inputState.cancelList.push({\n            id,\n            action: {\n              ...action,\n              type: 'pointerUp'\n            }\n          });\n          break;\n        }\n      case 'pointerMove':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchPointerMoveAction(source, keyState, action);\n          break;\n        }\n      case 'pointerUp':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchPointerUpAction(source, keyState, action);\n          break;\n        }\n      case 'scroll':\n        {\n          // SAFETY: The source is validated before.\n          await this.#dispatchScrollAction(source, keyState, action);\n          break;\n        }\n    }\n  }\n  async #dispatchPointerDownAction(source, keyState, action) {\n    const {\n      button\n    } = action;\n    if (source.pressed.has(button)) {\n      return;\n    }\n    source.pressed.add(button);\n    const {\n      x,\n      y,\n      subtype: pointerType\n    } = source;\n    const {\n      width,\n      height,\n      pressure,\n      twist,\n      tangentialPressure\n    } = action;\n    const {\n      tiltX,\n      tiltY\n    } = getTilt(action);\n    // --- Platform-specific code begins here ---\n    const {\n      modifiers\n    } = keyState;\n    const {\n      radiusX,\n      radiusY\n    } = getRadii(width ?? 1, height ?? 1);\n    switch (pointerType) {\n      case \"mouse\" /* Input.PointerType.Mouse */:\n      case \"pen\" /* Input.PointerType.Pen */:\n        // TODO: Implement width and height when available.\n        await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchMouseEvent', {\n          type: 'mousePressed',\n          x,\n          y,\n          modifiers,\n          button: getCdpButton(button),\n          buttons: source.buttons,\n          clickCount: source.setClickCount(button, new InputSource_js_1.PointerSource.ClickContext(x, y, performance.now())),\n          pointerType,\n          tangentialPressure,\n          tiltX,\n          tiltY,\n          twist,\n          force: pressure\n        });\n        break;\n      case \"touch\" /* Input.PointerType.Touch */:\n        await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchTouchEvent', {\n          type: 'touchStart',\n          touchPoints: [{\n            x,\n            y,\n            radiusX,\n            radiusY,\n            tangentialPressure,\n            tiltX,\n            tiltY,\n            twist,\n            force: pressure,\n            id: source.pointerId\n          }],\n          modifiers\n        });\n        break;\n    }\n    source.radiusX = radiusX;\n    source.radiusY = radiusY;\n    source.force = pressure;\n    // --- Platform-specific code ends here ---\n  }\n  #dispatchPointerUpAction(source, keyState, action) {\n    const {\n      button\n    } = action;\n    if (!source.pressed.has(button)) {\n      return;\n    }\n    source.pressed.delete(button);\n    const {\n      x,\n      y,\n      force,\n      radiusX,\n      radiusY,\n      subtype: pointerType\n    } = source;\n    // --- Platform-specific code begins here ---\n    const {\n      modifiers\n    } = keyState;\n    switch (pointerType) {\n      case \"mouse\" /* Input.PointerType.Mouse */:\n      case \"pen\" /* Input.PointerType.Pen */:\n        // TODO: Implement width and height when available.\n        return this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchMouseEvent', {\n          type: 'mouseReleased',\n          x,\n          y,\n          modifiers,\n          button: getCdpButton(button),\n          buttons: source.buttons,\n          clickCount: source.getClickCount(button),\n          pointerType\n        });\n      case \"touch\" /* Input.PointerType.Touch */:\n        return this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchTouchEvent', {\n          type: 'touchEnd',\n          touchPoints: [{\n            x,\n            y,\n            id: source.pointerId,\n            force,\n            radiusX,\n            radiusY\n          }],\n          modifiers\n        });\n    }\n    // --- Platform-specific code ends here ---\n  }\n  async #dispatchPointerMoveAction(source, keyState, action) {\n    const {\n      x: startX,\n      y: startY,\n      subtype: pointerType\n    } = source;\n    const {\n      width,\n      height,\n      pressure,\n      twist,\n      tangentialPressure,\n      x: offsetX,\n      y: offsetY,\n      origin = 'viewport',\n      duration = this.#tickDuration\n    } = action;\n    const {\n      tiltX,\n      tiltY\n    } = getTilt(action);\n    const {\n      radiusX,\n      radiusY\n    } = getRadii(width ?? 1, height ?? 1);\n    const {\n      targetX,\n      targetY\n    } = await this.#getCoordinateFromOrigin(origin, offsetX, offsetY, startX, startY);\n    if (targetX < 0 || targetY < 0) {\n      throw new protocol_js_1.MoveTargetOutOfBoundsException(`Cannot move beyond viewport (x: ${targetX}, y: ${targetY})`);\n    }\n    let last;\n    do {\n      const ratio = duration > 0 ? (performance.now() - this.#tickStart) / duration : 1;\n      last = ratio >= 1;\n      let x;\n      let y;\n      if (last) {\n        x = targetX;\n        y = targetY;\n      } else {\n        x = Math.round(ratio * (targetX - startX) + startX);\n        y = Math.round(ratio * (targetY - startY) + startY);\n      }\n      if (source.x !== x || source.y !== y) {\n        // --- Platform-specific code begins here ---\n        const {\n          modifiers\n        } = keyState;\n        switch (pointerType) {\n          case \"mouse\" /* Input.PointerType.Mouse */:\n            // TODO: Implement width and height when available.\n            await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchMouseEvent', {\n              type: 'mouseMoved',\n              x,\n              y,\n              modifiers,\n              clickCount: 0,\n              button: getCdpButton(source.pressed.values().next().value ?? 5),\n              buttons: source.buttons,\n              pointerType,\n              tangentialPressure,\n              tiltX,\n              tiltY,\n              twist,\n              force: pressure\n            });\n            break;\n          case \"pen\" /* Input.PointerType.Pen */:\n            if (source.pressed.size !== 0) {\n              // TODO: Implement width and height when available.\n              await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchMouseEvent', {\n                type: 'mouseMoved',\n                x,\n                y,\n                modifiers,\n                clickCount: 0,\n                button: getCdpButton(source.pressed.values().next().value ?? 5),\n                buttons: source.buttons,\n                pointerType,\n                tangentialPressure,\n                tiltX,\n                tiltY,\n                twist,\n                force: pressure\n              });\n            }\n            break;\n          case \"touch\" /* Input.PointerType.Touch */:\n            if (source.pressed.size !== 0) {\n              await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchTouchEvent', {\n                type: 'touchMove',\n                touchPoints: [{\n                  x,\n                  y,\n                  radiusX,\n                  radiusY,\n                  tangentialPressure,\n                  tiltX,\n                  tiltY,\n                  twist,\n                  force: pressure,\n                  id: source.pointerId\n                }],\n                modifiers\n              });\n            }\n            break;\n        }\n        // --- Platform-specific code ends here ---\n        source.x = x;\n        source.y = y;\n        source.radiusX = radiusX;\n        source.radiusY = radiusY;\n        source.force = pressure;\n      }\n    } while (!last);\n  }\n  async #getCoordinateFromOrigin(origin, offsetX, offsetY, startX, startY) {\n    let targetX;\n    let targetY;\n    switch (origin) {\n      case 'viewport':\n        targetX = offsetX;\n        targetY = offsetY;\n        break;\n      case 'pointer':\n        targetX = startX + offsetX;\n        targetY = startY + offsetY;\n        break;\n      default:\n        {\n          const {\n            x: posX,\n            y: posY\n          } = await getElementCenter(this.#context, origin.element);\n          // SAFETY: These can never be special numbers.\n          targetX = posX + offsetX;\n          targetY = posY + offsetY;\n          break;\n        }\n    }\n    return {\n      targetX,\n      targetY\n    };\n  }\n  async #dispatchScrollAction(_source, keyState, action) {\n    const {\n      deltaX: targetDeltaX,\n      deltaY: targetDeltaY,\n      x: offsetX,\n      y: offsetY,\n      origin = 'viewport',\n      duration = this.#tickDuration\n    } = action;\n    if (origin === 'pointer') {\n      throw new protocol_js_1.InvalidArgumentException('\"pointer\" origin is invalid for scrolling.');\n    }\n    const {\n      targetX,\n      targetY\n    } = await this.#getCoordinateFromOrigin(origin, offsetX, offsetY, 0, 0);\n    if (targetX < 0 || targetY < 0) {\n      throw new protocol_js_1.MoveTargetOutOfBoundsException(`Cannot move beyond viewport (x: ${targetX}, y: ${targetY})`);\n    }\n    let currentDeltaX = 0;\n    let currentDeltaY = 0;\n    let last;\n    do {\n      const ratio = duration > 0 ? (performance.now() - this.#tickStart) / duration : 1;\n      last = ratio >= 1;\n      let deltaX;\n      let deltaY;\n      if (last) {\n        deltaX = targetDeltaX - currentDeltaX;\n        deltaY = targetDeltaY - currentDeltaY;\n      } else {\n        deltaX = Math.round(ratio * targetDeltaX - currentDeltaX);\n        deltaY = Math.round(ratio * targetDeltaY - currentDeltaY);\n      }\n      if (deltaX !== 0 || deltaY !== 0) {\n        // --- Platform-specific code begins here ---\n        const {\n          modifiers\n        } = keyState;\n        await this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchMouseEvent', {\n          type: 'mouseWheel',\n          deltaX,\n          deltaY,\n          x: targetX,\n          y: targetY,\n          modifiers\n        });\n        // --- Platform-specific code ends here ---\n        currentDeltaX += deltaX;\n        currentDeltaY += deltaY;\n      }\n    } while (!last);\n  }\n  async #dispatchKeyDownAction(source, action) {\n    const rawKey = action.value;\n    if (!(0, GraphemeTools_1.isSingleGrapheme)(rawKey)) {\n      // https://w3c.github.io/webdriver/#dfn-process-a-key-action\n      // WebDriver spec allows a grapheme to be used.\n      throw new protocol_js_1.InvalidArgumentException(`Invalid key value: ${rawKey}`);\n    }\n    const isGrapheme = (0, GraphemeTools_1.isSingleComplexGrapheme)(rawKey);\n    const key = (0, keyUtils_js_1.getNormalizedKey)(rawKey);\n    const repeat = source.pressed.has(key);\n    const code = (0, keyUtils_js_1.getKeyCode)(rawKey);\n    const location = (0, keyUtils_js_1.getKeyLocation)(rawKey);\n    switch (key) {\n      case 'Alt':\n        source.alt = true;\n        break;\n      case 'Shift':\n        source.shift = true;\n        break;\n      case 'Control':\n        source.ctrl = true;\n        break;\n      case 'Meta':\n        source.meta = true;\n        break;\n    }\n    source.pressed.add(key);\n    const {\n      modifiers\n    } = source;\n    // --- Platform-specific code begins here ---\n    // The spread is a little hack so JS gives us an array of unicode characters\n    // to measure.\n    const unmodifiedText = getKeyEventUnmodifiedText(key, source, isGrapheme);\n    const text = getKeyEventText(code ?? '', source) ?? unmodifiedText;\n    let command;\n    // The following commands need to be declared because Chromium doesn't\n    // handle them. See\n    // https://source.chromium.org/chromium/chromium/src/+/refs/heads/main:third_party/blink/renderer/core/editing/editing_behavior.cc;l=169;drc=b8143cf1dfd24842890fcd831c4f5d909bef4fc4;bpv=0;bpt=1.\n    if (this.#isMacOS && source.meta) {\n      switch (code) {\n        case 'KeyA':\n          command = 'SelectAll';\n          break;\n        case 'KeyC':\n          command = 'Copy';\n          break;\n        case 'KeyV':\n          command = source.shift ? 'PasteAndMatchStyle' : 'Paste';\n          break;\n        case 'KeyX':\n          command = 'Cut';\n          break;\n        case 'KeyZ':\n          command = source.shift ? 'Redo' : 'Undo';\n          break;\n        default:\n        // Intentionally empty.\n      }\n    }\n    const promises = [this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchKeyEvent', {\n      type: text ? 'keyDown' : 'rawKeyDown',\n      windowsVirtualKeyCode: USKeyboardLayout_js_1.KeyToKeyCode[key],\n      key,\n      code,\n      text,\n      unmodifiedText,\n      autoRepeat: repeat,\n      isSystemKey: source.alt || undefined,\n      location: location < 3 ? location : undefined,\n      isKeypad: location === 3,\n      modifiers,\n      commands: command ? [command] : undefined\n    })];\n    // Drag cancelling happens on escape.\n    if (key === 'Escape') {\n      if (!source.alt && (this.#isMacOS && !source.ctrl && !source.meta || !this.#isMacOS)) {\n        promises.push(this.#context.cdpTarget.cdpClient.sendCommand('Input.cancelDragging'));\n      }\n    }\n    await Promise.all(promises);\n    // --- Platform-specific code ends here ---\n  }\n  #dispatchKeyUpAction(source, action) {\n    const rawKey = action.value;\n    if (!(0, GraphemeTools_1.isSingleGrapheme)(rawKey)) {\n      // https://w3c.github.io/webdriver/#dfn-process-a-key-action\n      // WebDriver spec allows a grapheme to be used.\n      throw new protocol_js_1.InvalidArgumentException(`Invalid key value: ${rawKey}`);\n    }\n    const isGrapheme = (0, GraphemeTools_1.isSingleComplexGrapheme)(rawKey);\n    const key = (0, keyUtils_js_1.getNormalizedKey)(rawKey);\n    if (!source.pressed.has(key)) {\n      return;\n    }\n    const code = (0, keyUtils_js_1.getKeyCode)(rawKey);\n    const location = (0, keyUtils_js_1.getKeyLocation)(rawKey);\n    switch (key) {\n      case 'Alt':\n        source.alt = false;\n        break;\n      case 'Shift':\n        source.shift = false;\n        break;\n      case 'Control':\n        source.ctrl = false;\n        break;\n      case 'Meta':\n        source.meta = false;\n        break;\n    }\n    source.pressed.delete(key);\n    const {\n      modifiers\n    } = source;\n    // --- Platform-specific code begins here ---\n    // The spread is a little hack so JS gives us an array of unicode characters\n    // to measure.\n    const unmodifiedText = getKeyEventUnmodifiedText(key, source, isGrapheme);\n    const text = getKeyEventText(code ?? '', source) ?? unmodifiedText;\n    return this.#context.cdpTarget.cdpClient.sendCommand('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      windowsVirtualKeyCode: USKeyboardLayout_js_1.KeyToKeyCode[key],\n      key,\n      code,\n      text,\n      unmodifiedText,\n      location: location < 3 ? location : undefined,\n      isSystemKey: source.alt || undefined,\n      isKeypad: location === 3,\n      modifiers\n    });\n    // --- Platform-specific code ends here ---\n  }\n}\nexports.ActionDispatcher = ActionDispatcher;\n/**\n * Translates a non-grapheme key to either an `undefined` for a special keys, or a single\n * character modified by shift if needed.\n */\nconst getKeyEventUnmodifiedText = (key, source, isGrapheme) => {\n  if (isGrapheme) {\n    // Graphemes should be presented as text in the CDP command.\n    return key;\n  }\n  if (key === 'Enter') {\n    return '\\r';\n  }\n  // If key is not a single character, it is a normalized key value, and should be\n  // presented as key, not text in the CDP command.\n  return [...key].length === 1 ? source.shift ? key.toLocaleUpperCase('en-US') : key : undefined;\n};\nconst getKeyEventText = (code, source) => {\n  if (source.ctrl) {\n    switch (code) {\n      case 'Digit2':\n        if (source.shift) {\n          return '\\x00';\n        }\n        break;\n      case 'KeyA':\n        return '\\x01';\n      case 'KeyB':\n        return '\\x02';\n      case 'KeyC':\n        return '\\x03';\n      case 'KeyD':\n        return '\\x04';\n      case 'KeyE':\n        return '\\x05';\n      case 'KeyF':\n        return '\\x06';\n      case 'KeyG':\n        return '\\x07';\n      case 'KeyH':\n        return '\\x08';\n      case 'KeyI':\n        return '\\x09';\n      case 'KeyJ':\n        return '\\x0A';\n      case 'KeyK':\n        return '\\x0B';\n      case 'KeyL':\n        return '\\x0C';\n      case 'KeyM':\n        return '\\x0D';\n      case 'KeyN':\n        return '\\x0E';\n      case 'KeyO':\n        return '\\x0F';\n      case 'KeyP':\n        return '\\x10';\n      case 'KeyQ':\n        return '\\x11';\n      case 'KeyR':\n        return '\\x12';\n      case 'KeyS':\n        return '\\x13';\n      case 'KeyT':\n        return '\\x14';\n      case 'KeyU':\n        return '\\x15';\n      case 'KeyV':\n        return '\\x16';\n      case 'KeyW':\n        return '\\x17';\n      case 'KeyX':\n        return '\\x18';\n      case 'KeyY':\n        return '\\x19';\n      case 'KeyZ':\n        return '\\x1A';\n      case 'BracketLeft':\n        return '\\x1B';\n      case 'Backslash':\n        return '\\x1C';\n      case 'BracketRight':\n        return '\\x1D';\n      case 'Digit6':\n        if (source.shift) {\n          return '\\x1E';\n        }\n        break;\n      case 'Minus':\n        return '\\x1F';\n    }\n    return '';\n  }\n  if (source.alt) {\n    return '';\n  }\n  return;\n};\nfunction getCdpButton(button) {\n  switch (button) {\n    case 0:\n      return 'left';\n    case 1:\n      return 'middle';\n    case 2:\n      return 'right';\n    case 3:\n      return 'back';\n    case 4:\n      return 'forward';\n    default:\n      return 'none';\n  }\n}\nfunction getTilt(action) {\n  // https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n  const altitudeAngle = action.altitudeAngle ?? 0;\n  const azimuthAngle = action.azimuthAngle ?? 0;\n  let tiltXRadians = 0;\n  let tiltYRadians = 0;\n  if (altitudeAngle === 0) {\n    // the pen is in the X-Y plane\n    if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n      // pen is on positive X axis\n      tiltXRadians = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI / 2) {\n      // pen is on positive Y axis\n      tiltYRadians = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI) {\n      // pen is on negative X axis\n      tiltXRadians = -Math.PI / 2;\n    }\n    if (azimuthAngle === 3 * Math.PI / 2) {\n      // pen is on negative Y axis\n      tiltYRadians = -Math.PI / 2;\n    }\n    if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n      tiltXRadians = Math.PI / 2;\n      tiltYRadians = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n      tiltXRadians = -Math.PI / 2;\n      tiltYRadians = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI && azimuthAngle < 3 * Math.PI / 2) {\n      tiltXRadians = -Math.PI / 2;\n      tiltYRadians = -Math.PI / 2;\n    }\n    if (azimuthAngle > 3 * Math.PI / 2 && azimuthAngle < 2 * Math.PI) {\n      tiltXRadians = Math.PI / 2;\n      tiltYRadians = -Math.PI / 2;\n    }\n  }\n  if (altitudeAngle !== 0) {\n    const tanAlt = Math.tan(altitudeAngle);\n    tiltXRadians = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n    tiltYRadians = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n  }\n  const factor = 180 / Math.PI;\n  return {\n    tiltX: Math.round(tiltXRadians * factor),\n    tiltY: Math.round(tiltYRadians * factor)\n  };\n}\nfunction getRadii(width, height) {\n  return {\n    radiusX: width ? width / 2 : 0.5,\n    radiusY: height ? height / 2 : 0.5\n  };\n}","map":{"version":3,"names":["protocol_js_1","require","assert_js_1","GraphemeTools_1","InputSource_js_1","keyUtils_js_1","USKeyboardLayout_js_1","CALCULATE_IN_VIEW_CENTER_PT_DECL","i","t","getClientRects","e","Math","max","min","x","width","n","window","innerWidth","h","y","height","m","innerHeight","toString","IS_MAC_DECL","navigator","platform","toLowerCase","includes","getElementCenter","context","element","sandbox","getOrCreateSandbox","undefined","result","callFunction","type","NoSuchElementException","sharedId","assert","value","ActionDispatcher","isMacOS","tickStart","tickDuration","inputState","constructor","dispatchActions","optionsByTick","queue","run","options","dispatchTickActions","performance","now","action","duration","promises","Promise","resolve","setTimeout","option","push","dispatchAction","all","#dispatchAction","id","source","get","keyState","getGlobalKeyState","dispatchKeyDownAction","cancelList","dispatchKeyUpAction","dispatchPointerDownAction","dispatchPointerMoveAction","dispatchPointerUpAction","dispatchScrollAction","#dispatchPointerDownAction","button","pressed","has","add","subtype","pointerType","pressure","twist","tangentialPressure","tiltX","tiltY","getTilt","modifiers","radiusX","radiusY","getRadii","cdpTarget","cdpClient","sendCommand","getCdpButton","buttons","clickCount","setClickCount","PointerSource","ClickContext","force","touchPoints","pointerId","#dispatchPointerUpAction","delete","getClickCount","#dispatchPointerMoveAction","startX","startY","offsetX","offsetY","origin","targetX","targetY","getCoordinateFromOrigin","MoveTargetOutOfBoundsException","last","ratio","round","values","next","size","#getCoordinateFromOrigin","posX","posY","#dispatchScrollAction","_source","deltaX","targetDeltaX","deltaY","targetDeltaY","InvalidArgumentException","currentDeltaX","currentDeltaY","#dispatchKeyDownAction","rawKey","isSingleGrapheme","isGrapheme","isSingleComplexGrapheme","key","getNormalizedKey","repeat","code","getKeyCode","location","getKeyLocation","alt","shift","ctrl","meta","unmodifiedText","getKeyEventUnmodifiedText","text","getKeyEventText","command","windowsVirtualKeyCode","KeyToKeyCode","autoRepeat","isSystemKey","isKeypad","commands","#dispatchKeyUpAction","exports","length","toLocaleUpperCase","altitudeAngle","azimuthAngle","tiltXRadians","tiltYRadians","PI","tanAlt","tan","atan","cos","sin","factor"],"sources":["../../../../../src/bidiMapper/modules/input/ActionDispatcher.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}