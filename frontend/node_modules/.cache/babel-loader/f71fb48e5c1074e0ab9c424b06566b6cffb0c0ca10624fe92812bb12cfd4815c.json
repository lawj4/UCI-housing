{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __setFunctionName = this && this.__setFunctionName || function (f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", {\n    configurable: true,\n    value: prefix ? \"\".concat(prefix, \" \", name) : name\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiBrowser = void 0;\nconst Browser_js_1 = require(\"../api/Browser.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst decorators_js_1 = require(\"../util/decorators.js\");\nconst BrowserContext_js_1 = require(\"./BrowserContext.js\");\nconst Session_js_1 = require(\"./core/Session.js\");\nconst Target_js_1 = require(\"./Target.js\");\n/**\n * @internal\n */\nlet BidiBrowser = (() => {\n  let _classSuper = Browser_js_1.Browser;\n  let _private_trustedEmitter_decorators;\n  let _private_trustedEmitter_initializers = [];\n  let _private_trustedEmitter_extraInitializers = [];\n  let _private_trustedEmitter_descriptor;\n  return class BidiBrowser extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      _private_trustedEmitter_decorators = [(0, decorators_js_1.bubble)()];\n      __esDecorate(this, _private_trustedEmitter_descriptor = {\n        get: __setFunctionName(function () {\n          return this.#trustedEmitter_accessor_storage;\n        }, \"#trustedEmitter\", \"get\"),\n        set: __setFunctionName(function (value) {\n          this.#trustedEmitter_accessor_storage = value;\n        }, \"#trustedEmitter\", \"set\")\n      }, _private_trustedEmitter_decorators, {\n        kind: \"accessor\",\n        name: \"#trustedEmitter\",\n        static: false,\n        private: true,\n        access: {\n          has: obj => #trustedEmitter in obj,\n          get: obj => obj.#trustedEmitter,\n          set: (obj, value) => {\n            obj.#trustedEmitter = value;\n          }\n        },\n        metadata: _metadata\n      }, _private_trustedEmitter_initializers, _private_trustedEmitter_extraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    protocol = 'webDriverBiDi';\n    static subscribeModules = ['browsingContext', 'network', 'log', 'script'];\n    static subscribeCdpEvents = [\n    // Coverage\n    'cdp.Debugger.scriptParsed', 'cdp.CSS.styleSheetAdded', 'cdp.Runtime.executionContextsCleared',\n    // Tracing\n    'cdp.Tracing.tracingComplete',\n    // TODO: subscribe to all CDP events in the future.\n    'cdp.Network.requestWillBeSent', 'cdp.Debugger.scriptParsed', 'cdp.Page.screencastFrame'];\n    static async create(opts) {\n      const session = await Session_js_1.Session.from(opts.connection, {\n        firstMatch: opts.capabilities?.firstMatch,\n        alwaysMatch: {\n          ...opts.capabilities?.alwaysMatch,\n          // Capabilities that come from Puppeteer's API take precedence.\n          acceptInsecureCerts: opts.acceptInsecureCerts,\n          unhandledPromptBehavior: {\n            default: \"ignore\" /* Bidi.Session.UserPromptHandlerType.Ignore */\n          },\n          webSocketUrl: true\n        }\n      });\n      await session.subscribe(session.capabilities.browserName.toLocaleLowerCase().includes('firefox') ? BidiBrowser.subscribeModules : [...BidiBrowser.subscribeModules, ...BidiBrowser.subscribeCdpEvents]);\n      const browser = new BidiBrowser(session.browser, opts);\n      browser.#initialize();\n      return browser;\n    }\n    #trustedEmitter_accessor_storage = __runInitializers(this, _private_trustedEmitter_initializers, new EventEmitter_js_1.EventEmitter());\n    get #trustedEmitter() {\n      return _private_trustedEmitter_descriptor.get.call(this);\n    }\n    set #trustedEmitter(value) {\n      return _private_trustedEmitter_descriptor.set.call(this, value);\n    }\n    #process = __runInitializers(this, _private_trustedEmitter_extraInitializers);\n    #closeCallback;\n    #browserCore;\n    #defaultViewport;\n    #browserContexts = new WeakMap();\n    #target = new Target_js_1.BidiBrowserTarget(this);\n    #cdpConnection;\n    constructor(browserCore, opts) {\n      super();\n      this.#process = opts.process;\n      this.#closeCallback = opts.closeCallback;\n      this.#browserCore = browserCore;\n      this.#defaultViewport = opts.defaultViewport;\n      this.#cdpConnection = opts.cdpConnection;\n    }\n    #initialize() {\n      // Initializing existing contexts.\n      for (const userContext of this.#browserCore.userContexts) {\n        this.#createBrowserContext(userContext);\n      }\n      this.#browserCore.once('disconnected', () => {\n        this.#trustedEmitter.emit(\"disconnected\" /* BrowserEvent.Disconnected */, undefined);\n        this.#trustedEmitter.removeAllListeners();\n      });\n      this.#process?.once('close', () => {\n        this.#browserCore.dispose('Browser process exited.', true);\n        this.connection.dispose();\n      });\n    }\n    get #browserName() {\n      return this.#browserCore.session.capabilities.browserName;\n    }\n    get #browserVersion() {\n      return this.#browserCore.session.capabilities.browserVersion;\n    }\n    get cdpSupported() {\n      return this.#cdpConnection !== undefined;\n    }\n    get cdpConnection() {\n      return this.#cdpConnection;\n    }\n    async userAgent() {\n      return this.#browserCore.session.capabilities.userAgent;\n    }\n    #createBrowserContext(userContext) {\n      const browserContext = BrowserContext_js_1.BidiBrowserContext.from(this, userContext, {\n        defaultViewport: this.#defaultViewport\n      });\n      this.#browserContexts.set(userContext, browserContext);\n      browserContext.trustedEmitter.on(\"targetcreated\" /* BrowserContextEvent.TargetCreated */, target => {\n        this.#trustedEmitter.emit(\"targetcreated\" /* BrowserEvent.TargetCreated */, target);\n      });\n      browserContext.trustedEmitter.on(\"targetchanged\" /* BrowserContextEvent.TargetChanged */, target => {\n        this.#trustedEmitter.emit(\"targetchanged\" /* BrowserEvent.TargetChanged */, target);\n      });\n      browserContext.trustedEmitter.on(\"targetdestroyed\" /* BrowserContextEvent.TargetDestroyed */, target => {\n        this.#trustedEmitter.emit(\"targetdestroyed\" /* BrowserEvent.TargetDestroyed */, target);\n      });\n      return browserContext;\n    }\n    get connection() {\n      // SAFETY: We only have one implementation.\n      return this.#browserCore.session.connection;\n    }\n    wsEndpoint() {\n      return this.connection.url;\n    }\n    async close() {\n      if (this.connection.closed) {\n        return;\n      }\n      try {\n        await this.#browserCore.close();\n        await this.#closeCallback?.call(null);\n      } catch (error) {\n        // Fail silently.\n        (0, util_js_1.debugError)(error);\n      } finally {\n        this.connection.dispose();\n      }\n    }\n    get connected() {\n      return !this.#browserCore.disconnected;\n    }\n    process() {\n      return this.#process ?? null;\n    }\n    async createBrowserContext(_options) {\n      const userContext = await this.#browserCore.createUserContext();\n      return this.#createBrowserContext(userContext);\n    }\n    async version() {\n      return `${this.#browserName}/${this.#browserVersion}`;\n    }\n    browserContexts() {\n      return [...this.#browserCore.userContexts].map(context => {\n        return this.#browserContexts.get(context);\n      });\n    }\n    defaultBrowserContext() {\n      return this.#browserContexts.get(this.#browserCore.defaultUserContext);\n    }\n    newPage() {\n      return this.defaultBrowserContext().newPage();\n    }\n    targets() {\n      return [this.#target, ...this.browserContexts().flatMap(context => {\n        return context.targets();\n      })];\n    }\n    target() {\n      return this.#target;\n    }\n    async disconnect() {\n      try {\n        await this.#browserCore.session.end();\n      } catch (error) {\n        // Fail silently.\n        (0, util_js_1.debugError)(error);\n      } finally {\n        this.connection.dispose();\n      }\n    }\n    get debugInfo() {\n      return {\n        pendingProtocolErrors: this.connection.getPendingProtocolErrors()\n      };\n    }\n  };\n})();\nexports.BidiBrowser = BidiBrowser;","map":{"version":3,"names":["Browser_js_1","require","EventEmitter_js_1","util_js_1","decorators_js_1","BrowserContext_js_1","Session_js_1","Target_js_1","BidiBrowser","Browser","_classSuper","bubble","__esDecorate","_private_trustedEmitter_descriptor","get","__setFunctionName","trustedEmitter_accessor_storage","set","value","_private_trustedEmitter_decorators","kind","name","static","private","access","has","obj","trustedEmitter","metadata","_metadata","_private_trustedEmitter_initializers","_private_trustedEmitter_extraInitializers","protocol","subscribeModules","subscribeCdpEvents","create","opts","session","Session","from","connection","firstMatch","capabilities","alwaysMatch","acceptInsecureCerts","unhandledPromptBehavior","default","webSocketUrl","subscribe","browserName","toLocaleLowerCase","includes","browser","initialize","__runInitializers","EventEmitter","#trustedEmitter","call","process","closeCallback","browserCore","defaultViewport","browserContexts","WeakMap","target","BidiBrowserTarget","cdpConnection","constructor","#initialize","userContext","userContexts","createBrowserContext","once","emit","undefined","removeAllListeners","dispose","#browserName","browserVersion","#browserVersion","cdpSupported","userAgent","#createBrowserContext","browserContext","BidiBrowserContext","on","wsEndpoint","url","close","closed","error","debugError","connected","disconnected","_options","createUserContext","version","map","context","defaultBrowserContext","defaultUserContext","newPage","targets","flatMap","disconnect","end","debugInfo","pendingProtocolErrors","getPendingProtocolErrors","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/Browser.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ChildProcess} from 'child_process';\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport type {BrowserEvents} from '../api/Browser.js';\nimport {\n  Browser,\n  BrowserEvent,\n  type BrowserCloseCallback,\n  type BrowserContextOptions,\n  type DebugInfo,\n} from '../api/Browser.js';\nimport {BrowserContextEvent} from '../api/BrowserContext.js';\nimport type {Page} from '../api/Page.js';\nimport type {Target} from '../api/Target.js';\nimport type {Connection as CdpConnection} from '../cdp/Connection.js';\nimport type {SupportedWebDriverCapabilities} from '../common/ConnectOptions.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {debugError} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\nimport {bubble} from '../util/decorators.js';\n\nimport {BidiBrowserContext} from './BrowserContext.js';\nimport type {BidiConnection} from './Connection.js';\nimport type {Browser as BrowserCore} from './core/Browser.js';\nimport {Session} from './core/Session.js';\nimport type {UserContext} from './core/UserContext.js';\nimport {BidiBrowserTarget} from './Target.js';\n\n/**\n * @internal\n */\nexport interface BidiBrowserOptions {\n  process?: ChildProcess;\n  closeCallback?: BrowserCloseCallback;\n  connection: BidiConnection;\n  cdpConnection?: CdpConnection;\n  defaultViewport: Viewport | null;\n  acceptInsecureCerts?: boolean;\n  capabilities?: SupportedWebDriverCapabilities;\n}\n\n/**\n * @internal\n */\nexport class BidiBrowser extends Browser {\n  readonly protocol = 'webDriverBiDi';\n\n  static readonly subscribeModules: [string, ...string[]] = [\n    'browsingContext',\n    'network',\n    'log',\n    'script',\n  ];\n  static readonly subscribeCdpEvents: Bidi.Cdp.EventNames[] = [\n    // Coverage\n    'cdp.Debugger.scriptParsed',\n    'cdp.CSS.styleSheetAdded',\n    'cdp.Runtime.executionContextsCleared',\n    // Tracing\n    'cdp.Tracing.tracingComplete',\n    // TODO: subscribe to all CDP events in the future.\n    'cdp.Network.requestWillBeSent',\n    'cdp.Debugger.scriptParsed',\n    'cdp.Page.screencastFrame',\n  ];\n\n  static async create(opts: BidiBrowserOptions): Promise<BidiBrowser> {\n    const session = await Session.from(opts.connection, {\n      firstMatch: opts.capabilities?.firstMatch,\n      alwaysMatch: {\n        ...opts.capabilities?.alwaysMatch,\n        // Capabilities that come from Puppeteer's API take precedence.\n        acceptInsecureCerts: opts.acceptInsecureCerts,\n        unhandledPromptBehavior: {\n          default: Bidi.Session.UserPromptHandlerType.Ignore,\n        },\n        webSocketUrl: true,\n      },\n    });\n\n    await session.subscribe(\n      session.capabilities.browserName.toLocaleLowerCase().includes('firefox')\n        ? BidiBrowser.subscribeModules\n        : [...BidiBrowser.subscribeModules, ...BidiBrowser.subscribeCdpEvents]\n    );\n\n    const browser = new BidiBrowser(session.browser, opts);\n    browser.#initialize();\n    return browser;\n  }\n\n  @bubble()\n  accessor #trustedEmitter = new EventEmitter<BrowserEvents>();\n\n  #process?: ChildProcess;\n  #closeCallback?: BrowserCloseCallback;\n  #browserCore: BrowserCore;\n  #defaultViewport: Viewport | null;\n  #browserContexts = new WeakMap<UserContext, BidiBrowserContext>();\n  #target = new BidiBrowserTarget(this);\n  #cdpConnection?: CdpConnection;\n\n  private constructor(browserCore: BrowserCore, opts: BidiBrowserOptions) {\n    super();\n    this.#process = opts.process;\n    this.#closeCallback = opts.closeCallback;\n    this.#browserCore = browserCore;\n    this.#defaultViewport = opts.defaultViewport;\n    this.#cdpConnection = opts.cdpConnection;\n  }\n\n  #initialize() {\n    // Initializing existing contexts.\n    for (const userContext of this.#browserCore.userContexts) {\n      this.#createBrowserContext(userContext);\n    }\n\n    this.#browserCore.once('disconnected', () => {\n      this.#trustedEmitter.emit(BrowserEvent.Disconnected, undefined);\n      this.#trustedEmitter.removeAllListeners();\n    });\n    this.#process?.once('close', () => {\n      this.#browserCore.dispose('Browser process exited.', true);\n      this.connection.dispose();\n    });\n  }\n\n  get #browserName() {\n    return this.#browserCore.session.capabilities.browserName;\n  }\n  get #browserVersion() {\n    return this.#browserCore.session.capabilities.browserVersion;\n  }\n\n  get cdpSupported(): boolean {\n    return this.#cdpConnection !== undefined;\n  }\n\n  get cdpConnection(): CdpConnection | undefined {\n    return this.#cdpConnection;\n  }\n\n  override async userAgent(): Promise<string> {\n    return this.#browserCore.session.capabilities.userAgent;\n  }\n\n  #createBrowserContext(userContext: UserContext) {\n    const browserContext = BidiBrowserContext.from(this, userContext, {\n      defaultViewport: this.#defaultViewport,\n    });\n    this.#browserContexts.set(userContext, browserContext);\n\n    browserContext.trustedEmitter.on(\n      BrowserContextEvent.TargetCreated,\n      target => {\n        this.#trustedEmitter.emit(BrowserEvent.TargetCreated, target);\n      }\n    );\n    browserContext.trustedEmitter.on(\n      BrowserContextEvent.TargetChanged,\n      target => {\n        this.#trustedEmitter.emit(BrowserEvent.TargetChanged, target);\n      }\n    );\n    browserContext.trustedEmitter.on(\n      BrowserContextEvent.TargetDestroyed,\n      target => {\n        this.#trustedEmitter.emit(BrowserEvent.TargetDestroyed, target);\n      }\n    );\n\n    return browserContext;\n  }\n\n  get connection(): BidiConnection {\n    // SAFETY: We only have one implementation.\n    return this.#browserCore.session.connection as BidiConnection;\n  }\n\n  override wsEndpoint(): string {\n    return this.connection.url;\n  }\n\n  override async close(): Promise<void> {\n    if (this.connection.closed) {\n      return;\n    }\n\n    try {\n      await this.#browserCore.close();\n      await this.#closeCallback?.call(null);\n    } catch (error) {\n      // Fail silently.\n      debugError(error);\n    } finally {\n      this.connection.dispose();\n    }\n  }\n\n  override get connected(): boolean {\n    return !this.#browserCore.disconnected;\n  }\n\n  override process(): ChildProcess | null {\n    return this.#process ?? null;\n  }\n\n  override async createBrowserContext(\n    _options?: BrowserContextOptions\n  ): Promise<BidiBrowserContext> {\n    const userContext = await this.#browserCore.createUserContext();\n    return this.#createBrowserContext(userContext);\n  }\n\n  override async version(): Promise<string> {\n    return `${this.#browserName}/${this.#browserVersion}`;\n  }\n\n  override browserContexts(): BidiBrowserContext[] {\n    return [...this.#browserCore.userContexts].map(context => {\n      return this.#browserContexts.get(context)!;\n    });\n  }\n\n  override defaultBrowserContext(): BidiBrowserContext {\n    return this.#browserContexts.get(this.#browserCore.defaultUserContext)!;\n  }\n\n  override newPage(): Promise<Page> {\n    return this.defaultBrowserContext().newPage();\n  }\n\n  override targets(): Target[] {\n    return [\n      this.#target,\n      ...this.browserContexts().flatMap(context => {\n        return context.targets();\n      }),\n    ];\n  }\n\n  override target(): BidiBrowserTarget {\n    return this.#target;\n  }\n\n  override async disconnect(): Promise<void> {\n    try {\n      await this.#browserCore.session.end();\n    } catch (error) {\n      // Fail silently.\n      debugError(error);\n    } finally {\n      this.connection.dispose();\n    }\n  }\n\n  override get debugInfo(): DebugInfo {\n    return {\n      pendingProtocolErrors: this.connection.getPendingProtocolErrors(),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}