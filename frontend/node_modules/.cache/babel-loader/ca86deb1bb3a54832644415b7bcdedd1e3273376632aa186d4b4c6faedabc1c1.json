{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserPrompt = void 0;\nconst EventEmitter_js_1 = require(\"../../common/EventEmitter.js\");\nconst decorators_js_1 = require(\"../../util/decorators.js\");\nconst disposable_js_1 = require(\"../../util/disposable.js\");\n/**\n * @internal\n */\nlet UserPrompt = (() => {\n  let _classSuper = EventEmitter_js_1.EventEmitter;\n  let _instanceExtraInitializers = [];\n  let _dispose_decorators;\n  let _handle_decorators;\n  return class UserPrompt extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      __esDecorate(this, null, _dispose_decorators, {\n        kind: \"method\",\n        name: \"dispose\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"dispose\" in obj,\n          get: obj => obj.dispose\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _handle_decorators, {\n        kind: \"method\",\n        name: \"handle\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"handle\" in obj,\n          get: obj => obj.handle\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    static from(browsingContext, info) {\n      const userPrompt = new UserPrompt(browsingContext, info);\n      userPrompt.#initialize();\n      return userPrompt;\n    }\n    #reason = __runInitializers(this, _instanceExtraInitializers);\n    #result;\n    #disposables = new disposable_js_1.DisposableStack();\n    browsingContext;\n    info;\n    constructor(context, info) {\n      super();\n      this.browsingContext = context;\n      this.info = info;\n    }\n    #initialize() {\n      const browserContextEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.browsingContext));\n      browserContextEmitter.once('closed', ({\n        reason\n      }) => {\n        this.dispose(`User prompt already closed: ${reason}`);\n      });\n      const sessionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(this.#session));\n      sessionEmitter.on('browsingContext.userPromptClosed', parameters => {\n        if (parameters.context !== this.browsingContext.id) {\n          return;\n        }\n        this.#result = parameters;\n        this.emit('handled', parameters);\n        this.dispose('User prompt already handled.');\n      });\n    }\n    get #session() {\n      return this.browsingContext.userContext.browser.session;\n    }\n    get closed() {\n      return this.#reason !== undefined;\n    }\n    get disposed() {\n      return this.closed;\n    }\n    get handled() {\n      if (this.info.handler === \"accept\" /* Bidi.Session.UserPromptHandlerType.Accept */ || this.info.handler === \"dismiss\" /* Bidi.Session.UserPromptHandlerType.Dismiss */) {\n        return true;\n      }\n      return this.#result !== undefined;\n    }\n    get result() {\n      return this.#result;\n    }\n    dispose(reason) {\n      this.#reason = reason;\n      this[disposable_js_1.disposeSymbol]();\n    }\n    async handle(options = {}) {\n      await this.#session.send('browsingContext.handleUserPrompt', {\n        ...options,\n        context: this.info.context\n      });\n      // SAFETY: `handled` is triggered before the above promise resolved.\n      return this.#result;\n    }\n    [(_dispose_decorators = [decorators_js_1.inertIfDisposed], _handle_decorators = [(0, decorators_js_1.throwIfDisposed)(prompt => {\n      // SAFETY: Disposal implies this exists.\n      return prompt.#reason;\n    })], disposable_js_1.disposeSymbol)]() {\n      this.#reason ??= 'User prompt already closed, probably because the associated browsing context was destroyed.';\n      this.emit('closed', {\n        reason: this.#reason\n      });\n      this.#disposables.dispose();\n      super[disposable_js_1.disposeSymbol]();\n    }\n  };\n})();\nexports.UserPrompt = UserPrompt;","map":{"version":3,"names":["EventEmitter_js_1","require","decorators_js_1","disposable_js_1","UserPrompt","EventEmitter","_classSuper","__esDecorate","_dispose_decorators","kind","name","static","private","access","has","obj","get","dispose","metadata","_metadata","_instanceExtraInitializers","_handle_decorators","handle","from","browsingContext","info","userPrompt","initialize","reason","__runInitializers","result","disposables","DisposableStack","constructor","context","#initialize","browserContextEmitter","use","once","sessionEmitter","session","on","parameters","id","emit","#session","userContext","browser","closed","undefined","disposed","handled","handler","disposeSymbol","options","send","inertIfDisposed","throwIfDisposed","prompt","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/core/UserPrompt.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {EventEmitter} from '../../common/EventEmitter.js';\nimport {inertIfDisposed, throwIfDisposed} from '../../util/decorators.js';\nimport {DisposableStack, disposeSymbol} from '../../util/disposable.js';\n\nimport type {BrowsingContext} from './BrowsingContext.js';\n\n/**\n * @internal\n */\nexport type HandleOptions = Omit<\n  Bidi.BrowsingContext.HandleUserPromptParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport type UserPromptResult = Omit<\n  Bidi.BrowsingContext.UserPromptClosedParameters,\n  'context'\n>;\n\n/**\n * @internal\n */\nexport class UserPrompt extends EventEmitter<{\n  /** Emitted when the user prompt is handled. */\n  handled: UserPromptResult;\n  /** Emitted when the user prompt is closed. */\n  closed: {\n    /** The reason the user prompt was closed. */\n    reason: string;\n  };\n}> {\n  static from(\n    browsingContext: BrowsingContext,\n    info: Bidi.BrowsingContext.UserPromptOpenedParameters\n  ): UserPrompt {\n    const userPrompt = new UserPrompt(browsingContext, info);\n    userPrompt.#initialize();\n    return userPrompt;\n  }\n\n  #reason?: string;\n  #result?: UserPromptResult;\n  readonly #disposables = new DisposableStack();\n  readonly browsingContext: BrowsingContext;\n  readonly info: Bidi.BrowsingContext.UserPromptOpenedParameters;\n\n  private constructor(\n    context: BrowsingContext,\n    info: Bidi.BrowsingContext.UserPromptOpenedParameters\n  ) {\n    super();\n\n    this.browsingContext = context;\n    this.info = info;\n  }\n\n  #initialize() {\n    const browserContextEmitter = this.#disposables.use(\n      new EventEmitter(this.browsingContext)\n    );\n    browserContextEmitter.once('closed', ({reason}) => {\n      this.dispose(`User prompt already closed: ${reason}`);\n    });\n\n    const sessionEmitter = this.#disposables.use(\n      new EventEmitter(this.#session)\n    );\n    sessionEmitter.on('browsingContext.userPromptClosed', parameters => {\n      if (parameters.context !== this.browsingContext.id) {\n        return;\n      }\n      this.#result = parameters;\n      this.emit('handled', parameters);\n      this.dispose('User prompt already handled.');\n    });\n  }\n\n  get #session() {\n    return this.browsingContext.userContext.browser.session;\n  }\n  get closed(): boolean {\n    return this.#reason !== undefined;\n  }\n  get disposed(): boolean {\n    return this.closed;\n  }\n  get handled(): boolean {\n    if (\n      this.info.handler === Bidi.Session.UserPromptHandlerType.Accept ||\n      this.info.handler === Bidi.Session.UserPromptHandlerType.Dismiss\n    ) {\n      return true;\n    }\n    return this.#result !== undefined;\n  }\n  get result(): UserPromptResult | undefined {\n    return this.#result;\n  }\n\n  @inertIfDisposed\n  private dispose(reason?: string): void {\n    this.#reason = reason;\n    this[disposeSymbol]();\n  }\n\n  @throwIfDisposed<UserPrompt>(prompt => {\n    // SAFETY: Disposal implies this exists.\n    return prompt.#reason!;\n  })\n  async handle(options: HandleOptions = {}): Promise<UserPromptResult> {\n    await this.#session.send('browsingContext.handleUserPrompt', {\n      ...options,\n      context: this.info.context,\n    });\n    // SAFETY: `handled` is triggered before the above promise resolved.\n    return this.#result!;\n  }\n\n  [disposeSymbol](): void {\n    this.#reason ??=\n      'User prompt already closed, probably because the associated browsing context was destroyed.';\n    this.emit('closed', {reason: this.#reason});\n\n    this.#disposables.dispose();\n    super[disposeSymbol]();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}