{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Dispatches Network domain commands. */\nclass NetworkProcessor {\n  #browsingContextStorage;\n  #networkStorage;\n  constructor(browsingContextStorage, networkStorage) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#networkStorage = networkStorage;\n  }\n  async addIntercept(params) {\n    this.#browsingContextStorage.verifyTopLevelContextsList(params.contexts);\n    const urlPatterns = params.urlPatterns ?? [];\n    const parsedUrlPatterns = NetworkProcessor.parseUrlPatterns(urlPatterns);\n    const intercept = this.#networkStorage.addIntercept({\n      urlPatterns: parsedUrlPatterns,\n      phases: params.phases,\n      contexts: params.contexts\n    });\n    await Promise.all(this.#browsingContextStorage.getAllContexts().map(context => {\n      return context.cdpTarget.toggleFetchIfNeeded();\n    }));\n    return {\n      intercept\n    };\n  }\n  async continueRequest(params) {\n    if (params.url !== undefined) {\n      NetworkProcessor.parseUrlString(params.url);\n    }\n    if (params.method !== undefined) {\n      if (!NetworkProcessor.isMethodValid(params.method)) {\n        throw new protocol_js_1.InvalidArgumentException(`Method '${params.method}' is invalid.`);\n      }\n    }\n    if (params.headers) {\n      NetworkProcessor.validateHeaders(params.headers);\n    }\n    const request = this.#getBlockedRequestOrFail(params.request, [\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */]);\n    try {\n      await request.continueRequest(params);\n    } catch (error) {\n      throw NetworkProcessor.wrapInterceptionError(error);\n    }\n    return {};\n  }\n  async continueResponse(params) {\n    if (params.headers) {\n      NetworkProcessor.validateHeaders(params.headers);\n    }\n    const request = this.#getBlockedRequestOrFail(params.request, [\"authRequired\" /* Network.InterceptPhase.AuthRequired */, \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */]);\n    try {\n      await request.continueResponse(params);\n    } catch (error) {\n      throw NetworkProcessor.wrapInterceptionError(error);\n    }\n    return {};\n  }\n  async continueWithAuth(params) {\n    const networkId = params.request;\n    const request = this.#getBlockedRequestOrFail(networkId, [\"authRequired\" /* Network.InterceptPhase.AuthRequired */]);\n    await request.continueWithAuth(params);\n    return {};\n  }\n  async failRequest({\n    request: networkId\n  }) {\n    const request = this.#getRequestOrFail(networkId);\n    if (request.interceptPhase === \"authRequired\" /* Network.InterceptPhase.AuthRequired */) {\n      throw new protocol_js_1.InvalidArgumentException(`Request '${networkId}' in 'authRequired' phase cannot be failed`);\n    }\n    if (!request.interceptPhase) {\n      throw new protocol_js_1.NoSuchRequestException(`No blocked request found for network id '${networkId}'`);\n    }\n    await request.failRequest('Failed');\n    return {};\n  }\n  async provideResponse(params) {\n    if (params.headers) {\n      NetworkProcessor.validateHeaders(params.headers);\n    }\n    const request = this.#getBlockedRequestOrFail(params.request, [\"beforeRequestSent\" /* Network.InterceptPhase.BeforeRequestSent */, \"responseStarted\" /* Network.InterceptPhase.ResponseStarted */, \"authRequired\" /* Network.InterceptPhase.AuthRequired */]);\n    try {\n      await request.provideResponse(params);\n    } catch (error) {\n      throw NetworkProcessor.wrapInterceptionError(error);\n    }\n    return {};\n  }\n  async removeIntercept(params) {\n    this.#networkStorage.removeIntercept(params.intercept);\n    await Promise.all(this.#browsingContextStorage.getAllContexts().map(context => {\n      return context.cdpTarget.toggleFetchIfNeeded();\n    }));\n    return {};\n  }\n  #getRequestOrFail(id) {\n    const request = this.#networkStorage.getRequestById(id);\n    if (!request) {\n      throw new protocol_js_1.NoSuchRequestException(`Network request with ID '${id}' doesn't exist`);\n    }\n    return request;\n  }\n  #getBlockedRequestOrFail(id, phases) {\n    const request = this.#getRequestOrFail(id);\n    if (!request.interceptPhase) {\n      throw new protocol_js_1.NoSuchRequestException(`No blocked request found for network id '${id}'`);\n    }\n    if (request.interceptPhase && !phases.includes(request.interceptPhase)) {\n      throw new protocol_js_1.InvalidArgumentException(`Blocked request for network id '${id}' is in '${request.interceptPhase}' phase`);\n    }\n    return request;\n  }\n  /**\n   * Validate https://fetch.spec.whatwg.org/#header-value\n   */\n  static validateHeaders(headers) {\n    for (const header of headers) {\n      let headerValue;\n      if (header.value.type === 'string') {\n        headerValue = header.value.value;\n      } else {\n        headerValue = atob(header.value.value);\n      }\n      if (headerValue !== headerValue.trim() || headerValue.includes('\\n') || headerValue.includes('\\0')) {\n        throw new protocol_js_1.InvalidArgumentException(`Header value '${headerValue}' is not acceptable value`);\n      }\n    }\n  }\n  static isMethodValid(method) {\n    // https://httpwg.org/specs/rfc9110.html#method.overview\n    return /^[!#$%&'*+\\-.^_`|~a-zA-Z\\d]+$/.test(method);\n  }\n  /**\n   * Attempts to parse the given url.\n   * Throws an InvalidArgumentException if the url is invalid.\n   */\n  static parseUrlString(url) {\n    try {\n      return new URL(url);\n    } catch (error) {\n      throw new protocol_js_1.InvalidArgumentException(`Invalid URL '${url}': ${error}`);\n    }\n  }\n  static parseUrlPatterns(urlPatterns) {\n    return urlPatterns.map(urlPattern => {\n      switch (urlPattern.type) {\n        case 'string':\n          {\n            NetworkProcessor.parseUrlString(urlPattern.pattern);\n            return urlPattern;\n          }\n        case 'pattern':\n          // No params signifies intercept all\n          if (urlPattern.protocol === undefined && urlPattern.hostname === undefined && urlPattern.port === undefined && urlPattern.pathname === undefined && urlPattern.search === undefined) {\n            return urlPattern;\n          }\n          if (urlPattern.protocol) {\n            urlPattern.protocol = unescapeURLPattern(urlPattern.protocol);\n            if (!urlPattern.protocol.match(/^[a-zA-Z+-.]+$/)) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          }\n          if (urlPattern.hostname) {\n            urlPattern.hostname = unescapeURLPattern(urlPattern.hostname);\n          }\n          if (urlPattern.port) {\n            urlPattern.port = unescapeURLPattern(urlPattern.port);\n          }\n          if (urlPattern.pathname) {\n            urlPattern.pathname = unescapeURLPattern(urlPattern.pathname);\n            if (urlPattern.pathname[0] !== '/') {\n              urlPattern.pathname = `/${urlPattern.pathname}`;\n            }\n            if (urlPattern.pathname.includes('#') || urlPattern.pathname.includes('?')) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          } else if (urlPattern.pathname === '') {\n            urlPattern.pathname = '/';\n          }\n          if (urlPattern.search) {\n            urlPattern.search = unescapeURLPattern(urlPattern.search);\n            if (urlPattern.search[0] !== '?') {\n              urlPattern.search = `?${urlPattern.search}`;\n            }\n            if (urlPattern.search.includes('#')) {\n              throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n            }\n          }\n          if (urlPattern.protocol === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a protocol`);\n          }\n          if (urlPattern.hostname === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a hostname`);\n          }\n          if ((urlPattern.hostname?.length ?? 0) > 0) {\n            if (urlPattern.protocol?.match(/^file/i)) {\n              throw new protocol_js_1.InvalidArgumentException(`URL pattern protocol cannot be 'file'`);\n            }\n            if (urlPattern.hostname?.includes(':')) {\n              throw new protocol_js_1.InvalidArgumentException(`URL pattern hostname must not contain a colon`);\n            }\n          }\n          if (urlPattern.port === '') {\n            throw new protocol_js_1.InvalidArgumentException(`URL pattern must specify a port`);\n          }\n          try {\n            new URLPattern(urlPattern);\n          } catch (error) {\n            throw new protocol_js_1.InvalidArgumentException(`${error}`);\n          }\n          return urlPattern;\n      }\n    });\n  }\n  static wrapInterceptionError(error) {\n    // https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/protocol/fetch_handler.cc;l=169\n    if (error?.message.includes('Invalid header')) {\n      return new protocol_js_1.InvalidArgumentException('Invalid header');\n    }\n    return error;\n  }\n}\nexports.NetworkProcessor = NetworkProcessor;\n/**\n * See https://w3c.github.io/webdriver-bidi/#unescape-url-pattern\n */\nfunction unescapeURLPattern(pattern) {\n  const forbidden = new Set(['(', ')', '*', '{', '}']);\n  let result = '';\n  let isEscaped = false;\n  for (const c of pattern) {\n    if (!isEscaped) {\n      if (forbidden.has(c)) {\n        throw new protocol_js_1.InvalidArgumentException('Forbidden characters');\n      }\n      if (c === '\\\\') {\n        isEscaped = true;\n        continue;\n      }\n    }\n    result += c;\n    isEscaped = false;\n  }\n  return result;\n}","map":{"version":3,"names":["protocol_js_1","require","NetworkProcessor","browsingContextStorage","networkStorage","constructor","addIntercept","params","verifyTopLevelContextsList","contexts","urlPatterns","parsedUrlPatterns","parseUrlPatterns","intercept","phases","Promise","all","getAllContexts","map","context","cdpTarget","toggleFetchIfNeeded","continueRequest","url","undefined","parseUrlString","method","isMethodValid","InvalidArgumentException","headers","validateHeaders","request","getBlockedRequestOrFail","error","wrapInterceptionError","continueResponse","continueWithAuth","networkId","failRequest","getRequestOrFail","interceptPhase","NoSuchRequestException","provideResponse","removeIntercept","#getRequestOrFail","id","getRequestById","#getBlockedRequestOrFail","includes","header","headerValue","value","type","atob","trim","test","URL","urlPattern","pattern","protocol","hostname","port","pathname","search","unescapeURLPattern","match","length","URLPattern","message","exports","forbidden","Set","result","isEscaped","c","has"],"sources":["../../../../../src/bidiMapper/modules/network/NetworkProcessor.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,aAAA,GAAAC,OAAA;AAWA;AACA,MAAaC,gBAAgB;EAClB,CAAAC,sBAAuB;EACvB,CAAAC,cAAe;EAExBC,YACEF,sBAA8C,EAC9CC,cAA8B;IAE9B,IAAI,CAAC,CAAAD,sBAAuB,GAAGA,sBAAsB;IACrD,IAAI,CAAC,CAAAC,cAAe,GAAGA,cAAc;EACvC;EAEA,MAAME,YAAYA,CAChBC,MAAsC;IAEtC,IAAI,CAAC,CAAAJ,sBAAuB,CAACK,0BAA0B,CAACD,MAAM,CAACE,QAAQ,CAAC;IAExE,MAAMC,WAAW,GAAyBH,MAAM,CAACG,WAAW,IAAI,EAAE;IAClE,MAAMC,iBAAiB,GACrBT,gBAAgB,CAACU,gBAAgB,CAACF,WAAW,CAAC;IAEhD,MAAMG,SAAS,GAAsB,IAAI,CAAC,CAAAT,cAAe,CAACE,YAAY,CAAC;MACrEI,WAAW,EAAEC,iBAAiB;MAC9BG,MAAM,EAAEP,MAAM,CAACO,MAAM;MACrBL,QAAQ,EAAEF,MAAM,CAACE;KAClB,CAAC;IAEF,MAAMM,OAAO,CAACC,GAAG,CACf,IAAI,CAAC,CAAAb,sBAAuB,CAACc,cAAc,EAAE,CAACC,GAAG,CAAEC,OAAO,IAAI;MAC5D,OAAOA,OAAO,CAACC,SAAS,CAACC,mBAAmB,EAAE;IAChD,CAAC,CAAC,CACH;IAED,OAAO;MACLR;KACD;EACH;EAEA,MAAMS,eAAeA,CACnBf,MAAyC;IAEzC,IAAIA,MAAM,CAACgB,GAAG,KAAKC,SAAS,EAAE;MAC5BtB,gBAAgB,CAACuB,cAAc,CAAClB,MAAM,CAACgB,GAAG,CAAC;IAC7C;IAEA,IAAIhB,MAAM,CAACmB,MAAM,KAAKF,SAAS,EAAE;MAC/B,IAAI,CAACtB,gBAAgB,CAACyB,aAAa,CAACpB,MAAM,CAACmB,MAAM,CAAC,EAAE;QAClD,MAAM,IAAI1B,aAAA,CAAA4B,wBAAwB,CAChC,WAAWrB,MAAM,CAACmB,MAAM,eAAe,CACxC;MACH;IACF;IAEA,IAAInB,MAAM,CAACsB,OAAO,EAAE;MAClB3B,gBAAgB,CAAC4B,eAAe,CAACvB,MAAM,CAACsB,OAAO,CAAC;IAClD;IAEA,MAAME,OAAO,GAAG,IAAI,CAAC,CAAAC,uBAAwB,CAACzB,MAAM,CAACwB,OAAO,EAAE,C,mEAE7D,CAAC;IAEF,IAAI;MACF,MAAMA,OAAO,CAACT,eAAe,CAACf,MAAM,CAAC;IACvC,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACd,MAAM/B,gBAAgB,CAACgC,qBAAqB,CAACD,KAAK,CAAC;IACrD;IAEA,OAAO,EAAE;EACX;EAEA,MAAME,gBAAgBA,CACpB5B,MAA0C;IAE1C,IAAIA,MAAM,CAACsB,OAAO,EAAE;MAClB3B,gBAAgB,CAAC4B,eAAe,CAACvB,MAAM,CAACsB,OAAO,CAAC;IAClD;IAEA,MAAME,OAAO,GAAG,IAAI,CAAC,CAAAC,uBAAwB,CAACzB,MAAM,CAACwB,OAAO,EAAE,C,yHAG7D,CAAC;IAEF,IAAI;MACF,MAAMA,OAAO,CAACI,gBAAgB,CAAC5B,MAAM,CAAC;IACxC,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACd,MAAM/B,gBAAgB,CAACgC,qBAAqB,CAACD,KAAK,CAAC;IACrD;IAEA,OAAO,EAAE;EACX;EAEA,MAAMG,gBAAgBA,CACpB7B,MAA0C;IAE1C,MAAM8B,SAAS,GAAG9B,MAAM,CAACwB,OAAO;IAChC,MAAMA,OAAO,GAAG,IAAI,CAAC,CAAAC,uBAAwB,CAACK,SAAS,EAAE,C,yDAExD,CAAC;IAEF,MAAMN,OAAO,CAACK,gBAAgB,CAAC7B,MAAM,CAAC;IAEtC,OAAO,EAAE;EACX;EAEA,MAAM+B,WAAWA,CAAC;IAChBP,OAAO,EAAEM;EAAS,CACY;IAC9B,MAAMN,OAAO,GAAG,IAAI,CAAC,CAAAQ,gBAAiB,CAACF,SAAS,CAAC;IACjD,IAAIN,OAAO,CAACS,cAAc,+DAA0C;MAClE,MAAM,IAAIxC,aAAA,CAAA4B,wBAAwB,CAChC,YAAYS,SAAS,4CAA4C,CAClE;IACH;IACA,IAAI,CAACN,OAAO,CAACS,cAAc,EAAE;MAC3B,MAAM,IAAIxC,aAAA,CAAAyC,sBAAsB,CAC9B,4CAA4CJ,SAAS,GAAG,CACzD;IACH;IAEA,MAAMN,OAAO,CAACO,WAAW,CAAC,QAAQ,CAAC;IAEnC,OAAO,EAAE;EACX;EAEA,MAAMI,eAAeA,CACnBnC,MAAyC;IAEzC,IAAIA,MAAM,CAACsB,OAAO,EAAE;MAClB3B,gBAAgB,CAAC4B,eAAe,CAACvB,MAAM,CAACsB,OAAO,CAAC;IAClD;IAEA,MAAME,OAAO,GAAG,IAAI,CAAC,CAAAC,uBAAwB,CAACzB,MAAM,CAACwB,OAAO,EAAE,C,6LAI7D,CAAC;IAEF,IAAI;MACF,MAAMA,OAAO,CAACW,eAAe,CAACnC,MAAM,CAAC;IACvC,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACd,MAAM/B,gBAAgB,CAACgC,qBAAqB,CAACD,KAAK,CAAC;IACrD;IAEA,OAAO,EAAE;EACX;EAEA,MAAMU,eAAeA,CACnBpC,MAAyC;IAEzC,IAAI,CAAC,CAAAH,cAAe,CAACuC,eAAe,CAACpC,MAAM,CAACM,SAAS,CAAC;IAEtD,MAAME,OAAO,CAACC,GAAG,CACf,IAAI,CAAC,CAAAb,sBAAuB,CAACc,cAAc,EAAE,CAACC,GAAG,CAAEC,OAAO,IAAI;MAC5D,OAAOA,OAAO,CAACC,SAAS,CAACC,mBAAmB,EAAE;IAChD,CAAC,CAAC,CACH;IAED,OAAO,EAAE;EACX;EAEA,CAAAkB,gBAAiBK,CAACC,EAAmB;IACnC,MAAMd,OAAO,GAAG,IAAI,CAAC,CAAA3B,cAAe,CAAC0C,cAAc,CAACD,EAAE,CAAC;IACvD,IAAI,CAACd,OAAO,EAAE;MACZ,MAAM,IAAI/B,aAAA,CAAAyC,sBAAsB,CAC9B,4BAA4BI,EAAE,iBAAiB,CAChD;IACH;IACA,OAAOd,OAAO;EAChB;EAEA,CAAAC,uBAAwBe,CACtBF,EAAmB,EACnB/B,MAAgC;IAEhC,MAAMiB,OAAO,GAAG,IAAI,CAAC,CAAAQ,gBAAiB,CAACM,EAAE,CAAC;IAC1C,IAAI,CAACd,OAAO,CAACS,cAAc,EAAE;MAC3B,MAAM,IAAIxC,aAAA,CAAAyC,sBAAsB,CAC9B,4CAA4CI,EAAE,GAAG,CAClD;IACH;IACA,IAAId,OAAO,CAACS,cAAc,IAAI,CAAC1B,MAAM,CAACkC,QAAQ,CAACjB,OAAO,CAACS,cAAc,CAAC,EAAE;MACtE,MAAM,IAAIxC,aAAA,CAAA4B,wBAAwB,CAChC,mCAAmCiB,EAAE,YAAYd,OAAO,CAACS,cAAc,SAAS,CACjF;IACH;IAEA,OAAOT,OAAO;EAChB;EAEA;;;EAGA,OAAOD,eAAeA,CAACD,OAAyB;IAC9C,KAAK,MAAMoB,MAAM,IAAIpB,OAAO,EAAE;MAC5B,IAAIqB,WAAmB;MACvB,IAAID,MAAM,CAACE,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;QAClCF,WAAW,GAAGD,MAAM,CAACE,KAAK,CAACA,KAAK;MAClC,CAAC,MAAM;QACLD,WAAW,GAAGG,IAAI,CAACJ,MAAM,CAACE,KAAK,CAACA,KAAK,CAAC;MACxC;MAEA,IACED,WAAW,KAAKA,WAAW,CAACI,IAAI,EAAE,IAClCJ,WAAW,CAACF,QAAQ,CAAC,IAAI,CAAC,IAC1BE,WAAW,CAACF,QAAQ,CAAC,IAAI,CAAC,EAC1B;QACA,MAAM,IAAIhD,aAAA,CAAA4B,wBAAwB,CAChC,iBAAiBsB,WAAW,2BAA2B,CACxD;MACH;IACF;EACF;EAEA,OAAOvB,aAAaA,CAACD,MAAc;IACjC;IACA,OAAO,+BAA+B,CAAC6B,IAAI,CAAC7B,MAAM,CAAC;EACrD;EAEA;;;;EAIA,OAAOD,cAAcA,CAACF,GAAW;IAC/B,IAAI;MACF,OAAO,IAAIiC,GAAG,CAACjC,GAAG,CAAC;IACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd,MAAM,IAAIjC,aAAA,CAAA4B,wBAAwB,CAAC,gBAAgBL,GAAG,MAAMU,KAAK,EAAE,CAAC;IACtE;EACF;EAEA,OAAOrB,gBAAgBA,CACrBF,WAAiC;IAEjC,OAAOA,WAAW,CAACQ,GAAG,CAAEuC,UAAU,IAAI;MACpC,QAAQA,UAAU,CAACL,IAAI;QACrB,KAAK,QAAQ;UAAE;YACblD,gBAAgB,CAACuB,cAAc,CAACgC,UAAU,CAACC,OAAO,CAAC;YACnD,OAAOD,UAAU;UACnB;QACA,KAAK,SAAS;UACZ;UACA,IACEA,UAAU,CAACE,QAAQ,KAAKnC,SAAS,IACjCiC,UAAU,CAACG,QAAQ,KAAKpC,SAAS,IACjCiC,UAAU,CAACI,IAAI,KAAKrC,SAAS,IAC7BiC,UAAU,CAACK,QAAQ,KAAKtC,SAAS,IACjCiC,UAAU,CAACM,MAAM,KAAKvC,SAAS,EAC/B;YACA,OAAOiC,UAAU;UACnB;UAEA,IAAIA,UAAU,CAACE,QAAQ,EAAE;YACvBF,UAAU,CAACE,QAAQ,GAAGK,kBAAkB,CAACP,UAAU,CAACE,QAAQ,CAAC;YAC7D,IAAI,CAACF,UAAU,CAACE,QAAQ,CAACM,KAAK,CAAC,gBAAgB,CAAC,EAAE;cAChD,MAAM,IAAIjE,aAAA,CAAA4B,wBAAwB,CAAC,sBAAsB,CAAC;YAC5D;UACF;UACA,IAAI6B,UAAU,CAACG,QAAQ,EAAE;YACvBH,UAAU,CAACG,QAAQ,GAAGI,kBAAkB,CAACP,UAAU,CAACG,QAAQ,CAAC;UAC/D;UACA,IAAIH,UAAU,CAACI,IAAI,EAAE;YACnBJ,UAAU,CAACI,IAAI,GAAGG,kBAAkB,CAACP,UAAU,CAACI,IAAI,CAAC;UACvD;UACA,IAAIJ,UAAU,CAACK,QAAQ,EAAE;YACvBL,UAAU,CAACK,QAAQ,GAAGE,kBAAkB,CAACP,UAAU,CAACK,QAAQ,CAAC;YAC7D,IAAIL,UAAU,CAACK,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;cAClCL,UAAU,CAACK,QAAQ,GAAG,IAAIL,UAAU,CAACK,QAAQ,EAAE;YACjD;YACA,IACEL,UAAU,CAACK,QAAQ,CAACd,QAAQ,CAAC,GAAG,CAAC,IACjCS,UAAU,CAACK,QAAQ,CAACd,QAAQ,CAAC,GAAG,CAAC,EACjC;cACA,MAAM,IAAIhD,aAAA,CAAA4B,wBAAwB,CAAC,sBAAsB,CAAC;YAC5D;UACF,CAAC,MAAM,IAAI6B,UAAU,CAACK,QAAQ,KAAK,EAAE,EAAE;YACrCL,UAAU,CAACK,QAAQ,GAAG,GAAG;UAC3B;UAEA,IAAIL,UAAU,CAACM,MAAM,EAAE;YACrBN,UAAU,CAACM,MAAM,GAAGC,kBAAkB,CAACP,UAAU,CAACM,MAAM,CAAC;YACzD,IAAIN,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;cAChCN,UAAU,CAACM,MAAM,GAAG,IAAIN,UAAU,CAACM,MAAM,EAAE;YAC7C;YACA,IAAIN,UAAU,CAACM,MAAM,CAACf,QAAQ,CAAC,GAAG,CAAC,EAAE;cACnC,MAAM,IAAIhD,aAAA,CAAA4B,wBAAwB,CAAC,sBAAsB,CAAC;YAC5D;UACF;UAEA,IAAI6B,UAAU,CAACE,QAAQ,KAAK,EAAE,EAAE;YAC9B,MAAM,IAAI3D,aAAA,CAAA4B,wBAAwB,CAChC,qCAAqC,CACtC;UACH;UAEA,IAAI6B,UAAU,CAACG,QAAQ,KAAK,EAAE,EAAE;YAC9B,MAAM,IAAI5D,aAAA,CAAA4B,wBAAwB,CAChC,qCAAqC,CACtC;UACH;UAEA,IAAI,CAAC6B,UAAU,CAACG,QAAQ,EAAEM,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAIT,UAAU,CAACE,QAAQ,EAAEM,KAAK,CAAC,QAAQ,CAAC,EAAE;cACxC,MAAM,IAAIjE,aAAA,CAAA4B,wBAAwB,CAChC,uCAAuC,CACxC;YACH;YAEA,IAAI6B,UAAU,CAACG,QAAQ,EAAEZ,QAAQ,CAAC,GAAG,CAAC,EAAE;cACtC,MAAM,IAAIhD,aAAA,CAAA4B,wBAAwB,CAChC,+CAA+C,CAChD;YACH;UACF;UAEA,IAAI6B,UAAU,CAACI,IAAI,KAAK,EAAE,EAAE;YAC1B,MAAM,IAAI7D,aAAA,CAAA4B,wBAAwB,CAChC,iCAAiC,CAClC;UACH;UAEA,IAAI;YACF,IAAIuC,UAAU,CAACV,UAAU,CAAC;UAC5B,CAAC,CAAC,OAAOxB,KAAK,EAAE;YACd,MAAM,IAAIjC,aAAA,CAAA4B,wBAAwB,CAAC,GAAGK,KAAK,EAAE,CAAC;UAChD;UAEA,OAAOwB,UAAU;MACrB;IACF,CAAC,CAAC;EACJ;EAEA,OAAOvB,qBAAqBA,CAACD,KAAU;IACrC;IACA,IAAIA,KAAK,EAAEmC,OAAO,CAACpB,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MAC7C,OAAO,IAAIhD,aAAA,CAAA4B,wBAAwB,CAAC,gBAAgB,CAAC;IACvD;IACA,OAAOK,KAAK;EACd;;AAjVFoC,OAAA,CAAAnE,gBAAA,GAAAA,gBAAA;AAoVA;;;AAGA,SAAS8D,kBAAkBA,CAACN,OAAe;EACzC,MAAMY,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACpD,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,SAAS,GAAG,KAAK;EACrB,KAAK,MAAMC,CAAC,IAAIhB,OAAO,EAAE;IACvB,IAAI,CAACe,SAAS,EAAE;MACd,IAAIH,SAAS,CAACK,GAAG,CAACD,CAAC,CAAC,EAAE;QACpB,MAAM,IAAI1E,aAAA,CAAA4B,wBAAwB,CAAC,sBAAsB,CAAC;MAC5D;MACA,IAAI8C,CAAC,KAAK,IAAI,EAAE;QACdD,SAAS,GAAG,IAAI;QAChB;MACF;IACF;IACAD,MAAM,IAAIE,CAAC;IACXD,SAAS,GAAG,KAAK;EACnB;EACA,OAAOD,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}