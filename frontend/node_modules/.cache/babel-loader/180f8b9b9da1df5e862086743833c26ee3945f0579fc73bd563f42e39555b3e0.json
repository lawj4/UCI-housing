{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiWebWorker = void 0;\n/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nconst WebWorker_js_1 = require(\"../api/WebWorker.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst Realm_js_1 = require(\"./Realm.js\");\n/**\n * @internal\n */\nclass BidiWebWorker extends WebWorker_js_1.WebWorker {\n  static from(frame, realm) {\n    const worker = new BidiWebWorker(frame, realm);\n    return worker;\n  }\n  #frame;\n  #realm;\n  constructor(frame, realm) {\n    super(realm.origin);\n    this.#frame = frame;\n    this.#realm = Realm_js_1.BidiWorkerRealm.from(realm, this);\n  }\n  get frame() {\n    return this.#frame;\n  }\n  mainRealm() {\n    return this.#realm;\n  }\n  get client() {\n    throw new Errors_js_1.UnsupportedOperation();\n  }\n}\nexports.BidiWebWorker = BidiWebWorker;","map":{"version":3,"names":["WebWorker_js_1","require","Errors_js_1","Realm_js_1","BidiWebWorker","WebWorker","from","frame","realm","worker","constructor","origin","BidiWorkerRealm","mainRealm","client","UnsupportedOperation","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/WebWorker.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2024 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {WebWorker} from '../api/WebWorker.js';\nimport {UnsupportedOperation} from '../common/Errors.js';\nimport type {CDPSession} from '../puppeteer-core.js';\n\nimport type {DedicatedWorkerRealm, SharedWorkerRealm} from './core/Realm.js';\nimport type {BidiFrame} from './Frame.js';\nimport {BidiWorkerRealm} from './Realm.js';\n\n/**\n * @internal\n */\nexport class BidiWebWorker extends WebWorker {\n  static from(\n    frame: BidiFrame,\n    realm: DedicatedWorkerRealm | SharedWorkerRealm\n  ): BidiWebWorker {\n    const worker = new BidiWebWorker(frame, realm);\n    return worker;\n  }\n\n  readonly #frame: BidiFrame;\n  readonly #realm: BidiWorkerRealm;\n  private constructor(\n    frame: BidiFrame,\n    realm: DedicatedWorkerRealm | SharedWorkerRealm\n  ) {\n    super(realm.origin);\n    this.#frame = frame;\n    this.#realm = BidiWorkerRealm.from(realm, this);\n  }\n\n  get frame(): BidiFrame {\n    return this.#frame;\n  }\n\n  mainRealm(): BidiWorkerRealm {\n    return this.#realm;\n  }\n\n  get client(): CDPSession {\n    throw new UnsupportedOperation();\n  }\n}\n"],"mappings":";;;;;;AAAA;;;;;AAKA,MAAAA,cAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AAKA,MAAAE,UAAA,GAAAF,OAAA;AAEA;;;AAGA,MAAaG,aAAc,SAAQJ,cAAA,CAAAK,SAAS;EAC1C,OAAOC,IAAIA,CACTC,KAAgB,EAChBC,KAA+C;IAE/C,MAAMC,MAAM,GAAG,IAAIL,aAAa,CAACG,KAAK,EAAEC,KAAK,CAAC;IAC9C,OAAOC,MAAM;EACf;EAES,CAAAF,KAAM;EACN,CAAAC,KAAM;EACfE,YACEH,KAAgB,EAChBC,KAA+C;IAE/C,KAAK,CAACA,KAAK,CAACG,MAAM,CAAC;IACnB,IAAI,CAAC,CAAAJ,KAAM,GAAGA,KAAK;IACnB,IAAI,CAAC,CAAAC,KAAM,GAAGL,UAAA,CAAAS,eAAe,CAACN,IAAI,CAACE,KAAK,EAAE,IAAI,CAAC;EACjD;EAEA,IAAID,KAAKA,CAAA;IACP,OAAO,IAAI,CAAC,CAAAA,KAAM;EACpB;EAEAM,SAASA,CAAA;IACP,OAAO,IAAI,CAAC,CAAAL,KAAM;EACpB;EAEA,IAAIM,MAAMA,CAAA;IACR,MAAM,IAAIZ,WAAA,CAAAa,oBAAoB,EAAE;EAClC;;AA9BFC,OAAA,CAAAZ,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}