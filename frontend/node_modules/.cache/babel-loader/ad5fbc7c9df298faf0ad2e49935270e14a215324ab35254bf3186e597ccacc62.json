{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExposeableFunction = void 0;\nconst Bidi = __importStar(require(\"chromium-bidi/lib/cjs/protocol/protocol.js\"));\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst Function_js_1 = require(\"../util/Function.js\");\nconst ElementHandle_js_1 = require(\"./ElementHandle.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\n/**\n * @internal\n */\nclass ExposeableFunction {\n  static async from(frame, name, apply, isolate = false) {\n    const func = new ExposeableFunction(frame, name, apply, isolate);\n    await func.#initialize();\n    return func;\n  }\n  #frame;\n  name;\n  #apply;\n  #isolate;\n  #channel;\n  #scripts = [];\n  #disposables = new disposable_js_1.DisposableStack();\n  constructor(frame, name, apply, isolate = false) {\n    this.#frame = frame;\n    this.name = name;\n    this.#apply = apply;\n    this.#isolate = isolate;\n    this.#channel = `__puppeteer__${this.#frame._id}_page_exposeFunction_${this.name}`;\n  }\n  async #initialize() {\n    const connection = this.#connection;\n    const channel = {\n      type: 'channel',\n      value: {\n        channel: this.#channel,\n        ownership: \"root\" /* Bidi.Script.ResultOwnership.Root */\n      }\n    };\n    const connectionEmitter = this.#disposables.use(new EventEmitter_js_1.EventEmitter(connection));\n    connectionEmitter.on(Bidi.ChromiumBidi.Script.EventNames.Message, this.#handleMessage);\n    const functionDeclaration = (0, Function_js_1.stringifyFunction)((0, Function_js_1.interpolateFunction)(callback => {\n      Object.assign(globalThis, {\n        [PLACEHOLDER('name')]: function (...args) {\n          return new Promise((resolve, reject) => {\n            callback([resolve, reject, args]);\n          });\n        }\n      });\n    }, {\n      name: JSON.stringify(this.name)\n    }));\n    const frames = [this.#frame];\n    for (const frame of frames) {\n      frames.push(...frame.childFrames());\n    }\n    await Promise.all(frames.map(async frame => {\n      const realm = this.#isolate ? frame.isolatedRealm() : frame.mainRealm();\n      try {\n        const [script] = await Promise.all([frame.browsingContext.addPreloadScript(functionDeclaration, {\n          arguments: [channel],\n          sandbox: realm.sandbox\n        }), realm.realm.callFunction(functionDeclaration, false, {\n          arguments: [channel]\n        })]);\n        this.#scripts.push([frame, script]);\n      } catch (error) {\n        // If it errors, the frame probably doesn't support call function. We\n        // fail gracefully.\n        (0, util_js_1.debugError)(error);\n      }\n    }));\n  }\n  get #connection() {\n    return this.#frame.page().browser().connection;\n  }\n  #handleMessage = async params => {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      if (params.channel !== this.#channel) {\n        return;\n      }\n      const realm = this.#getRealm(params.source);\n      if (!realm) {\n        // Unrelated message.\n        return;\n      }\n      const dataHandle = __addDisposableResource(env_1, JSHandle_js_1.BidiJSHandle.from(params.data, realm), false);\n      const argsHandle = __addDisposableResource(env_1, await dataHandle.evaluateHandle(([,, args]) => {\n        return args;\n      }), false);\n      const stack = __addDisposableResource(env_1, new disposable_js_1.DisposableStack(), false);\n      const args = [];\n      for (const [index, handle] of await argsHandle.getProperties()) {\n        stack.use(handle);\n        // Element handles are passed as is.\n        if (handle instanceof ElementHandle_js_1.BidiElementHandle) {\n          args[+index] = handle;\n          stack.use(handle);\n          continue;\n        }\n        // Everything else is passed as the JS value.\n        args[+index] = handle.jsonValue();\n      }\n      let result;\n      try {\n        result = await this.#apply(...(await Promise.all(args)));\n      } catch (error) {\n        try {\n          if (error instanceof Error) {\n            await dataHandle.evaluate(([, reject], name, message, stack) => {\n              const error = new Error(message);\n              error.name = name;\n              if (stack) {\n                error.stack = stack;\n              }\n              reject(error);\n            }, error.name, error.message, error.stack);\n          } else {\n            await dataHandle.evaluate(([, reject], error) => {\n              reject(error);\n            }, error);\n          }\n        } catch (error) {\n          (0, util_js_1.debugError)(error);\n        }\n        return;\n      }\n      try {\n        await dataHandle.evaluate(([resolve], result) => {\n          resolve(result);\n        }, result);\n      } catch (error) {\n        (0, util_js_1.debugError)(error);\n      }\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  };\n  #getRealm(source) {\n    const frame = this.#findFrame(source.context);\n    if (!frame) {\n      // Unrelated message.\n      return;\n    }\n    return frame.realm(source.realm);\n  }\n  #findFrame(id) {\n    const frames = [this.#frame];\n    for (const frame of frames) {\n      if (frame._id === id) {\n        return frame;\n      }\n      frames.push(...frame.childFrames());\n    }\n    return;\n  }\n  [Symbol.dispose]() {\n    void this[Symbol.asyncDispose]().catch(util_js_1.debugError);\n  }\n  async [Symbol.asyncDispose]() {\n    this.#disposables.dispose();\n    await Promise.all(this.#scripts.map(async ([frame, script]) => {\n      const realm = this.#isolate ? frame.isolatedRealm() : frame.mainRealm();\n      try {\n        await Promise.all([realm.evaluate(name => {\n          delete globalThis[name];\n        }, this.name), ...frame.childFrames().map(childFrame => {\n          return childFrame.evaluate(name => {\n            delete globalThis[name];\n          }, this.name);\n        }), frame.browsingContext.removePreloadScript(script)]);\n      } catch (error) {\n        (0, util_js_1.debugError)(error);\n      }\n    }));\n  }\n}\nexports.ExposeableFunction = ExposeableFunction;","map":{"version":3,"names":["Bidi","__importStar","require","EventEmitter_js_1","util_js_1","disposable_js_1","Function_js_1","ElementHandle_js_1","JSHandle_js_1","ExposeableFunction","from","frame","name","apply","isolate","func","initialize","channel","scripts","disposables","DisposableStack","constructor","_id","#initialize","connection","type","value","ownership","connectionEmitter","use","EventEmitter","on","ChromiumBidi","Script","EventNames","Message","handleMessage","functionDeclaration","stringifyFunction","interpolateFunction","callback","Object","assign","globalThis","PLACEHOLDER","args","Promise","resolve","reject","JSON","stringify","frames","push","childFrames","all","map","realm","isolatedRealm","mainRealm","script","browsingContext","addPreloadScript","arguments","sandbox","callFunction","error","debugError","#connection","page","browser","params","getRealm","source","dataHandle","__addDisposableResource","env_1","BidiJSHandle","data","argsHandle","evaluateHandle","stack","index","handle","getProperties","BidiElementHandle","jsonValue","result","Error","evaluate","message","#getRealm","findFrame","context","#findFrame","id","Symbol","dispose","asyncDispose","catch","childFrame","removePreloadScript","exports"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/bidi/ExposedFunction.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Bidi from 'chromium-bidi/lib/cjs/protocol/protocol.js';\n\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport type {Awaitable, FlattenHandle} from '../common/types.js';\nimport {debugError} from '../common/util.js';\nimport {DisposableStack} from '../util/disposable.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport type {Connection} from './core/Connection.js';\nimport {BidiElementHandle} from './ElementHandle.js';\nimport type {BidiFrame} from './Frame.js';\nimport {BidiJSHandle} from './JSHandle.js';\n\ntype CallbackChannel<Args, Ret> = (\n  value: [\n    resolve: (ret: FlattenHandle<Awaited<Ret>>) => void,\n    reject: (error: unknown) => void,\n    args: Args,\n  ]\n) => void;\n\n/**\n * @internal\n */\nexport class ExposeableFunction<Args extends unknown[], Ret> {\n  static async from<Args extends unknown[], Ret>(\n    frame: BidiFrame,\n    name: string,\n    apply: (...args: Args) => Awaitable<Ret>,\n    isolate = false\n  ): Promise<ExposeableFunction<Args, Ret>> {\n    const func = new ExposeableFunction(frame, name, apply, isolate);\n    await func.#initialize();\n    return func;\n  }\n\n  readonly #frame;\n\n  readonly name;\n  readonly #apply;\n  readonly #isolate;\n\n  readonly #channel;\n\n  #scripts: Array<[BidiFrame, Bidi.Script.PreloadScript]> = [];\n  #disposables = new DisposableStack();\n\n  constructor(\n    frame: BidiFrame,\n    name: string,\n    apply: (...args: Args) => Awaitable<Ret>,\n    isolate = false\n  ) {\n    this.#frame = frame;\n    this.name = name;\n    this.#apply = apply;\n    this.#isolate = isolate;\n\n    this.#channel = `__puppeteer__${this.#frame._id}_page_exposeFunction_${this.name}`;\n  }\n\n  async #initialize() {\n    const connection = this.#connection;\n    const channel = {\n      type: 'channel' as const,\n      value: {\n        channel: this.#channel,\n        ownership: Bidi.Script.ResultOwnership.Root,\n      },\n    };\n\n    const connectionEmitter = this.#disposables.use(\n      new EventEmitter(connection)\n    );\n    connectionEmitter.on(\n      Bidi.ChromiumBidi.Script.EventNames.Message,\n      this.#handleMessage\n    );\n\n    const functionDeclaration = stringifyFunction(\n      interpolateFunction(\n        (callback: CallbackChannel<Args, Ret>) => {\n          Object.assign(globalThis, {\n            [PLACEHOLDER('name') as string]: function (...args: Args) {\n              return new Promise<FlattenHandle<Awaited<Ret>>>(\n                (resolve, reject) => {\n                  callback([resolve, reject, args]);\n                }\n              );\n            },\n          });\n        },\n        {name: JSON.stringify(this.name)}\n      )\n    );\n\n    const frames = [this.#frame];\n    for (const frame of frames) {\n      frames.push(...frame.childFrames());\n    }\n\n    await Promise.all(\n      frames.map(async frame => {\n        const realm = this.#isolate ? frame.isolatedRealm() : frame.mainRealm();\n        try {\n          const [script] = await Promise.all([\n            frame.browsingContext.addPreloadScript(functionDeclaration, {\n              arguments: [channel],\n              sandbox: realm.sandbox,\n            }),\n            realm.realm.callFunction(functionDeclaration, false, {\n              arguments: [channel],\n            }),\n          ]);\n          this.#scripts.push([frame, script]);\n        } catch (error) {\n          // If it errors, the frame probably doesn't support call function. We\n          // fail gracefully.\n          debugError(error);\n        }\n      })\n    );\n  }\n\n  get #connection(): Connection {\n    return this.#frame.page().browser().connection;\n  }\n\n  #handleMessage = async (params: Bidi.Script.MessageParameters) => {\n    if (params.channel !== this.#channel) {\n      return;\n    }\n    const realm = this.#getRealm(params.source);\n    if (!realm) {\n      // Unrelated message.\n      return;\n    }\n\n    using dataHandle = BidiJSHandle.from<\n      [\n        resolve: (ret: FlattenHandle<Awaited<Ret>>) => void,\n        reject: (error: unknown) => void,\n        args: Args,\n      ]\n    >(params.data, realm);\n\n    using argsHandle = await dataHandle.evaluateHandle(([, , args]) => {\n      return args;\n    });\n\n    using stack = new DisposableStack();\n    const args = [];\n    for (const [index, handle] of await argsHandle.getProperties()) {\n      stack.use(handle);\n\n      // Element handles are passed as is.\n      if (handle instanceof BidiElementHandle) {\n        args[+index] = handle;\n        stack.use(handle);\n        continue;\n      }\n\n      // Everything else is passed as the JS value.\n      args[+index] = handle.jsonValue();\n    }\n\n    let result;\n    try {\n      result = await this.#apply(...((await Promise.all(args)) as Args));\n    } catch (error) {\n      try {\n        if (error instanceof Error) {\n          await dataHandle.evaluate(\n            ([, reject], name, message, stack) => {\n              const error = new Error(message);\n              error.name = name;\n              if (stack) {\n                error.stack = stack;\n              }\n              reject(error);\n            },\n            error.name,\n            error.message,\n            error.stack\n          );\n        } else {\n          await dataHandle.evaluate(([, reject], error) => {\n            reject(error);\n          }, error);\n        }\n      } catch (error) {\n        debugError(error);\n      }\n      return;\n    }\n\n    try {\n      await dataHandle.evaluate(([resolve], result) => {\n        resolve(result);\n      }, result);\n    } catch (error) {\n      debugError(error);\n    }\n  };\n\n  #getRealm(source: Bidi.Script.Source) {\n    const frame = this.#findFrame(source.context as string);\n    if (!frame) {\n      // Unrelated message.\n      return;\n    }\n    return frame.realm(source.realm);\n  }\n\n  #findFrame(id: string) {\n    const frames = [this.#frame];\n    for (const frame of frames) {\n      if (frame._id === id) {\n        return frame;\n      }\n      frames.push(...frame.childFrames());\n    }\n    return;\n  }\n\n  [Symbol.dispose](): void {\n    void this[Symbol.asyncDispose]().catch(debugError);\n  }\n\n  async [Symbol.asyncDispose](): Promise<void> {\n    this.#disposables.dispose();\n    await Promise.all(\n      this.#scripts.map(async ([frame, script]) => {\n        const realm = this.#isolate ? frame.isolatedRealm() : frame.mainRealm();\n        try {\n          await Promise.all([\n            realm.evaluate(name => {\n              delete (globalThis as any)[name];\n            }, this.name),\n            ...frame.childFrames().map(childFrame => {\n              return childFrame.evaluate(name => {\n                delete (globalThis as any)[name];\n              }, this.name);\n            }),\n            frame.browsingContext.removePreloadScript(script),\n          ]);\n        } catch (error) {\n          debugError(error);\n        }\n      })\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}