{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __addDisposableResource = this && this.__addDisposableResource || function (env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({\n      value: value,\n      dispose: dispose,\n      async: async\n    });\n  } else if (async) {\n    env.stack.push({\n      async: true\n    });\n  }\n  return value;\n};\nvar __disposeResources = this && this.__disposeResources || function (SuppressedError) {\n  return function (env) {\n    function fail(e) {\n      env.error = env.hasError ? new SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    function next() {\n      while (env.stack.length) {\n        var rec = env.stack.pop();\n        try {\n          var result = rec.dispose && rec.dispose.call(rec.value);\n          if (rec.async) return Promise.resolve(result).then(next, function (e) {\n            fail(e);\n            return next();\n          });\n        } catch (e) {\n          fail(e);\n        }\n      }\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  };\n}(typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n});\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CdpPage = void 0;\nconst rxjs_js_1 = require(\"../../third_party/rxjs/rxjs.js\");\nconst CDPSession_js_1 = require(\"../api/CDPSession.js\");\nconst Page_js_1 = require(\"../api/Page.js\");\nconst ConsoleMessage_js_1 = require(\"../common/ConsoleMessage.js\");\nconst Errors_js_1 = require(\"../common/Errors.js\");\nconst EventEmitter_js_1 = require(\"../common/EventEmitter.js\");\nconst FileChooser_js_1 = require(\"../common/FileChooser.js\");\nconst NetworkManagerEvents_js_1 = require(\"../common/NetworkManagerEvents.js\");\nconst util_js_1 = require(\"../common/util.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst Deferred_js_1 = require(\"../util/Deferred.js\");\nconst disposable_js_1 = require(\"../util/disposable.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst Binding_js_1 = require(\"./Binding.js\");\nconst CDPSession_js_2 = require(\"./CDPSession.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst Coverage_js_1 = require(\"./Coverage.js\");\nconst Dialog_js_1 = require(\"./Dialog.js\");\nconst EmulationManager_js_1 = require(\"./EmulationManager.js\");\nconst FirefoxTargetManager_js_1 = require(\"./FirefoxTargetManager.js\");\nconst FrameManager_js_1 = require(\"./FrameManager.js\");\nconst FrameManagerEvents_js_1 = require(\"./FrameManagerEvents.js\");\nconst Input_js_1 = require(\"./Input.js\");\nconst IsolatedWorlds_js_1 = require(\"./IsolatedWorlds.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst Tracing_js_1 = require(\"./Tracing.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\nfunction convertConsoleMessageLevel(method) {\n  switch (method) {\n    case 'warning':\n      return 'warn';\n    default:\n      return method;\n  }\n}\n/**\n * @internal\n */\nclass CdpPage extends Page_js_1.Page {\n  static async _create(client, target, defaultViewport) {\n    const page = new CdpPage(client, target);\n    await page.#initialize();\n    if (defaultViewport) {\n      try {\n        await page.setViewport(defaultViewport);\n      } catch (err) {\n        if ((0, ErrorLike_js_1.isErrorLike)(err) && (0, Connection_js_1.isTargetClosedError)(err)) {\n          (0, util_js_1.debugError)(err);\n        } else {\n          throw err;\n        }\n      }\n    }\n    return page;\n  }\n  #closed = false;\n  #targetManager;\n  #primaryTargetClient;\n  #primaryTarget;\n  #tabTargetClient;\n  #tabTarget;\n  #keyboard;\n  #mouse;\n  #touchscreen;\n  #frameManager;\n  #emulationManager;\n  #tracing;\n  #bindings = new Map();\n  #exposedFunctions = new Map();\n  #coverage;\n  #viewport;\n  #workers = new Map();\n  #fileChooserDeferreds = new Set();\n  #sessionCloseDeferred = Deferred_js_1.Deferred.create();\n  #serviceWorkerBypassed = false;\n  #userDragInterceptionEnabled = false;\n  constructor(client, target) {\n    super();\n    this.#primaryTargetClient = client;\n    this.#tabTargetClient = client.parentSession();\n    (0, assert_js_1.assert)(this.#tabTargetClient, 'Tab target session is not defined.');\n    this.#tabTarget = this.#tabTargetClient._target();\n    (0, assert_js_1.assert)(this.#tabTarget, 'Tab target is not defined.');\n    this.#primaryTarget = target;\n    this.#targetManager = target._targetManager();\n    this.#keyboard = new Input_js_1.CdpKeyboard(client);\n    this.#mouse = new Input_js_1.CdpMouse(client, this.#keyboard);\n    this.#touchscreen = new Input_js_1.CdpTouchscreen(client, this.#keyboard);\n    this.#frameManager = new FrameManager_js_1.FrameManager(client, this, this._timeoutSettings);\n    this.#emulationManager = new EmulationManager_js_1.EmulationManager(client);\n    this.#tracing = new Tracing_js_1.Tracing(client);\n    this.#coverage = new Coverage_js_1.Coverage(client);\n    this.#viewport = null;\n    const frameManagerEmitter = new EventEmitter_js_1.EventEmitter(this.#frameManager);\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.FrameAttached, frame => {\n      this.emit(\"frameattached\" /* PageEvent.FrameAttached */, frame);\n    });\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.FrameDetached, frame => {\n      this.emit(\"framedetached\" /* PageEvent.FrameDetached */, frame);\n    });\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.FrameNavigated, frame => {\n      this.emit(\"framenavigated\" /* PageEvent.FrameNavigated */, frame);\n    });\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.ConsoleApiCalled, ([world, event]) => {\n      this.#onConsoleAPI(world, event);\n    });\n    frameManagerEmitter.on(FrameManagerEvents_js_1.FrameManagerEvent.BindingCalled, ([world, event]) => {\n      void this.#onBindingCalled(world, event);\n    });\n    const networkManagerEmitter = new EventEmitter_js_1.EventEmitter(this.#frameManager.networkManager);\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.Request, request => {\n      this.emit(\"request\" /* PageEvent.Request */, request);\n    });\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.RequestServedFromCache, request => {\n      this.emit(\"requestservedfromcache\" /* PageEvent.RequestServedFromCache */, request);\n    });\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.Response, response => {\n      this.emit(\"response\" /* PageEvent.Response */, response);\n    });\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.RequestFailed, request => {\n      this.emit(\"requestfailed\" /* PageEvent.RequestFailed */, request);\n    });\n    networkManagerEmitter.on(NetworkManagerEvents_js_1.NetworkManagerEvent.RequestFinished, request => {\n      this.emit(\"requestfinished\" /* PageEvent.RequestFinished */, request);\n    });\n    this.#tabTargetClient.on(CDPSession_js_1.CDPSessionEvent.Swapped, this.#onActivation.bind(this));\n    this.#tabTargetClient.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onSecondaryTarget.bind(this));\n    this.#targetManager.on(\"targetGone\" /* TargetManagerEvent.TargetGone */, this.#onDetachedFromTarget);\n    this.#tabTarget._isClosedDeferred.valueOrThrow().then(() => {\n      this.#targetManager.off(\"targetGone\" /* TargetManagerEvent.TargetGone */, this.#onDetachedFromTarget);\n      this.emit(\"close\" /* PageEvent.Close */, undefined);\n      this.#closed = true;\n    }).catch(util_js_1.debugError);\n    this.#setupPrimaryTargetListeners();\n    this.#attachExistingTargets();\n  }\n  #attachExistingTargets() {\n    const queue = [];\n    for (const childTarget of this.#targetManager.getChildTargets(this.#primaryTarget)) {\n      queue.push(childTarget);\n    }\n    let idx = 0;\n    while (idx < queue.length) {\n      const next = queue[idx];\n      idx++;\n      const session = next._session();\n      if (session) {\n        this.#onAttachedToTarget(session);\n      }\n      for (const childTarget of this.#targetManager.getChildTargets(next)) {\n        queue.push(childTarget);\n      }\n    }\n  }\n  async #onActivation(newSession) {\n    this.#primaryTargetClient = newSession;\n    (0, assert_js_1.assert)(this.#primaryTargetClient instanceof CDPSession_js_2.CdpCDPSession, 'CDPSession is not instance of CDPSessionImpl');\n    this.#primaryTarget = this.#primaryTargetClient._target();\n    (0, assert_js_1.assert)(this.#primaryTarget, 'Missing target on swap');\n    this.#keyboard.updateClient(newSession);\n    this.#mouse.updateClient(newSession);\n    this.#touchscreen.updateClient(newSession);\n    this.#emulationManager.updateClient(newSession);\n    this.#tracing.updateClient(newSession);\n    this.#coverage.updateClient(newSession);\n    await this.#frameManager.swapFrameTree(newSession);\n    this.#setupPrimaryTargetListeners();\n  }\n  async #onSecondaryTarget(session) {\n    (0, assert_js_1.assert)(session instanceof CDPSession_js_2.CdpCDPSession);\n    if (session._target()._subtype() !== 'prerender') {\n      return;\n    }\n    this.#frameManager.registerSpeculativeSession(session).catch(util_js_1.debugError);\n    this.#emulationManager.registerSpeculativeSession(session).catch(util_js_1.debugError);\n  }\n  /**\n   * Sets up listeners for the primary target. The primary target can change\n   * during a navigation to a prerended page.\n   */\n  #setupPrimaryTargetListeners() {\n    const clientEmitter = new EventEmitter_js_1.EventEmitter(this.#primaryTargetClient);\n    clientEmitter.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onAttachedToTarget);\n    clientEmitter.on(CDPSession_js_1.CDPSessionEvent.Disconnected, () => {\n      this.#sessionCloseDeferred.reject(new Errors_js_1.TargetCloseError('Target closed'));\n    });\n    clientEmitter.on('Page.domContentEventFired', () => {\n      this.emit(\"domcontentloaded\" /* PageEvent.DOMContentLoaded */, undefined);\n    });\n    clientEmitter.on('Page.loadEventFired', () => {\n      this.emit(\"load\" /* PageEvent.Load */, undefined);\n    });\n    clientEmitter.on('Page.javascriptDialogOpening', this.#onDialog.bind(this));\n    clientEmitter.on('Runtime.exceptionThrown', this.#handleException.bind(this));\n    clientEmitter.on('Inspector.targetCrashed', this.#onTargetCrashed.bind(this));\n    clientEmitter.on('Performance.metrics', this.#emitMetrics.bind(this));\n    clientEmitter.on('Log.entryAdded', this.#onLogEntryAdded.bind(this));\n    clientEmitter.on('Page.fileChooserOpened', this.#onFileChooser.bind(this));\n  }\n  #onDetachedFromTarget = target => {\n    const sessionId = target._session()?.id();\n    const worker = this.#workers.get(sessionId);\n    if (!worker) {\n      return;\n    }\n    this.#workers.delete(sessionId);\n    this.emit(\"workerdestroyed\" /* PageEvent.WorkerDestroyed */, worker);\n  };\n  #onAttachedToTarget = session => {\n    (0, assert_js_1.assert)(session instanceof CDPSession_js_2.CdpCDPSession);\n    this.#frameManager.onAttachedToTarget(session._target());\n    if (session._target()._getTargetInfo().type === 'worker') {\n      const worker = new WebWorker_js_1.CdpWebWorker(session, session._target().url(), session._target()._targetId, session._target().type(), this.#addConsoleMessage.bind(this), this.#handleException.bind(this));\n      this.#workers.set(session.id(), worker);\n      this.emit(\"workercreated\" /* PageEvent.WorkerCreated */, worker);\n    }\n    session.on(CDPSession_js_1.CDPSessionEvent.Ready, this.#onAttachedToTarget);\n  };\n  async #initialize() {\n    try {\n      await Promise.all([this.#frameManager.initialize(this.#primaryTargetClient), this.#primaryTargetClient.send('Performance.enable'), this.#primaryTargetClient.send('Log.enable')]);\n    } catch (err) {\n      if ((0, ErrorLike_js_1.isErrorLike)(err) && (0, Connection_js_1.isTargetClosedError)(err)) {\n        (0, util_js_1.debugError)(err);\n      } else {\n        throw err;\n      }\n    }\n  }\n  async #onFileChooser(event) {\n    const env_1 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      if (!this.#fileChooserDeferreds.size) {\n        return;\n      }\n      const frame = this.#frameManager.frame(event.frameId);\n      (0, assert_js_1.assert)(frame, 'This should never happen.');\n      // This is guaranteed to be an HTMLInputElement handle by the event.\n      const handle = __addDisposableResource(env_1, await frame.worlds[IsolatedWorlds_js_1.MAIN_WORLD].adoptBackendNode(event.backendNodeId), false);\n      const fileChooser = new FileChooser_js_1.FileChooser(handle.move(), event);\n      for (const promise of this.#fileChooserDeferreds) {\n        promise.resolve(fileChooser);\n      }\n      this.#fileChooserDeferreds.clear();\n    } catch (e_1) {\n      env_1.error = e_1;\n      env_1.hasError = true;\n    } finally {\n      __disposeResources(env_1);\n    }\n  }\n  _client() {\n    return this.#primaryTargetClient;\n  }\n  isServiceWorkerBypassed() {\n    return this.#serviceWorkerBypassed;\n  }\n  isDragInterceptionEnabled() {\n    return this.#userDragInterceptionEnabled;\n  }\n  isJavaScriptEnabled() {\n    return this.#emulationManager.javascriptEnabled;\n  }\n  async waitForFileChooser(options = {}) {\n    const needsEnable = this.#fileChooserDeferreds.size === 0;\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    const deferred = Deferred_js_1.Deferred.create({\n      message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    if (options.signal) {\n      options.signal.addEventListener('abort', () => {\n        deferred.reject(options.signal?.reason);\n      }, {\n        once: true\n      });\n    }\n    this.#fileChooserDeferreds.add(deferred);\n    let enablePromise;\n    if (needsEnable) {\n      enablePromise = this.#primaryTargetClient.send('Page.setInterceptFileChooserDialog', {\n        enabled: true\n      });\n    }\n    try {\n      const [result] = await Promise.all([deferred.valueOrThrow(), enablePromise]);\n      return result;\n    } catch (error) {\n      this.#fileChooserDeferreds.delete(deferred);\n      throw error;\n    }\n  }\n  async setGeolocation(options) {\n    return await this.#emulationManager.setGeolocation(options);\n  }\n  target() {\n    return this.#primaryTarget;\n  }\n  browser() {\n    return this.#primaryTarget.browser();\n  }\n  browserContext() {\n    return this.#primaryTarget.browserContext();\n  }\n  #onTargetCrashed() {\n    this.emit(\"error\" /* PageEvent.Error */, new Error('Page crashed!'));\n  }\n  #onLogEntryAdded(event) {\n    const {\n      level,\n      text,\n      args,\n      source,\n      url,\n      lineNumber\n    } = event.entry;\n    if (args) {\n      args.map(arg => {\n        void (0, JSHandle_js_1.releaseObject)(this.#primaryTargetClient, arg);\n      });\n    }\n    if (source !== 'worker') {\n      this.emit(\"console\" /* PageEvent.Console */, new ConsoleMessage_js_1.ConsoleMessage(convertConsoleMessageLevel(level), text, [], [{\n        url,\n        lineNumber\n      }]));\n    }\n  }\n  mainFrame() {\n    return this.#frameManager.mainFrame();\n  }\n  get keyboard() {\n    return this.#keyboard;\n  }\n  get touchscreen() {\n    return this.#touchscreen;\n  }\n  get coverage() {\n    return this.#coverage;\n  }\n  get tracing() {\n    return this.#tracing;\n  }\n  frames() {\n    return this.#frameManager.frames();\n  }\n  workers() {\n    return Array.from(this.#workers.values());\n  }\n  async setRequestInterception(value) {\n    return await this.#frameManager.networkManager.setRequestInterception(value);\n  }\n  async setBypassServiceWorker(bypass) {\n    this.#serviceWorkerBypassed = bypass;\n    return await this.#primaryTargetClient.send('Network.setBypassServiceWorker', {\n      bypass\n    });\n  }\n  async setDragInterception(enabled) {\n    this.#userDragInterceptionEnabled = enabled;\n    return await this.#primaryTargetClient.send('Input.setInterceptDrags', {\n      enabled\n    });\n  }\n  async setOfflineMode(enabled) {\n    return await this.#frameManager.networkManager.setOfflineMode(enabled);\n  }\n  async emulateNetworkConditions(networkConditions) {\n    return await this.#frameManager.networkManager.emulateNetworkConditions(networkConditions);\n  }\n  setDefaultNavigationTimeout(timeout) {\n    this._timeoutSettings.setDefaultNavigationTimeout(timeout);\n  }\n  setDefaultTimeout(timeout) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n  getDefaultTimeout() {\n    return this._timeoutSettings.timeout();\n  }\n  async queryObjects(prototypeHandle) {\n    (0, assert_js_1.assert)(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n    (0, assert_js_1.assert)(prototypeHandle.id, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this.mainFrame().client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle.id\n    });\n    return this.mainFrame().mainRealm().createCdpHandle(response.objects);\n  }\n  async cookies(...urls) {\n    const originalCookies = (await this.#primaryTargetClient.send('Network.getCookies', {\n      urls: urls.length ? urls : [this.url()]\n    })).cookies;\n    const unsupportedCookieAttributes = ['sourcePort'];\n    const filterUnsupportedAttributes = cookie => {\n      for (const attr of unsupportedCookieAttributes) {\n        delete cookie[attr];\n      }\n      return cookie;\n    };\n    return originalCookies.map(filterUnsupportedAttributes).map(cookie => {\n      return {\n        ...cookie,\n        // TODO: a breaking change is needed in Puppeteer types to support other\n        // partition keys.\n        partitionKey: cookie.partitionKey ? cookie.partitionKey.topLevelSite : undefined\n      };\n    });\n  }\n  async deleteCookie(...cookies) {\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = {\n        ...cookie,\n        // TODO: a breaking change neeeded to change the partition key\n        // type in Puppeteer.\n        partitionKey: cookie.partitionKey ? {\n          topLevelSite: cookie.partitionKey,\n          hasCrossSiteAncestor: false\n        } : undefined\n      };\n      if (!cookie.url && pageURL.startsWith('http')) {\n        item.url = pageURL;\n      }\n      await this.#primaryTargetClient.send('Network.deleteCookies', item);\n      if (pageURL.startsWith('http') && !item.partitionKey) {\n        const url = new URL(pageURL);\n        // Delete also cookies from the page's partition.\n        await this.#primaryTargetClient.send('Network.deleteCookies', {\n          ...item,\n          partitionKey: {\n            topLevelSite: url.origin.replace(`:${url.port}`, ''),\n            hasCrossSiteAncestor: false\n          }\n        });\n      }\n    }\n  }\n  async setCookie(...cookies) {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP) {\n        item.url = pageURL;\n      }\n      (0, assert_js_1.assert)(item.url !== 'about:blank', `Blank page can not have cookie \"${item.name}\"`);\n      (0, assert_js_1.assert)(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie \"${item.name}\"`);\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length) {\n      await this.#primaryTargetClient.send('Network.setCookies', {\n        cookies: items.map(cookieParam => {\n          return {\n            ...cookieParam,\n            partitionKey: cookieParam.partitionKey ? {\n              // TODO: a breaking change neeeded to change the partition key\n              // type in Puppeteer.\n              topLevelSite: cookieParam.partitionKey,\n              hasCrossSiteAncestor: false\n            } : undefined\n          };\n        })\n      });\n    }\n  }\n  async exposeFunction(name, pptrFunction) {\n    if (this.#bindings.has(name)) {\n      throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n    }\n    const source = (0, utils_js_1.pageBindingInitString)('exposedFun', name);\n    let binding;\n    switch (typeof pptrFunction) {\n      case 'function':\n        binding = new Binding_js_1.Binding(name, pptrFunction, source);\n        break;\n      default:\n        binding = new Binding_js_1.Binding(name, pptrFunction.default, source);\n        break;\n    }\n    this.#bindings.set(name, binding);\n    const [{\n      identifier\n    }] = await Promise.all([this.#frameManager.evaluateOnNewDocument(source), this.#frameManager.addExposedFunctionBinding(binding)]);\n    this.#exposedFunctions.set(name, identifier);\n  }\n  async removeExposedFunction(name) {\n    const exposedFunctionId = this.#exposedFunctions.get(name);\n    if (!exposedFunctionId) {\n      throw new Error(`Function with name \"${name}\" does not exist`);\n    }\n    // #bindings must be updated together with #exposedFunctions.\n    const binding = this.#bindings.get(name);\n    this.#exposedFunctions.delete(name);\n    this.#bindings.delete(name);\n    await Promise.all([this.#frameManager.removeScriptToEvaluateOnNewDocument(exposedFunctionId), this.#frameManager.removeExposedFunctionBinding(binding)]);\n  }\n  async authenticate(credentials) {\n    return await this.#frameManager.networkManager.authenticate(credentials);\n  }\n  async setExtraHTTPHeaders(headers) {\n    return await this.#frameManager.networkManager.setExtraHTTPHeaders(headers);\n  }\n  async setUserAgent(userAgent, userAgentMetadata) {\n    return await this.#frameManager.networkManager.setUserAgent(userAgent, userAgentMetadata);\n  }\n  async metrics() {\n    const response = await this.#primaryTargetClient.send('Performance.getMetrics');\n    return this.#buildMetricsObject(response.metrics);\n  }\n  #emitMetrics(event) {\n    this.emit(\"metrics\" /* PageEvent.Metrics */, {\n      title: event.title,\n      metrics: this.#buildMetricsObject(event.metrics)\n    });\n  }\n  #buildMetricsObject(metrics) {\n    const result = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name)) {\n        result[metric.name] = metric.value;\n      }\n    }\n    return result;\n  }\n  #handleException(exception) {\n    this.emit(\"pageerror\" /* PageEvent.PageError */, (0, utils_js_1.createClientError)(exception.exceptionDetails));\n  }\n  #onConsoleAPI(world, event) {\n    const values = event.args.map(arg => {\n      return world.createCdpHandle(arg);\n    });\n    this.#addConsoleMessage(convertConsoleMessageLevel(event.type), values, event.stackTrace);\n  }\n  async #onBindingCalled(world, event) {\n    let payload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {\n      type,\n      name,\n      seq,\n      args,\n      isTrivial\n    } = payload;\n    if (type !== 'exposedFun') {\n      return;\n    }\n    const context = world.context;\n    if (!context) {\n      return;\n    }\n    const binding = this.#bindings.get(name);\n    await binding?.run(context, seq, args, isTrivial);\n  }\n  #addConsoleMessage(eventType, args, stackTrace) {\n    if (!this.listenerCount(\"console\" /* PageEvent.Console */)) {\n      args.forEach(arg => {\n        return arg.dispose();\n      });\n      return;\n    }\n    const textTokens = [];\n    // eslint-disable-next-line max-len -- The comment is long.\n    // eslint-disable-next-line rulesdir/use-using -- These are not owned by this function.\n    for (const arg of args) {\n      const remoteObject = arg.remoteObject();\n      if (remoteObject.objectId) {\n        textTokens.push(arg.toString());\n      } else {\n        textTokens.push((0, utils_js_1.valueFromRemoteObject)(remoteObject));\n      }\n    }\n    const stackTraceLocations = [];\n    if (stackTrace) {\n      for (const callFrame of stackTrace.callFrames) {\n        stackTraceLocations.push({\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber\n        });\n      }\n    }\n    const message = new ConsoleMessage_js_1.ConsoleMessage(convertConsoleMessageLevel(eventType), textTokens.join(' '), args, stackTraceLocations);\n    this.emit(\"console\" /* PageEvent.Console */, message);\n  }\n  #onDialog(event) {\n    const type = (0, util_js_1.validateDialogType)(event.type);\n    const dialog = new Dialog_js_1.CdpDialog(this.#primaryTargetClient, type, event.message, event.defaultPrompt);\n    this.emit(\"dialog\" /* PageEvent.Dialog */, dialog);\n  }\n  async reload(options) {\n    const [result] = await Promise.all([this.waitForNavigation({\n      ...options,\n      ignoreSameDocumentNavigation: true\n    }), this.#primaryTargetClient.send('Page.reload')]);\n    return result;\n  }\n  async createCDPSession() {\n    return await this.target().createCDPSession();\n  }\n  async goBack(options = {}) {\n    return await this.#go(-1, options);\n  }\n  async goForward(options = {}) {\n    return await this.#go(+1, options);\n  }\n  async #go(delta, options) {\n    const history = await this.#primaryTargetClient.send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      return null;\n    }\n    const result = await Promise.all([this.waitForNavigation(options), this.#primaryTargetClient.send('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    })]);\n    return result[0];\n  }\n  async bringToFront() {\n    await this.#primaryTargetClient.send('Page.bringToFront');\n  }\n  async setJavaScriptEnabled(enabled) {\n    return await this.#emulationManager.setJavaScriptEnabled(enabled);\n  }\n  async setBypassCSP(enabled) {\n    await this.#primaryTargetClient.send('Page.setBypassCSP', {\n      enabled\n    });\n  }\n  async emulateMediaType(type) {\n    return await this.#emulationManager.emulateMediaType(type);\n  }\n  async emulateCPUThrottling(factor) {\n    return await this.#emulationManager.emulateCPUThrottling(factor);\n  }\n  async emulateMediaFeatures(features) {\n    return await this.#emulationManager.emulateMediaFeatures(features);\n  }\n  async emulateTimezone(timezoneId) {\n    return await this.#emulationManager.emulateTimezone(timezoneId);\n  }\n  async emulateIdleState(overrides) {\n    return await this.#emulationManager.emulateIdleState(overrides);\n  }\n  async emulateVisionDeficiency(type) {\n    return await this.#emulationManager.emulateVisionDeficiency(type);\n  }\n  async setViewport(viewport) {\n    const needsReload = await this.#emulationManager.emulateViewport(viewport);\n    this.#viewport = viewport;\n    if (needsReload) {\n      await this.reload();\n    }\n  }\n  viewport() {\n    return this.#viewport;\n  }\n  async evaluateOnNewDocument(pageFunction, ...args) {\n    const source = (0, util_js_1.evaluationString)(pageFunction, ...args);\n    return await this.#frameManager.evaluateOnNewDocument(source);\n  }\n  async removeScriptToEvaluateOnNewDocument(identifier) {\n    return await this.#frameManager.removeScriptToEvaluateOnNewDocument(identifier);\n  }\n  async setCacheEnabled(enabled = true) {\n    await this.#frameManager.networkManager.setCacheEnabled(enabled);\n  }\n  async _screenshot(options) {\n    const env_2 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const {\n        fromSurface,\n        omitBackground,\n        optimizeForSpeed,\n        quality,\n        clip: userClip,\n        type,\n        captureBeyondViewport\n      } = options;\n      const isFirefox = this.target()._targetManager() instanceof FirefoxTargetManager_js_1.FirefoxTargetManager;\n      const stack = __addDisposableResource(env_2, new disposable_js_1.AsyncDisposableStack(), true);\n      // Firefox omits background by default; it's not configurable.\n      if (!isFirefox && omitBackground && (type === 'png' || type === 'webp')) {\n        await this.#emulationManager.setTransparentBackgroundColor();\n        stack.defer(async () => {\n          await this.#emulationManager.resetDefaultBackgroundColor().catch(util_js_1.debugError);\n        });\n      }\n      let clip = userClip;\n      if (clip && !captureBeyondViewport) {\n        const viewport = await this.mainFrame().isolatedRealm().evaluate(() => {\n          const {\n            height,\n            pageLeft: x,\n            pageTop: y,\n            width\n          } = window.visualViewport;\n          return {\n            x,\n            y,\n            height,\n            width\n          };\n        });\n        clip = getIntersectionRect(clip, viewport);\n      }\n      // We need to do these spreads because Firefox doesn't allow unknown options.\n      const {\n        data\n      } = await this.#primaryTargetClient.send('Page.captureScreenshot', {\n        format: type,\n        ...(optimizeForSpeed ? {\n          optimizeForSpeed\n        } : {}),\n        ...(quality !== undefined ? {\n          quality: Math.round(quality)\n        } : {}),\n        ...(clip ? {\n          clip: {\n            ...clip,\n            scale: clip.scale ?? 1\n          }\n        } : {}),\n        ...(!fromSurface ? {\n          fromSurface\n        } : {}),\n        captureBeyondViewport\n      });\n      return data;\n    } catch (e_2) {\n      env_2.error = e_2;\n      env_2.hasError = true;\n    } finally {\n      const result_1 = __disposeResources(env_2);\n      if (result_1) await result_1;\n    }\n  }\n  async createPDFStream(options = {}) {\n    const {\n      timeout: ms = this._timeoutSettings.timeout()\n    } = options;\n    const {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      width: paperWidth,\n      height: paperHeight,\n      margin,\n      pageRanges,\n      preferCSSPageSize,\n      omitBackground,\n      tagged: generateTaggedPDF,\n      outline: generateDocumentOutline,\n      waitForFonts\n    } = (0, util_js_1.parsePDFOptions)(options);\n    if (omitBackground) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n    }\n    if (waitForFonts) {\n      await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.from)(this.mainFrame().isolatedRealm().evaluate(() => {\n        return document.fonts.ready;\n      })).pipe((0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms))));\n    }\n    const printCommandPromise = this.#primaryTargetClient.send('Page.printToPDF', {\n      transferMode: 'ReturnAsStream',\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      paperWidth,\n      paperHeight,\n      marginTop: margin.top,\n      marginBottom: margin.bottom,\n      marginLeft: margin.left,\n      marginRight: margin.right,\n      pageRanges,\n      preferCSSPageSize,\n      generateTaggedPDF,\n      generateDocumentOutline\n    });\n    const result = await (0, rxjs_js_1.firstValueFrom)((0, rxjs_js_1.from)(printCommandPromise).pipe((0, rxjs_js_1.raceWith)((0, util_js_1.timeout)(ms))));\n    if (omitBackground) {\n      await this.#emulationManager.resetDefaultBackgroundColor();\n    }\n    (0, assert_js_1.assert)(result.stream, '`stream` is missing from `Page.printToPDF');\n    return await (0, util_js_1.getReadableFromProtocolStream)(this.#primaryTargetClient, result.stream);\n  }\n  async pdf(options = {}) {\n    const {\n      path = undefined\n    } = options;\n    const readable = await this.createPDFStream(options);\n    const typedArray = await (0, util_js_1.getReadableAsTypedArray)(readable, path);\n    (0, assert_js_1.assert)(typedArray, 'Could not create typed array');\n    return typedArray;\n  }\n  async close(options = {\n    runBeforeUnload: undefined\n  }) {\n    const env_3 = {\n      stack: [],\n      error: void 0,\n      hasError: false\n    };\n    try {\n      const _guard = __addDisposableResource(env_3, await this.browserContext().waitForScreenshotOperations(), false);\n      const connection = this.#primaryTargetClient.connection();\n      (0, assert_js_1.assert)(connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n      const runBeforeUnload = !!options.runBeforeUnload;\n      if (runBeforeUnload) {\n        await this.#primaryTargetClient.send('Page.close');\n      } else {\n        await connection.send('Target.closeTarget', {\n          targetId: this.#primaryTarget._targetId\n        });\n        await this.#tabTarget._isClosedDeferred.valueOrThrow();\n      }\n    } catch (e_3) {\n      env_3.error = e_3;\n      env_3.hasError = true;\n    } finally {\n      __disposeResources(env_3);\n    }\n  }\n  isClosed() {\n    return this.#closed;\n  }\n  get mouse() {\n    return this.#mouse;\n  }\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  async waitForDevicePrompt(options = {}) {\n    return await this.mainFrame().waitForDevicePrompt(options);\n  }\n}\nexports.CdpPage = CdpPage;\nconst supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(clip, viewport) {\n  // Note these will already be normalized.\n  const x = Math.max(clip.x, viewport.x);\n  const y = Math.max(clip.y, viewport.y);\n  return {\n    x,\n    y,\n    width: Math.max(Math.min(clip.x + clip.width, viewport.x + viewport.width) - x, 0),\n    height: Math.max(Math.min(clip.y + clip.height, viewport.y + viewport.height) - y, 0)\n  };\n}","map":{"version":3,"names":["rxjs_js_1","require","CDPSession_js_1","Page_js_1","ConsoleMessage_js_1","Errors_js_1","EventEmitter_js_1","FileChooser_js_1","NetworkManagerEvents_js_1","util_js_1","assert_js_1","Deferred_js_1","disposable_js_1","ErrorLike_js_1","Binding_js_1","CDPSession_js_2","Connection_js_1","Coverage_js_1","Dialog_js_1","EmulationManager_js_1","FirefoxTargetManager_js_1","FrameManager_js_1","FrameManagerEvents_js_1","Input_js_1","IsolatedWorlds_js_1","JSHandle_js_1","Tracing_js_1","utils_js_1","WebWorker_js_1","convertConsoleMessageLevel","method","CdpPage","Page","_create","client","target","defaultViewport","page","initialize","setViewport","err","isErrorLike","isTargetClosedError","debugError","closed","targetManager","primaryTargetClient","primaryTarget","tabTargetClient","tabTarget","keyboard","mouse","touchscreen","frameManager","emulationManager","tracing","bindings","Map","exposedFunctions","coverage","viewport","workers","fileChooserDeferreds","Set","sessionCloseDeferred","Deferred","create","serviceWorkerBypassed","userDragInterceptionEnabled","constructor","parentSession","assert","_target","_targetManager","CdpKeyboard","CdpMouse","CdpTouchscreen","FrameManager","_timeoutSettings","EmulationManager","Tracing","Coverage","frameManagerEmitter","EventEmitter","on","FrameManagerEvent","FrameAttached","frame","emit","FrameDetached","FrameNavigated","ConsoleApiCalled","world","event","onConsoleAPI","BindingCalled","onBindingCalled","networkManagerEmitter","networkManager","NetworkManagerEvent","Request","request","RequestServedFromCache","Response","response","RequestFailed","RequestFinished","CDPSessionEvent","Swapped","onActivation","bind","Ready","onSecondaryTarget","onDetachedFromTarget","_isClosedDeferred","valueOrThrow","then","off","undefined","catch","setupPrimaryTargetListeners","attachExistingTargets","#attachExistingTargets","queue","childTarget","getChildTargets","push","idx","length","next","session","_session","onAttachedToTarget","#onActivation","newSession","CdpCDPSession","updateClient","swapFrameTree","#onSecondaryTarget","_subtype","registerSpeculativeSession","#setupPrimaryTargetListeners","clientEmitter","Disconnected","reject","TargetCloseError","onDialog","handleException","onTargetCrashed","emitMetrics","onLogEntryAdded","onFileChooser","sessionId","id","worker","get","delete","_getTargetInfo","type","CdpWebWorker","url","_targetId","addConsoleMessage","set","#initialize","Promise","all","send","#onFileChooser","size","frameId","handle","__addDisposableResource","env_1","worlds","MAIN_WORLD","adoptBackendNode","backendNodeId","fileChooser","FileChooser","move","promise","resolve","clear","_client","isServiceWorkerBypassed","isDragInterceptionEnabled","isJavaScriptEnabled","javascriptEnabled","waitForFileChooser","options","needsEnable","timeout","deferred","message","signal","addEventListener","reason","once","add","enablePromise","enabled","result","error","setGeolocation","browser","browserContext","#onTargetCrashed","Error","#onLogEntryAdded","level","text","args","source","lineNumber","entry","map","arg","releaseObject","ConsoleMessage","mainFrame","frames","Array","from","values","setRequestInterception","value","setBypassServiceWorker","bypass","setDragInterception","setOfflineMode","emulateNetworkConditions","networkConditions","setDefaultNavigationTimeout","setDefaultTimeout","getDefaultTimeout","queryObjects","prototypeHandle","disposed","prototypeObjectId","mainRealm","createCdpHandle","objects","cookies","urls","originalCookies","unsupportedCookieAttributes","filterUnsupportedAttributes","cookie","attr","partitionKey","topLevelSite","deleteCookie","pageURL","item","hasCrossSiteAncestor","startsWith","URL","origin","replace","port","setCookie","startsWithHTTP","items","Object","assign","name","String","prototype","call","cookieParam","exposeFunction","pptrFunction","has","pageBindingInitString","binding","Binding","default","identifier","evaluateOnNewDocument","addExposedFunctionBinding","removeExposedFunction","exposedFunctionId","removeScriptToEvaluateOnNewDocument","removeExposedFunctionBinding","authenticate","credentials","setExtraHTTPHeaders","headers","setUserAgent","userAgent","userAgentMetadata","metrics","buildMetricsObject","#emitMetrics","title","#buildMetricsObject","metric","supportedMetrics","#handleException","exception","createClientError","exceptionDetails","#onConsoleAPI","stackTrace","#onBindingCalled","payload","JSON","parse","seq","isTrivial","context","run","#addConsoleMessage","eventType","listenerCount","forEach","dispose","textTokens","remoteObject","objectId","toString","valueFromRemoteObject","stackTraceLocations","callFrame","callFrames","columnNumber","join","#onDialog","validateDialogType","dialog","CdpDialog","defaultPrompt","reload","waitForNavigation","ignoreSameDocumentNavigation","createCDPSession","goBack","go","goForward","#go","delta","history","entries","currentIndex","entryId","bringToFront","setJavaScriptEnabled","setBypassCSP","emulateMediaType","emulateCPUThrottling","factor","emulateMediaFeatures","features","emulateTimezone","timezoneId","emulateIdleState","overrides","emulateVisionDeficiency","needsReload","emulateViewport","pageFunction","evaluationString","setCacheEnabled","_screenshot","fromSurface","omitBackground","optimizeForSpeed","quality","clip","userClip","captureBeyondViewport","isFirefox","FirefoxTargetManager","stack","env_2","AsyncDisposableStack","setTransparentBackgroundColor","defer","resetDefaultBackgroundColor","isolatedRealm","evaluate","height","pageLeft","x","pageTop","y","width","window","visualViewport","getIntersectionRect","data","format","Math","round","scale","createPDFStream","ms","landscape","displayHeaderFooter","headerTemplate","footerTemplate","printBackground","paperWidth","paperHeight","margin","pageRanges","preferCSSPageSize","tagged","generateTaggedPDF","outline","generateDocumentOutline","waitForFonts","parsePDFOptions","firstValueFrom","document","fonts","ready","pipe","raceWith","printCommandPromise","transferMode","marginTop","top","marginBottom","bottom","marginLeft","left","marginRight","right","stream","getReadableFromProtocolStream","pdf","path","readable","typedArray","getReadableAsTypedArray","close","runBeforeUnload","_guard","env_3","waitForScreenshotOperations","connection","targetId","isClosed","waitForDevicePrompt","exports","max","min"],"sources":["/Users/lawj4/webDevelopment/node_modules/puppeteer-core/src/cdp/Page.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport {firstValueFrom, from, raceWith} from '../../third_party/rxjs/rxjs.js';\nimport type {Browser} from '../api/Browser.js';\nimport type {BrowserContext} from '../api/BrowserContext.js';\nimport {CDPSessionEvent, type CDPSession} from '../api/CDPSession.js';\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport type {Frame, WaitForOptions} from '../api/Frame.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {JSHandle} from '../api/JSHandle.js';\nimport type {Credentials} from '../api/Page.js';\nimport {\n  Page,\n  PageEvent,\n  type GeolocationOptions,\n  type MediaFeature,\n  type Metrics,\n  type NewDocumentScriptEvaluation,\n  type ScreenshotClip,\n  type ScreenshotOptions,\n  type WaitTimeoutOptions,\n} from '../api/Page.js';\nimport {\n  ConsoleMessage,\n  type ConsoleMessageType,\n} from '../common/ConsoleMessage.js';\nimport type {\n  Cookie,\n  DeleteCookiesRequest,\n  CookieParam,\n} from '../common/Cookie.js';\nimport {TargetCloseError} from '../common/Errors.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {FileChooser} from '../common/FileChooser.js';\nimport {NetworkManagerEvent} from '../common/NetworkManagerEvents.js';\nimport type {PDFOptions} from '../common/PDFOptions.js';\nimport type {BindingPayload, HandleFor} from '../common/types.js';\nimport {\n  debugError,\n  evaluationString,\n  getReadableAsTypedArray,\n  getReadableFromProtocolStream,\n  parsePDFOptions,\n  timeout,\n  validateDialogType,\n} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {AsyncDisposableStack} from '../util/disposable.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {Binding} from './Binding.js';\nimport {CdpCDPSession} from './CDPSession.js';\nimport {isTargetClosedError} from './Connection.js';\nimport {Coverage} from './Coverage.js';\nimport type {DeviceRequestPrompt} from './DeviceRequestPrompt.js';\nimport {CdpDialog} from './Dialog.js';\nimport {EmulationManager} from './EmulationManager.js';\nimport {FirefoxTargetManager} from './FirefoxTargetManager.js';\nimport type {CdpFrame} from './Frame.js';\nimport {FrameManager} from './FrameManager.js';\nimport {FrameManagerEvent} from './FrameManagerEvents.js';\nimport {CdpKeyboard, CdpMouse, CdpTouchscreen} from './Input.js';\nimport type {IsolatedWorld} from './IsolatedWorld.js';\nimport {MAIN_WORLD} from './IsolatedWorlds.js';\nimport {releaseObject} from './JSHandle.js';\nimport type {NetworkConditions} from './NetworkManager.js';\nimport type {CdpTarget} from './Target.js';\nimport type {TargetManager} from './TargetManager.js';\nimport {TargetManagerEvent} from './TargetManager.js';\nimport {Tracing} from './Tracing.js';\nimport {\n  createClientError,\n  pageBindingInitString,\n  valueFromRemoteObject,\n} from './utils.js';\nimport {CdpWebWorker} from './WebWorker.js';\n\nfunction convertConsoleMessageLevel(method: string): ConsoleMessageType {\n  switch (method) {\n    case 'warning':\n      return 'warn';\n    default:\n      return method as ConsoleMessageType;\n  }\n}\n\n/**\n * @internal\n */\nexport class CdpPage extends Page {\n  static async _create(\n    client: CDPSession,\n    target: CdpTarget,\n    defaultViewport: Viewport | null\n  ): Promise<CdpPage> {\n    const page = new CdpPage(client, target);\n    await page.#initialize();\n    if (defaultViewport) {\n      try {\n        await page.setViewport(defaultViewport);\n      } catch (err) {\n        if (isErrorLike(err) && isTargetClosedError(err)) {\n          debugError(err);\n        } else {\n          throw err;\n        }\n      }\n    }\n    return page;\n  }\n\n  #closed = false;\n  readonly #targetManager: TargetManager;\n\n  #primaryTargetClient: CDPSession;\n  #primaryTarget: CdpTarget;\n  #tabTargetClient: CDPSession;\n  #tabTarget: CdpTarget;\n  #keyboard: CdpKeyboard;\n  #mouse: CdpMouse;\n  #touchscreen: CdpTouchscreen;\n  #frameManager: FrameManager;\n  #emulationManager: EmulationManager;\n  #tracing: Tracing;\n  #bindings = new Map<string, Binding>();\n  #exposedFunctions = new Map<string, string>();\n  #coverage: Coverage;\n  #viewport: Viewport | null;\n  #workers = new Map<string, CdpWebWorker>();\n  #fileChooserDeferreds = new Set<Deferred<FileChooser>>();\n  #sessionCloseDeferred = Deferred.create<never, TargetCloseError>();\n  #serviceWorkerBypassed = false;\n  #userDragInterceptionEnabled = false;\n\n  constructor(client: CDPSession, target: CdpTarget) {\n    super();\n    this.#primaryTargetClient = client;\n    this.#tabTargetClient = client.parentSession()!;\n    assert(this.#tabTargetClient, 'Tab target session is not defined.');\n    this.#tabTarget = (this.#tabTargetClient as CdpCDPSession)._target();\n    assert(this.#tabTarget, 'Tab target is not defined.');\n    this.#primaryTarget = target;\n    this.#targetManager = target._targetManager();\n    this.#keyboard = new CdpKeyboard(client);\n    this.#mouse = new CdpMouse(client, this.#keyboard);\n    this.#touchscreen = new CdpTouchscreen(client, this.#keyboard);\n    this.#frameManager = new FrameManager(client, this, this._timeoutSettings);\n    this.#emulationManager = new EmulationManager(client);\n    this.#tracing = new Tracing(client);\n    this.#coverage = new Coverage(client);\n    this.#viewport = null;\n\n    const frameManagerEmitter = new EventEmitter(this.#frameManager);\n    frameManagerEmitter.on(FrameManagerEvent.FrameAttached, frame => {\n      this.emit(PageEvent.FrameAttached, frame);\n    });\n    frameManagerEmitter.on(FrameManagerEvent.FrameDetached, frame => {\n      this.emit(PageEvent.FrameDetached, frame);\n    });\n    frameManagerEmitter.on(FrameManagerEvent.FrameNavigated, frame => {\n      this.emit(PageEvent.FrameNavigated, frame);\n    });\n    frameManagerEmitter.on(\n      FrameManagerEvent.ConsoleApiCalled,\n      ([world, event]) => {\n        this.#onConsoleAPI(world, event);\n      }\n    );\n    frameManagerEmitter.on(\n      FrameManagerEvent.BindingCalled,\n      ([world, event]) => {\n        void this.#onBindingCalled(world, event);\n      }\n    );\n\n    const networkManagerEmitter = new EventEmitter(\n      this.#frameManager.networkManager\n    );\n    networkManagerEmitter.on(NetworkManagerEvent.Request, request => {\n      this.emit(PageEvent.Request, request);\n    });\n    networkManagerEmitter.on(\n      NetworkManagerEvent.RequestServedFromCache,\n      request => {\n        this.emit(PageEvent.RequestServedFromCache, request!);\n      }\n    );\n    networkManagerEmitter.on(NetworkManagerEvent.Response, response => {\n      this.emit(PageEvent.Response, response);\n    });\n    networkManagerEmitter.on(NetworkManagerEvent.RequestFailed, request => {\n      this.emit(PageEvent.RequestFailed, request);\n    });\n    networkManagerEmitter.on(NetworkManagerEvent.RequestFinished, request => {\n      this.emit(PageEvent.RequestFinished, request);\n    });\n\n    this.#tabTargetClient.on(\n      CDPSessionEvent.Swapped,\n      this.#onActivation.bind(this)\n    );\n\n    this.#tabTargetClient.on(\n      CDPSessionEvent.Ready,\n      this.#onSecondaryTarget.bind(this)\n    );\n\n    this.#targetManager.on(\n      TargetManagerEvent.TargetGone,\n      this.#onDetachedFromTarget\n    );\n\n    this.#tabTarget._isClosedDeferred\n      .valueOrThrow()\n      .then(() => {\n        this.#targetManager.off(\n          TargetManagerEvent.TargetGone,\n          this.#onDetachedFromTarget\n        );\n\n        this.emit(PageEvent.Close, undefined);\n        this.#closed = true;\n      })\n      .catch(debugError);\n\n    this.#setupPrimaryTargetListeners();\n    this.#attachExistingTargets();\n  }\n\n  #attachExistingTargets(): void {\n    const queue = [];\n    for (const childTarget of this.#targetManager.getChildTargets(\n      this.#primaryTarget\n    )) {\n      queue.push(childTarget);\n    }\n    let idx = 0;\n    while (idx < queue.length) {\n      const next = queue[idx] as CdpTarget;\n      idx++;\n      const session = next._session();\n      if (session) {\n        this.#onAttachedToTarget(session);\n      }\n      for (const childTarget of this.#targetManager.getChildTargets(next)) {\n        queue.push(childTarget);\n      }\n    }\n  }\n\n  async #onActivation(newSession: CDPSession): Promise<void> {\n    this.#primaryTargetClient = newSession;\n    assert(\n      this.#primaryTargetClient instanceof CdpCDPSession,\n      'CDPSession is not instance of CDPSessionImpl'\n    );\n    this.#primaryTarget = this.#primaryTargetClient._target();\n    assert(this.#primaryTarget, 'Missing target on swap');\n    this.#keyboard.updateClient(newSession);\n    this.#mouse.updateClient(newSession);\n    this.#touchscreen.updateClient(newSession);\n    this.#emulationManager.updateClient(newSession);\n    this.#tracing.updateClient(newSession);\n    this.#coverage.updateClient(newSession);\n    await this.#frameManager.swapFrameTree(newSession);\n    this.#setupPrimaryTargetListeners();\n  }\n\n  async #onSecondaryTarget(session: CDPSession): Promise<void> {\n    assert(session instanceof CdpCDPSession);\n    if (session._target()._subtype() !== 'prerender') {\n      return;\n    }\n    this.#frameManager.registerSpeculativeSession(session).catch(debugError);\n    this.#emulationManager\n      .registerSpeculativeSession(session)\n      .catch(debugError);\n  }\n\n  /**\n   * Sets up listeners for the primary target. The primary target can change\n   * during a navigation to a prerended page.\n   */\n  #setupPrimaryTargetListeners() {\n    const clientEmitter = new EventEmitter(this.#primaryTargetClient);\n    clientEmitter.on(CDPSessionEvent.Ready, this.#onAttachedToTarget);\n    clientEmitter.on(CDPSessionEvent.Disconnected, () => {\n      this.#sessionCloseDeferred.reject(new TargetCloseError('Target closed'));\n    });\n    clientEmitter.on('Page.domContentEventFired', () => {\n      this.emit(PageEvent.DOMContentLoaded, undefined);\n    });\n    clientEmitter.on('Page.loadEventFired', () => {\n      this.emit(PageEvent.Load, undefined);\n    });\n    clientEmitter.on('Page.javascriptDialogOpening', this.#onDialog.bind(this));\n    clientEmitter.on(\n      'Runtime.exceptionThrown',\n      this.#handleException.bind(this)\n    );\n    clientEmitter.on(\n      'Inspector.targetCrashed',\n      this.#onTargetCrashed.bind(this)\n    );\n    clientEmitter.on('Performance.metrics', this.#emitMetrics.bind(this));\n    clientEmitter.on('Log.entryAdded', this.#onLogEntryAdded.bind(this));\n    clientEmitter.on('Page.fileChooserOpened', this.#onFileChooser.bind(this));\n  }\n\n  #onDetachedFromTarget = (target: CdpTarget) => {\n    const sessionId = target._session()?.id();\n    const worker = this.#workers.get(sessionId!);\n    if (!worker) {\n      return;\n    }\n    this.#workers.delete(sessionId!);\n    this.emit(PageEvent.WorkerDestroyed, worker);\n  };\n\n  #onAttachedToTarget = (session: CDPSession) => {\n    assert(session instanceof CdpCDPSession);\n    this.#frameManager.onAttachedToTarget(session._target());\n    if (session._target()._getTargetInfo().type === 'worker') {\n      const worker = new CdpWebWorker(\n        session,\n        session._target().url(),\n        session._target()._targetId,\n        session._target().type(),\n        this.#addConsoleMessage.bind(this),\n        this.#handleException.bind(this)\n      );\n      this.#workers.set(session.id(), worker);\n      this.emit(PageEvent.WorkerCreated, worker);\n    }\n    session.on(CDPSessionEvent.Ready, this.#onAttachedToTarget);\n  };\n\n  async #initialize(): Promise<void> {\n    try {\n      await Promise.all([\n        this.#frameManager.initialize(this.#primaryTargetClient),\n        this.#primaryTargetClient.send('Performance.enable'),\n        this.#primaryTargetClient.send('Log.enable'),\n      ]);\n    } catch (err) {\n      if (isErrorLike(err) && isTargetClosedError(err)) {\n        debugError(err);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  async #onFileChooser(\n    event: Protocol.Page.FileChooserOpenedEvent\n  ): Promise<void> {\n    if (!this.#fileChooserDeferreds.size) {\n      return;\n    }\n\n    const frame = this.#frameManager.frame(event.frameId);\n    assert(frame, 'This should never happen.');\n\n    // This is guaranteed to be an HTMLInputElement handle by the event.\n    using handle = (await frame.worlds[MAIN_WORLD].adoptBackendNode(\n      event.backendNodeId\n    )) as ElementHandle<HTMLInputElement>;\n\n    const fileChooser = new FileChooser(handle.move(), event);\n    for (const promise of this.#fileChooserDeferreds) {\n      promise.resolve(fileChooser);\n    }\n    this.#fileChooserDeferreds.clear();\n  }\n\n  _client(): CDPSession {\n    return this.#primaryTargetClient;\n  }\n\n  override isServiceWorkerBypassed(): boolean {\n    return this.#serviceWorkerBypassed;\n  }\n\n  override isDragInterceptionEnabled(): boolean {\n    return this.#userDragInterceptionEnabled;\n  }\n\n  override isJavaScriptEnabled(): boolean {\n    return this.#emulationManager.javascriptEnabled;\n  }\n\n  override async waitForFileChooser(\n    options: WaitTimeoutOptions = {}\n  ): Promise<FileChooser> {\n    const needsEnable = this.#fileChooserDeferreds.size === 0;\n    const {timeout = this._timeoutSettings.timeout()} = options;\n    const deferred = Deferred.create<FileChooser>({\n      message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n      timeout,\n    });\n\n    if (options.signal) {\n      options.signal.addEventListener(\n        'abort',\n        () => {\n          deferred.reject(options.signal?.reason);\n        },\n        {once: true}\n      );\n    }\n\n    this.#fileChooserDeferreds.add(deferred);\n    let enablePromise: Promise<void> | undefined;\n    if (needsEnable) {\n      enablePromise = this.#primaryTargetClient.send(\n        'Page.setInterceptFileChooserDialog',\n        {\n          enabled: true,\n        }\n      );\n    }\n    try {\n      const [result] = await Promise.all([\n        deferred.valueOrThrow(),\n        enablePromise,\n      ]);\n      return result;\n    } catch (error) {\n      this.#fileChooserDeferreds.delete(deferred);\n      throw error;\n    }\n  }\n\n  override async setGeolocation(options: GeolocationOptions): Promise<void> {\n    return await this.#emulationManager.setGeolocation(options);\n  }\n\n  override target(): CdpTarget {\n    return this.#primaryTarget;\n  }\n\n  override browser(): Browser {\n    return this.#primaryTarget.browser();\n  }\n\n  override browserContext(): BrowserContext {\n    return this.#primaryTarget.browserContext();\n  }\n\n  #onTargetCrashed(): void {\n    this.emit(PageEvent.Error, new Error('Page crashed!'));\n  }\n\n  #onLogEntryAdded(event: Protocol.Log.EntryAddedEvent): void {\n    const {level, text, args, source, url, lineNumber} = event.entry;\n    if (args) {\n      args.map(arg => {\n        void releaseObject(this.#primaryTargetClient, arg);\n      });\n    }\n    if (source !== 'worker') {\n      this.emit(\n        PageEvent.Console,\n        new ConsoleMessage(\n          convertConsoleMessageLevel(level),\n          text,\n          [],\n          [{url, lineNumber}]\n        )\n      );\n    }\n  }\n\n  override mainFrame(): CdpFrame {\n    return this.#frameManager.mainFrame();\n  }\n\n  override get keyboard(): CdpKeyboard {\n    return this.#keyboard;\n  }\n\n  override get touchscreen(): CdpTouchscreen {\n    return this.#touchscreen;\n  }\n\n  override get coverage(): Coverage {\n    return this.#coverage;\n  }\n\n  override get tracing(): Tracing {\n    return this.#tracing;\n  }\n\n  override frames(): Frame[] {\n    return this.#frameManager.frames();\n  }\n\n  override workers(): CdpWebWorker[] {\n    return Array.from(this.#workers.values());\n  }\n\n  override async setRequestInterception(value: boolean): Promise<void> {\n    return await this.#frameManager.networkManager.setRequestInterception(\n      value\n    );\n  }\n\n  override async setBypassServiceWorker(bypass: boolean): Promise<void> {\n    this.#serviceWorkerBypassed = bypass;\n    return await this.#primaryTargetClient.send(\n      'Network.setBypassServiceWorker',\n      {bypass}\n    );\n  }\n\n  override async setDragInterception(enabled: boolean): Promise<void> {\n    this.#userDragInterceptionEnabled = enabled;\n    return await this.#primaryTargetClient.send('Input.setInterceptDrags', {\n      enabled,\n    });\n  }\n\n  override async setOfflineMode(enabled: boolean): Promise<void> {\n    return await this.#frameManager.networkManager.setOfflineMode(enabled);\n  }\n\n  override async emulateNetworkConditions(\n    networkConditions: NetworkConditions | null\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.emulateNetworkConditions(\n      networkConditions\n    );\n  }\n\n  override setDefaultNavigationTimeout(timeout: number): void {\n    this._timeoutSettings.setDefaultNavigationTimeout(timeout);\n  }\n\n  override setDefaultTimeout(timeout: number): void {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n\n  override getDefaultTimeout(): number {\n    return this._timeoutSettings.timeout();\n  }\n\n  override async queryObjects<Prototype>(\n    prototypeHandle: JSHandle<Prototype>\n  ): Promise<JSHandle<Prototype[]>> {\n    assert(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n    assert(\n      prototypeHandle.id,\n      'Prototype JSHandle must not be referencing primitive value'\n    );\n    const response = await this.mainFrame().client.send(\n      'Runtime.queryObjects',\n      {\n        prototypeObjectId: prototypeHandle.id,\n      }\n    );\n    return this.mainFrame()\n      .mainRealm()\n      .createCdpHandle(response.objects) as HandleFor<Prototype[]>;\n  }\n\n  override async cookies(...urls: string[]): Promise<Cookie[]> {\n    const originalCookies = (\n      await this.#primaryTargetClient.send('Network.getCookies', {\n        urls: urls.length ? urls : [this.url()],\n      })\n    ).cookies;\n\n    const unsupportedCookieAttributes = ['sourcePort'];\n    const filterUnsupportedAttributes = (\n      cookie: Protocol.Network.Cookie\n    ): Protocol.Network.Cookie => {\n      for (const attr of unsupportedCookieAttributes) {\n        delete (cookie as unknown as Record<string, unknown>)[attr];\n      }\n      return cookie;\n    };\n    return originalCookies.map(filterUnsupportedAttributes).map(cookie => {\n      return {\n        ...cookie,\n        // TODO: a breaking change is needed in Puppeteer types to support other\n        // partition keys.\n        partitionKey: cookie.partitionKey\n          ? cookie.partitionKey.topLevelSite\n          : undefined,\n      };\n    });\n  }\n\n  override async deleteCookie(\n    ...cookies: DeleteCookiesRequest[]\n  ): Promise<void> {\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = {\n        ...cookie,\n        // TODO: a breaking change neeeded to change the partition key\n        // type in Puppeteer.\n        partitionKey: cookie.partitionKey\n          ? {topLevelSite: cookie.partitionKey, hasCrossSiteAncestor: false}\n          : undefined,\n      };\n      if (!cookie.url && pageURL.startsWith('http')) {\n        item.url = pageURL;\n      }\n      await this.#primaryTargetClient.send('Network.deleteCookies', item);\n      if (pageURL.startsWith('http') && !item.partitionKey) {\n        const url = new URL(pageURL);\n        // Delete also cookies from the page's partition.\n        await this.#primaryTargetClient.send('Network.deleteCookies', {\n          ...item,\n          partitionKey: {\n            topLevelSite: url.origin.replace(`:${url.port}`, ''),\n            hasCrossSiteAncestor: false,\n          },\n        });\n      }\n    }\n  }\n\n  override async setCookie(...cookies: CookieParam[]): Promise<void> {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP) {\n        item.url = pageURL;\n      }\n      assert(\n        item.url !== 'about:blank',\n        `Blank page can not have cookie \"${item.name}\"`\n      );\n      assert(\n        !String.prototype.startsWith.call(item.url || '', 'data:'),\n        `Data URL page can not have cookie \"${item.name}\"`\n      );\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length) {\n      await this.#primaryTargetClient.send('Network.setCookies', {\n        cookies: items.map(cookieParam => {\n          return {\n            ...cookieParam,\n            partitionKey: cookieParam.partitionKey\n              ? {\n                  // TODO: a breaking change neeeded to change the partition key\n                  // type in Puppeteer.\n                  topLevelSite: cookieParam.partitionKey,\n                  hasCrossSiteAncestor: false,\n                }\n              : undefined,\n          };\n        }),\n      });\n    }\n  }\n\n  override async exposeFunction(\n    name: string,\n    pptrFunction: Function | {default: Function}\n  ): Promise<void> {\n    if (this.#bindings.has(name)) {\n      throw new Error(\n        `Failed to add page binding with name ${name}: window['${name}'] already exists!`\n      );\n    }\n    const source = pageBindingInitString('exposedFun', name);\n    let binding: Binding;\n    switch (typeof pptrFunction) {\n      case 'function':\n        binding = new Binding(\n          name,\n          pptrFunction as (...args: unknown[]) => unknown,\n          source\n        );\n        break;\n      default:\n        binding = new Binding(\n          name,\n          pptrFunction.default as (...args: unknown[]) => unknown,\n          source\n        );\n        break;\n    }\n    this.#bindings.set(name, binding);\n    const [{identifier}] = await Promise.all([\n      this.#frameManager.evaluateOnNewDocument(source),\n      this.#frameManager.addExposedFunctionBinding(binding),\n    ]);\n    this.#exposedFunctions.set(name, identifier);\n  }\n\n  override async removeExposedFunction(name: string): Promise<void> {\n    const exposedFunctionId = this.#exposedFunctions.get(name);\n    if (!exposedFunctionId) {\n      throw new Error(`Function with name \"${name}\" does not exist`);\n    }\n    // #bindings must be updated together with #exposedFunctions.\n    const binding = this.#bindings.get(name)!;\n    this.#exposedFunctions.delete(name);\n    this.#bindings.delete(name);\n    await Promise.all([\n      this.#frameManager.removeScriptToEvaluateOnNewDocument(exposedFunctionId),\n      this.#frameManager.removeExposedFunctionBinding(binding),\n    ]);\n  }\n\n  override async authenticate(credentials: Credentials | null): Promise<void> {\n    return await this.#frameManager.networkManager.authenticate(credentials);\n  }\n\n  override async setExtraHTTPHeaders(\n    headers: Record<string, string>\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.setExtraHTTPHeaders(headers);\n  }\n\n  override async setUserAgent(\n    userAgent: string,\n    userAgentMetadata?: Protocol.Emulation.UserAgentMetadata\n  ): Promise<void> {\n    return await this.#frameManager.networkManager.setUserAgent(\n      userAgent,\n      userAgentMetadata\n    );\n  }\n\n  override async metrics(): Promise<Metrics> {\n    const response = await this.#primaryTargetClient.send(\n      'Performance.getMetrics'\n    );\n    return this.#buildMetricsObject(response.metrics);\n  }\n\n  #emitMetrics(event: Protocol.Performance.MetricsEvent): void {\n    this.emit(PageEvent.Metrics, {\n      title: event.title,\n      metrics: this.#buildMetricsObject(event.metrics),\n    });\n  }\n\n  #buildMetricsObject(metrics?: Protocol.Performance.Metric[]): Metrics {\n    const result: Record<\n      Protocol.Performance.Metric['name'],\n      Protocol.Performance.Metric['value']\n    > = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name)) {\n        result[metric.name] = metric.value;\n      }\n    }\n    return result;\n  }\n\n  #handleException(exception: Protocol.Runtime.ExceptionThrownEvent): void {\n    this.emit(\n      PageEvent.PageError,\n      createClientError(exception.exceptionDetails)\n    );\n  }\n\n  #onConsoleAPI(\n    world: IsolatedWorld,\n    event: Protocol.Runtime.ConsoleAPICalledEvent\n  ): void {\n    const values = event.args.map(arg => {\n      return world.createCdpHandle(arg);\n    });\n    this.#addConsoleMessage(\n      convertConsoleMessageLevel(event.type),\n      values,\n      event.stackTrace\n    );\n  }\n\n  async #onBindingCalled(\n    world: IsolatedWorld,\n    event: Protocol.Runtime.BindingCalledEvent\n  ): Promise<void> {\n    let payload: BindingPayload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {type, name, seq, args, isTrivial} = payload;\n    if (type !== 'exposedFun') {\n      return;\n    }\n\n    const context = world.context;\n    if (!context) {\n      return;\n    }\n\n    const binding = this.#bindings.get(name);\n    await binding?.run(context, seq, args, isTrivial);\n  }\n\n  #addConsoleMessage(\n    eventType: string,\n    args: JSHandle[],\n    stackTrace?: Protocol.Runtime.StackTrace\n  ): void {\n    if (!this.listenerCount(PageEvent.Console)) {\n      args.forEach(arg => {\n        return arg.dispose();\n      });\n      return;\n    }\n    const textTokens = [];\n    // eslint-disable-next-line max-len -- The comment is long.\n    // eslint-disable-next-line rulesdir/use-using -- These are not owned by this function.\n    for (const arg of args) {\n      const remoteObject = arg.remoteObject();\n      if (remoteObject.objectId) {\n        textTokens.push(arg.toString());\n      } else {\n        textTokens.push(valueFromRemoteObject(remoteObject));\n      }\n    }\n    const stackTraceLocations = [];\n    if (stackTrace) {\n      for (const callFrame of stackTrace.callFrames) {\n        stackTraceLocations.push({\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber,\n        });\n      }\n    }\n    const message = new ConsoleMessage(\n      convertConsoleMessageLevel(eventType),\n      textTokens.join(' '),\n      args,\n      stackTraceLocations\n    );\n    this.emit(PageEvent.Console, message);\n  }\n\n  #onDialog(event: Protocol.Page.JavascriptDialogOpeningEvent): void {\n    const type = validateDialogType(event.type);\n    const dialog = new CdpDialog(\n      this.#primaryTargetClient,\n      type,\n      event.message,\n      event.defaultPrompt\n    );\n    this.emit(PageEvent.Dialog, dialog);\n  }\n\n  override async reload(\n    options?: WaitForOptions\n  ): Promise<HTTPResponse | null> {\n    const [result] = await Promise.all([\n      this.waitForNavigation({\n        ...options,\n        ignoreSameDocumentNavigation: true,\n      }),\n      this.#primaryTargetClient.send('Page.reload'),\n    ]);\n\n    return result;\n  }\n\n  override async createCDPSession(): Promise<CDPSession> {\n    return await this.target().createCDPSession();\n  }\n\n  override async goBack(\n    options: WaitForOptions = {}\n  ): Promise<HTTPResponse | null> {\n    return await this.#go(-1, options);\n  }\n\n  override async goForward(\n    options: WaitForOptions = {}\n  ): Promise<HTTPResponse | null> {\n    return await this.#go(+1, options);\n  }\n\n  async #go(\n    delta: number,\n    options: WaitForOptions\n  ): Promise<HTTPResponse | null> {\n    const history = await this.#primaryTargetClient.send(\n      'Page.getNavigationHistory'\n    );\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      return null;\n    }\n    const result = await Promise.all([\n      this.waitForNavigation(options),\n      this.#primaryTargetClient.send('Page.navigateToHistoryEntry', {\n        entryId: entry.id,\n      }),\n    ]);\n    return result[0];\n  }\n\n  override async bringToFront(): Promise<void> {\n    await this.#primaryTargetClient.send('Page.bringToFront');\n  }\n\n  override async setJavaScriptEnabled(enabled: boolean): Promise<void> {\n    return await this.#emulationManager.setJavaScriptEnabled(enabled);\n  }\n\n  override async setBypassCSP(enabled: boolean): Promise<void> {\n    await this.#primaryTargetClient.send('Page.setBypassCSP', {enabled});\n  }\n\n  override async emulateMediaType(type?: string): Promise<void> {\n    return await this.#emulationManager.emulateMediaType(type);\n  }\n\n  override async emulateCPUThrottling(factor: number | null): Promise<void> {\n    return await this.#emulationManager.emulateCPUThrottling(factor);\n  }\n\n  override async emulateMediaFeatures(\n    features?: MediaFeature[]\n  ): Promise<void> {\n    return await this.#emulationManager.emulateMediaFeatures(features);\n  }\n\n  override async emulateTimezone(timezoneId?: string): Promise<void> {\n    return await this.#emulationManager.emulateTimezone(timezoneId);\n  }\n\n  override async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void> {\n    return await this.#emulationManager.emulateIdleState(overrides);\n  }\n\n  override async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void> {\n    return await this.#emulationManager.emulateVisionDeficiency(type);\n  }\n\n  override async setViewport(viewport: Viewport | null): Promise<void> {\n    const needsReload = await this.#emulationManager.emulateViewport(viewport);\n    this.#viewport = viewport;\n    if (needsReload) {\n      await this.reload();\n    }\n  }\n\n  override viewport(): Viewport | null {\n    return this.#viewport;\n  }\n\n  override async evaluateOnNewDocument<\n    Params extends unknown[],\n    Func extends (...args: Params) => unknown = (...args: Params) => unknown,\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<NewDocumentScriptEvaluation> {\n    const source = evaluationString(pageFunction, ...args);\n    return await this.#frameManager.evaluateOnNewDocument(source);\n  }\n\n  override async removeScriptToEvaluateOnNewDocument(\n    identifier: string\n  ): Promise<void> {\n    return await this.#frameManager.removeScriptToEvaluateOnNewDocument(\n      identifier\n    );\n  }\n\n  override async setCacheEnabled(enabled = true): Promise<void> {\n    await this.#frameManager.networkManager.setCacheEnabled(enabled);\n  }\n\n  override async _screenshot(\n    options: Readonly<ScreenshotOptions>\n  ): Promise<string> {\n    const {\n      fromSurface,\n      omitBackground,\n      optimizeForSpeed,\n      quality,\n      clip: userClip,\n      type,\n      captureBeyondViewport,\n    } = options;\n\n    const isFirefox =\n      this.target()._targetManager() instanceof FirefoxTargetManager;\n\n    await using stack = new AsyncDisposableStack();\n    // Firefox omits background by default; it's not configurable.\n    if (!isFirefox && omitBackground && (type === 'png' || type === 'webp')) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n      stack.defer(async () => {\n        await this.#emulationManager\n          .resetDefaultBackgroundColor()\n          .catch(debugError);\n      });\n    }\n\n    let clip = userClip;\n    if (clip && !captureBeyondViewport) {\n      const viewport = await this.mainFrame()\n        .isolatedRealm()\n        .evaluate(() => {\n          const {\n            height,\n            pageLeft: x,\n            pageTop: y,\n            width,\n          } = window.visualViewport!;\n          return {x, y, height, width};\n        });\n      clip = getIntersectionRect(clip, viewport);\n    }\n\n    // We need to do these spreads because Firefox doesn't allow unknown options.\n    const {data} = await this.#primaryTargetClient.send(\n      'Page.captureScreenshot',\n      {\n        format: type,\n        ...(optimizeForSpeed ? {optimizeForSpeed} : {}),\n        ...(quality !== undefined ? {quality: Math.round(quality)} : {}),\n        ...(clip ? {clip: {...clip, scale: clip.scale ?? 1}} : {}),\n        ...(!fromSurface ? {fromSurface} : {}),\n        captureBeyondViewport,\n      }\n    );\n    return data;\n  }\n\n  override async createPDFStream(\n    options: PDFOptions = {}\n  ): Promise<ReadableStream<Uint8Array>> {\n    const {timeout: ms = this._timeoutSettings.timeout()} = options;\n    const {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      width: paperWidth,\n      height: paperHeight,\n      margin,\n      pageRanges,\n      preferCSSPageSize,\n      omitBackground,\n      tagged: generateTaggedPDF,\n      outline: generateDocumentOutline,\n      waitForFonts,\n    } = parsePDFOptions(options);\n\n    if (omitBackground) {\n      await this.#emulationManager.setTransparentBackgroundColor();\n    }\n\n    if (waitForFonts) {\n      await firstValueFrom(\n        from(\n          this.mainFrame()\n            .isolatedRealm()\n            .evaluate(() => {\n              return document.fonts.ready;\n            })\n        ).pipe(raceWith(timeout(ms)))\n      );\n    }\n\n    const printCommandPromise = this.#primaryTargetClient.send(\n      'Page.printToPDF',\n      {\n        transferMode: 'ReturnAsStream',\n        landscape,\n        displayHeaderFooter,\n        headerTemplate,\n        footerTemplate,\n        printBackground,\n        scale,\n        paperWidth,\n        paperHeight,\n        marginTop: margin.top,\n        marginBottom: margin.bottom,\n        marginLeft: margin.left,\n        marginRight: margin.right,\n        pageRanges,\n        preferCSSPageSize,\n        generateTaggedPDF,\n        generateDocumentOutline,\n      }\n    );\n\n    const result = await firstValueFrom(\n      from(printCommandPromise).pipe(raceWith(timeout(ms)))\n    );\n\n    if (omitBackground) {\n      await this.#emulationManager.resetDefaultBackgroundColor();\n    }\n\n    assert(result.stream, '`stream` is missing from `Page.printToPDF');\n    return await getReadableFromProtocolStream(\n      this.#primaryTargetClient,\n      result.stream\n    );\n  }\n\n  override async pdf(options: PDFOptions = {}): Promise<Uint8Array> {\n    const {path = undefined} = options;\n    const readable = await this.createPDFStream(options);\n    const typedArray = await getReadableAsTypedArray(readable, path);\n    assert(typedArray, 'Could not create typed array');\n    return typedArray;\n  }\n\n  override async close(\n    options: {runBeforeUnload?: boolean} = {runBeforeUnload: undefined}\n  ): Promise<void> {\n    using _guard = await this.browserContext().waitForScreenshotOperations();\n    const connection = this.#primaryTargetClient.connection();\n    assert(\n      connection,\n      'Protocol error: Connection closed. Most likely the page has been closed.'\n    );\n    const runBeforeUnload = !!options.runBeforeUnload;\n    if (runBeforeUnload) {\n      await this.#primaryTargetClient.send('Page.close');\n    } else {\n      await connection.send('Target.closeTarget', {\n        targetId: this.#primaryTarget._targetId,\n      });\n      await this.#tabTarget._isClosedDeferred.valueOrThrow();\n    }\n  }\n\n  override isClosed(): boolean {\n    return this.#closed;\n  }\n\n  override get mouse(): CdpMouse {\n    return this.#mouse;\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  override async waitForDevicePrompt(\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPrompt> {\n    return await this.mainFrame().waitForDevicePrompt(options);\n  }\n}\n\nconst supportedMetrics = new Set<string>([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/** @see https://w3c.github.io/webdriver-bidi/#rectangle-intersection */\nfunction getIntersectionRect(\n  clip: Readonly<ScreenshotClip>,\n  viewport: Readonly<Protocol.DOM.Rect>\n): ScreenshotClip {\n  // Note these will already be normalized.\n  const x = Math.max(clip.x, viewport.x);\n  const y = Math.max(clip.y, viewport.y);\n  return {\n    x,\n    y,\n    width: Math.max(\n      Math.min(clip.x + clip.width, viewport.x + viewport.width) - x,\n      0\n    ),\n    height: Math.max(\n      Math.min(clip.y + clip.height, viewport.y + viewport.height) - y,\n      0\n    ),\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}