{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScriptProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst PreloadScript_js_1 = require(\"./PreloadScript.js\");\nclass ScriptProcessor {\n  #browsingContextStorage;\n  #realmStorage;\n  #preloadScriptStorage;\n  #logger;\n  constructor(browsingContextStorage, realmStorage, preloadScriptStorage, logger) {\n    this.#browsingContextStorage = browsingContextStorage;\n    this.#realmStorage = realmStorage;\n    this.#preloadScriptStorage = preloadScriptStorage;\n    this.#logger = logger;\n  }\n  async addPreloadScript(params) {\n    const contexts = this.#browsingContextStorage.verifyTopLevelContextsList(params.contexts);\n    const preloadScript = new PreloadScript_js_1.PreloadScript(params, this.#logger);\n    this.#preloadScriptStorage.add(preloadScript);\n    const cdpTargets = contexts.size === 0 ? new Set(this.#browsingContextStorage.getTopLevelContexts().map(context => context.cdpTarget)) : new Set([...contexts.values()].map(context => context.cdpTarget));\n    await preloadScript.initInTargets(cdpTargets, false);\n    return {\n      script: preloadScript.id\n    };\n  }\n  async removePreloadScript(params) {\n    const {\n      script: id\n    } = params;\n    const scripts = this.#preloadScriptStorage.find({\n      id\n    });\n    if (scripts.length === 0) {\n      throw new protocol_js_1.NoSuchScriptException(`No preload script with id '${id}'`);\n    }\n    await Promise.all(scripts.map(script => script.remove()));\n    this.#preloadScriptStorage.remove({\n      id\n    });\n    return {};\n  }\n  async callFunction(params) {\n    const realm = await this.#getRealm(params.target);\n    return await realm.callFunction(params.functionDeclaration, params.awaitPromise, params.this, params.arguments, params.resultOwnership, params.serializationOptions, params.userActivation);\n  }\n  async evaluate(params) {\n    const realm = await this.#getRealm(params.target);\n    return await realm.evaluate(params.expression, params.awaitPromise, params.resultOwnership, params.serializationOptions, params.userActivation);\n  }\n  async disown(params) {\n    const realm = await this.#getRealm(params.target);\n    await Promise.all(params.handles.map(async handle => await realm.disown(handle)));\n    return {};\n  }\n  getRealms(params) {\n    if (params.context !== undefined) {\n      // Make sure the context is known.\n      this.#browsingContextStorage.getContext(params.context);\n    }\n    const realms = this.#realmStorage.findRealms({\n      browsingContextId: params.context,\n      type: params.type\n    }).map(realm => realm.realmInfo);\n    return {\n      realms\n    };\n  }\n  async #getRealm(target) {\n    if ('context' in target) {\n      const context = this.#browsingContextStorage.getContext(target.context);\n      return await context.getOrCreateSandbox(target.sandbox);\n    }\n    return this.#realmStorage.getRealm({\n      realmId: target.realm\n    });\n  }\n}\nexports.ScriptProcessor = ScriptProcessor;","map":{"version":3,"names":["protocol_js_1","require","PreloadScript_js_1","ScriptProcessor","browsingContextStorage","realmStorage","preloadScriptStorage","logger","constructor","addPreloadScript","params","contexts","verifyTopLevelContextsList","preloadScript","PreloadScript","add","cdpTargets","size","Set","getTopLevelContexts","map","context","cdpTarget","values","initInTargets","script","id","removePreloadScript","scripts","find","length","NoSuchScriptException","Promise","all","remove","callFunction","realm","getRealm","target","functionDeclaration","awaitPromise","this","arguments","resultOwnership","serializationOptions","userActivation","evaluate","expression","disown","handles","handle","getRealms","undefined","getContext","realms","findRealms","browsingContextId","type","realmInfo","#getRealm","getOrCreateSandbox","sandbox","realmId","exports"],"sources":["../../../../../src/bidiMapper/modules/script/ScriptProcessor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}